---
archs:           [ armv7, armv7s, arm64 ]
platform:        ios
install-name:    /System/Library/PrivateFrameworks/PhotoBoothEffects.framework/PhotoBoothEffects
exports:         
  - archs:           [ armv7, armv7s, arm64 ]
    symbols:         [ _bump_fragment_shader_source, '+[PBContext openCLContext]', 
                       '+[PBContext openGLContext:]', '+[PBContext openGLContext]', 
                       '+[PBFilter filterWithName:]', '+[PBFilter(PBFilterPrivate) defaultValueForKey:]', 
                       '+[PBFilter(PBFilterPrivate) needsDisplayForKey:]', 
                       '+[PBFilterClassDescription classDescriptionForClass:]', 
                       '-[PBContext applyFilter:toSurface:mirrored:resultHandler:]', 
                       '-[PBContext applyFilter:toSurface:mirrored:surfaceResultHandler:]', 
                       '-[PBContext createCVPixelBufferForFilter:inputPixelBuffer:]', 
                       '-[PBContext createCVPixelBufferForFilter:inputPixelBuffer:mirrored:]', 
                       '-[PBContext init]', '-[PBContext largePool]', '-[PBContext outputImageQueue]', 
                       '-[PBContext preloadFilter:]', '-[PBContext renderFilter:inputPixelBuffer:]', 
                       '-[PBContext renderFilter:inputPixelBuffer:mirrored:]', 
                       '-[PBContext renderNineUp:inputPixelBuffer:]', '-[PBContext renderNineUp:inputPixelBuffer:mirrored:]', 
                       '-[PBContext setLargePool:]', '-[PBContext setOutputImageQueue:]', 
                       '-[PBContext setSmallPool:]', '-[PBContext smallPool]', 
                       '-[PBCoreImageContext ciContext]', '-[PBCoreImageContext createCVPixelBufferForFilter:inputPixelBuffer:mirrored:]', 
                       '-[PBCoreImageContext dealloc]', '-[PBCoreImageContext initWithOptions:]', 
                       '-[PBCoreImageContext inputPixelBuffer]', '-[PBCoreImageContext inputTexture]', 
                       '-[PBCoreImageContext largePool]', '-[PBCoreImageContext outputImageQueue]', 
                       '-[PBCoreImageContext outputPixelBuffer]', '-[PBCoreImageContext outputSize]', 
                       '-[PBCoreImageContext outputTexture]', '-[PBCoreImageContext render9Up]', 
                       '-[PBCoreImageContext renderFilter:inputPixelBuffer:]', 
                       '-[PBCoreImageContext renderFilter:inputPixelBuffer:mirrored:]', 
                       '-[PBCoreImageContext renderForSave]', '-[PBCoreImageContext renderNineUp:inputPixelBuffer:]', 
                       '-[PBCoreImageContext renderNineUp:inputPixelBuffer:mirrored:]', 
                       '-[PBCoreImageContext setInputPixelBuffer:]', '-[PBCoreImageContext setInputPixelBuffer:mapTexture:]', 
                       '-[PBCoreImageContext setLargePool:]', '-[PBCoreImageContext setOutputImageQueue:]', 
                       '-[PBCoreImageContext setOutputPixelBuffer:]', '-[PBCoreImageContext setOutputPixelBuffer:mapTexture:]', 
                       '-[PBCoreImageContext setOutputSize:]', '-[PBCoreImageContext setRender9Up:]', 
                       '-[PBCoreImageContext setRenderForSave:]', '-[PBCoreImageContext setSmallPool:]', 
                       '-[PBCoreImageContext smallPool]', '-[PBCoreImageContext(PBCoreImageContextPrivate) _createPixelBuffer:withSize:]', 
                       '-[PBFilter applyParametersToCIFilter:extent:]', 
                       '-[PBFilter ciFilterName]', '-[PBFilter ciFilter]', 
                       '-[PBFilter createOutputImage:mirrored:size:]', 
                       '-[PBFilter dealloc]', '-[PBFilter description]', 
                       '-[PBFilter init]', '-[PBFilter inputKeys]', '-[PBFilter localizedName]', 
                       '-[PBFilter name]', '-[PBFilter needsWrapMirror]', 
                       '-[PBFilter resetInputImage]', '-[PBFilter setDefaults]', 
                       '-[PBFilter(Gestures) floatValueForKeyIfSupported:]', 
                       '-[PBFilter(Gestures) handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:]', 
                       '-[PBFilter(Gestures) handlePanGesture:viewSize:stateBegan:mirror:]', 
                       '-[PBFilter(Gestures) handlePinchGesture:stateBegan:]', 
                       '-[PBFilter(Gestures) handleRotateGesture:stateBegan:mirror:]', 
                       '-[PBFilter(Gestures) handleTapGesture:viewSize:mirror:]', 
                       '-[PBFilter(Gestures) pointValueForKeyIfSupported:]', 
                       '-[PBFilter(Gestures) setFloatValue:forKeyIfSupported:]', 
                       '-[PBFilter(Gestures) setPointValue:forKeyIfSupported:]', 
                       '-[PBFilter(PBFilterPrivate) _presentationName]', 
                       '-[PBFilter(PBFilterPrivate) allowAbsoluteGestures]', 
                       '-[PBFilter(PBFilterPrivate) renderWithContext:inputSize:outputRect:mirrored:]', 
                       '-[PBFilterClassDescription attributes]', '-[PBFilterClassDescription initWithClass:]', 
                       '-[PBFilterClassDescription inputKeys]', '-[PBKaleidoscopeFilter allowAbsoluteGestures]', 
                       '-[PBKaleidoscopeFilter applyParametersToCIFilter:extent:]', 
                       '-[PBKaleidoscopeFilter ciFilterName]', '-[PBKaleidoscopeFilter inputAmount]', 
                       '-[PBKaleidoscopeFilter inputPoint]', '-[PBKaleidoscopeFilter inputRotation]', 
                       '-[PBKaleidoscopeFilter needsWrapMirror]', '-[PBKaleidoscopeFilter setDefaults]', 
                       '-[PBKaleidoscopeFilter setInputAmount:]', '-[PBKaleidoscopeFilter setInputPoint:]', 
                       '-[PBKaleidoscopeFilter setInputRotation:]', '-[PBLightTunnelFilter applyParametersToCIFilter:extent:]', 
                       '-[PBLightTunnelFilter ciFilterName]', '-[PBLightTunnelFilter inputAmount]', 
                       '-[PBLightTunnelFilter inputPoint]', '-[PBLightTunnelFilter inputRotation]', 
                       '-[PBLightTunnelFilter needsWrapMirror]', '-[PBLightTunnelFilter setDefaults]', 
                       '-[PBLightTunnelFilter setInputAmount:]', '-[PBLightTunnelFilter setInputPoint:]', 
                       '-[PBLightTunnelFilter setInputRotation:]', '-[PBMirrorFilter applyParametersToCIFilter:extent:]', 
                       '-[PBMirrorFilter ciFilterName]', '-[PBMirrorFilter inputOrientation]', 
                       '-[PBMirrorFilter inputPoint]', '-[PBMirrorFilter needsWrapMirror]', 
                       '-[PBMirrorFilter setDefaults]', '-[PBMirrorFilter setInputOrientation:]', 
                       '-[PBMirrorFilter setInputPoint:]', '-[PBSqueezeFilter applyParametersToCIFilter:extent:]', 
                       '-[PBSqueezeFilter ciFilterName]', '-[PBSqueezeFilter inputAmount]', 
                       '-[PBSqueezeFilter inputPoint]', '-[PBSqueezeFilter needsWrapMirror]', 
                       '-[PBSqueezeFilter setDefaults]', '-[PBSqueezeFilter setInputAmount:]', 
                       '-[PBSqueezeFilter setInputPoint:]', '-[PBStretchFilter applyParametersToCIFilter:extent:]', 
                       '-[PBStretchFilter ciFilterName]', '-[PBStretchFilter inputPoint]', 
                       '-[PBStretchFilter needsWrapMirror]', '-[PBStretchFilter setDefaults]', 
                       '-[PBStretchFilter setInputPoint:]', '-[PBThermalFilter ciFilterName]', 
                       '-[PBTwirlFilter applyParametersToCIFilter:extent:]', 
                       '-[PBTwirlFilter ciFilterName]', '-[PBTwirlFilter inputAmount]', 
                       '-[PBTwirlFilter inputPoint]', '-[PBTwirlFilter inputRotation]', 
                       '-[PBTwirlFilter needsWrapMirror]', '-[PBTwirlFilter setDefaults]', 
                       '-[PBTwirlFilter setInputAmount:]', '-[PBTwirlFilter setInputPoint:]', 
                       '-[PBTwirlFilter setInputRotation:]', '-[PBXRayFilter ciFilterName]', 
                       GCC_except_table18, GCC_except_table9, '___58-[PBContext applyFilter:toSurface:mirrored:resultHandler:]_block_invoke', 
                       '___65-[PBContext applyFilter:toSurface:mirrored:surfaceResultHandler:]_block_invoke', 
                       '___68-[PBContext createCVPixelBufferForFilter:inputPixelBuffer:mirrored:]_block_invoke', 
                       ___block_descriptor_tmp, ___block_descriptor_tmp.33, 
                       ___block_descriptor_tmp.39, ___copy_helper_block_, 
                       ___copy_helper_block_.30, ___copy_helper_block_.36, 
                       ___destroy_helper_block_, ___destroy_helper_block_.31, 
                       ___destroy_helper_block_.37, _clamp, '_classDescriptionForClass:.mutex', 
                       '_classDescriptionForClass:.table', _default_vertex_shader_source, 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._end2time', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._lastangle', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._lastcount', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._maxcount', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._startA', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._startAmt', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._startDist', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._startH', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._startV', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._startX', 
                       '_handleGestureAtLocations:count:translation:viewSize:stateBegan:mirror:._startY', 
                       '_handlePanGesture:viewSize:stateBegan:mirror:.startA', 
                       '_handlePanGesture:viewSize:stateBegan:mirror:.startH', 
                       '_handlePanGesture:viewSize:stateBegan:mirror:.startV', 
                       '_handlePanGesture:viewSize:stateBegan:mirror:.startX', 
                       '_handlePanGesture:viewSize:stateBegan:mirror:.startY', 
                       '_handlePinchGesture:stateBegan:.beganAmount', '_handlePinchGesture:stateBegan:.beganScale', 
                       '_handleRotateGesture:stateBegan:mirror:.startRot', 
                       '_handleRotateGesture:stateBegan:mirror:.startVal', 
                       _image_queue_release_callback, _interpolate, _luma_lookup_fragment_shader_source ]
    objc-classes:    [ _PBContext, _PBCoreImageContext, _PBFilter, _PBFilterClassDescription, 
                       _PBKaleidoscopeFilter, _PBLightTunnelFilter, _PBMirrorFilter, 
                       _PBNormalFilter, _PBSqueezeFilter, _PBStretchFilter, 
                       _PBThermalFilter, _PBTwirlFilter, _PBXRayFilter ]
    objc-ivars:      [ _PBFilter._ciFilter, _PBCoreImageContext._ciContext, 
                       _PBCoreImageContext._glesContext, _PBCoreImageContext._inputPixelBuffer, 
                       _PBCoreImageContext._inputTexture, _PBCoreImageContext._largePool, 
                       _PBCoreImageContext._largePoolSize, _PBCoreImageContext._outputImageQueue, 
                       _PBCoreImageContext._outputPixelBuffer, _PBCoreImageContext._outputSize, 
                       _PBCoreImageContext._outputTexture, _PBCoreImageContext._render9Up, 
                       _PBCoreImageContext._renderForSave, _PBCoreImageContext._smallPool, 
                       _PBCoreImageContext._smallPoolSize, _PBCoreImageContext._textureCache, 
                       _PBFilter._wrapMirrorFilter, _PBFilterClassDescription._attributes, 
                       _PBFilterClassDescription._inputKeys, _PBKaleidoscopeFilter._inputAmount, 
                       _PBKaleidoscopeFilter.firstTime, _PBKaleidoscopeFilter.inputPoint, 
                       _PBKaleidoscopeFilter.inputRotation, _PBKaleidoscopeFilter.lastInputDecay, 
                       _PBKaleidoscopeFilter.lastInputRotation, _PBKaleidoscopeFilter.lastInputSize, 
                       _PBKaleidoscopeFilter.lastInputX, _PBKaleidoscopeFilter.lastInputY, 
                       _PBLightTunnelFilter._inputAmount, _PBLightTunnelFilter.firstTime, 
                       _PBLightTunnelFilter.inputPoint, _PBLightTunnelFilter.inputRotation, 
                       _PBLightTunnelFilter.lastInputRadius, _PBLightTunnelFilter.lastInputRotation, 
                       _PBLightTunnelFilter.lastInputX, _PBLightTunnelFilter.lastInputY, 
                       _PBMirrorFilter.firstTime, _PBMirrorFilter.inputOrientation, 
                       _PBMirrorFilter.inputPoint, _PBMirrorFilter.lastInputAngle, 
                       _PBMirrorFilter.lastInputX, _PBMirrorFilter.lastInputY, 
                       _PBSqueezeFilter._inputAmount, _PBSqueezeFilter.firstTime, 
                       _PBSqueezeFilter.inputPoint, _PBSqueezeFilter.lastInputRadius, 
                       _PBSqueezeFilter.lastInputScale, _PBSqueezeFilter.lastInputX, 
                       _PBSqueezeFilter.lastInputY, _PBStretchFilter.firstTime, 
                       _PBStretchFilter.inputPoint, _PBStretchFilter.lastInputX, 
                       _PBStretchFilter.lastInputY, _PBTwirlFilter._inputAmount, 
                       _PBTwirlFilter.firstTime, _PBTwirlFilter.inputPoint, 
                       _PBTwirlFilter.inputRotation, _PBTwirlFilter.lastInputAngle, 
                       _PBTwirlFilter.lastInputRadius, _PBTwirlFilter.lastInputX, 
                       _PBTwirlFilter.lastInputY ]
...
