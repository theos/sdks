---
archs:           [ armv7, armv7s, arm64 ]
platform:        ios
install-name:    /System/Library/PrivateFrameworks/CarKit.framework/CarKit
exports:         
  - archs:           [ armv7, armv7s, arm64 ]
    symbols:         [ _CARLimitedUIValueUserInterfaceJapanMaps, '+[CARSession _siriRequestEventForEndpointAction:]', 
                       '+[CARSessionConfiguration _descriptionForLimitableUserInterfaces:]', 
                       '+[CARSessionConfiguration _descriptionForTransportType:]', 
                       '+[CARSessionConfiguration _limitableUserInterfacesFromLimitedUIValues:]', 
                       '+[CRCarPlayAppDeclaration declarationForAppProxy:]', 
                       '+[CRCarPlayAppDeclaration declarationForBundleIdentifier:entitlements:infoPlist:]', 
                       '+[CRCarPlayAppDeclaration declarationForBundleIdentifier:info:entitlements:]', 
                       '+[CRCarPlayAppDeclaration requiredEntitlementKeys]', 
                       '+[CRCarPlayAppDeclaration requiredInfoKeys]', '+[CRCarPlayAppPolicyEvaluator _carIntentIdentifiers]', 
                       '+[CRVehicle supportsSecureCoding]', '+[CRVehicle vehicleForVehicleAccessory:]', 
                       '+[CRVehicleAccessoryManager _certificateSerialNumberForAccessory:]', 
                       '+[CRVehicleAccessoryManager _isValidAccessoryMacAddress:]', 
                       '+[CRVehicleAccessoryManager _isVehicleAccessory:]', 
                       '-[CARManufacturerIcon .cxx_destruct]', '-[CARManufacturerIcon description]', 
                       '-[CARManufacturerIcon imageData]', '-[CARManufacturerIcon initWithPropertySupplier:]', 
                       '-[CARManufacturerIcon isPrerendered]', '-[CARManufacturerIcon pixelSize]', 
                       '-[CARSession .cxx_destruct]', '-[CARSession MFiCertificateSerialNumber]', 
                       '-[CARSession _endpointValueForKey:]', '-[CARSession _fetchAuthenticationStatus]', 
                       '-[CARSession _handleOpenURL:]', '-[CARSession _handleSiriRequestEvent:]', 
                       '-[CARSession _performExtendedEndpointAction:]', 
                       '-[CARSession _setEndpointValue:forKey:]', '-[CARSession borrowScreenForClient:reason:]', 
                       '-[CARSession configuration]', '-[CARSession dealloc]', 
                       '-[CARSession description]', '-[CARSession electronicTollCollectionAvailable]', 
                       '-[CARSession endpoint]', '-[CARSession initWithFigEndpoint:]', 
                       '-[CARSession isAuthenticated]', '-[CARSession limitUserInterfaces]', 
                       '-[CARSession nightMode]', '-[CARSession ownsScreen]', 
                       '-[CARSession ownsTurnByTurnNavigation]', '-[CARSession recognizingSpeech]', 
                       '-[CARSession requestCarUIForURL:]', '-[CARSession requestCarUI]', 
                       '-[CARSession requestTurnByTurnNavigationOwnership]', 
                       '-[CARSession sessionDelegate]', '-[CARSession setSessionDelegate:]', 
                       '-[CARSession takeScreenForClient:reason:]', '-[CARSession takeScreenForConnection]', 
                       '-[CARSessionConfiguration .cxx_destruct]', '-[CARSessionConfiguration description]', 
                       '-[CARSessionConfiguration endpointIdentifier]', 
                       '-[CARSessionConfiguration initWithPropertySupplier:]', 
                       '-[CARSessionConfiguration limitableUserInterfaces]', 
                       '-[CARSessionConfiguration manufacturerIconLabel]', 
                       '-[CARSessionConfiguration manufacturerIconVisible]', 
                       '-[CARSessionConfiguration manufacturerIcons]', 
                       '-[CARSessionConfiguration modelName]', '-[CARSessionConfiguration name]', 
                       '-[CARSessionConfiguration rightHandDrive]', '-[CARSessionConfiguration transportType]', 
                       '-[CARSessionScreenBorrowToken .cxx_destruct]', 
                       '-[CARSessionScreenBorrowToken client]', '-[CARSessionScreenBorrowToken dealloc]', 
                       '-[CARSessionScreenBorrowToken initWithSession:client:reason:]', 
                       '-[CARSessionScreenBorrowToken reason]', '-[CARSessionScreenBorrowToken session]', 
                       '-[CARSessionStatus .cxx_destruct]', '-[CARSessionStatus _handleAuthenticationSucceeded:]', 
                       '-[CARSessionStatus _handleConnectingTimeout]', 
                       '-[CARSessionStatus _handleInCarNotification]', 
                       '-[CARSessionStatus _notifyCancelledConnectionAttemptOnTransport:]', 
                       '-[CARSessionStatus _notifyDidConnectSession:]', 
                       '-[CARSessionStatus _notifyDidDisconnectSession:]', 
                       '-[CARSessionStatus _notifyStartedConnectionAttemptOnTransport:]', 
                       '-[CARSessionStatus _startConnectingTimer]', '-[CARSessionStatus _stopConnectingTimer]', 
                       '-[CARSessionStatus _updateSession]', '-[CARSessionStatus connectingTimer]', 
                       '-[CARSessionStatus currentSession]', '-[CARSessionStatus dealloc]', 
                       '-[CARSessionStatus init]', '-[CARSessionStatus sessionObserver]', 
                       '-[CARSessionStatus sessionUpdatesQueue]', '-[CARSessionStatus session]', 
                       '-[CARSessionStatus setConnectingTimer:]', '-[CARSessionStatus setSession:]', 
                       '-[CARSessionStatus setSessionObserver:]', '-[CARSessionStatus setSessionUpdatesQueue:]', 
                       '-[CARSessionStatus setTimeoutInterval:]', '-[CARSessionStatus timeoutInterval]', 
                       '-[CARSessionStatus waitForSessionInitialization]', 
                       '-[CARSessionTurnByTurnToken .cxx_destruct]', '-[CARSessionTurnByTurnToken dealloc]', 
                       '-[CARSessionTurnByTurnToken initWithSession:]', 
                       '-[CARSessionTurnByTurnToken session]', '-[CRCarKitServiceClient .cxx_destruct]', 
                       '-[CRCarKitServiceClient _blockOnServiceSemaphore:]', 
                       '-[CRCarKitServiceClient _releaseAllServiceSemaphores]', 
                       '-[CRCarKitServiceClient _serviceSemaphore]', '-[CRCarKitServiceClient init]', 
                       '-[CRCarKitServiceClient outstandingSemaphores]', 
                       '-[CRCarKitServiceClient performServiceCallBlock:]', 
                       '-[CRCarKitServiceClient serviceConnection]', '-[CRCarKitServiceClient service]', 
                       '-[CRCarKitServiceClient setOutstandingSemaphores:]', 
                       '-[CRCarKitServiceClient setService:]', '-[CRCarKitServiceClient setServiceConnection:]', 
                       '-[CRCarPlayAppBlacklist .cxx_destruct]', '-[CRCarPlayAppBlacklist _fetchBlacklist]', 
                       '-[CRCarPlayAppBlacklist blacklistAccessQueue]', 
                       '-[CRCarPlayAppBlacklist blacklistedBundleIDs]', 
                       '-[CRCarPlayAppBlacklist containsBundleIdentifier:]', 
                       '-[CRCarPlayAppBlacklist init]', '-[CRCarPlayAppBlacklist setBlacklistAccessQueue:]', 
                       '-[CRCarPlayAppBlacklist setBlacklistedBundleIDs:]', 
                       '-[CRCarPlayAppDeclaration .cxx_destruct]', '-[CRCarPlayAppDeclaration autoMakerProtocols]', 
                       '-[CRCarPlayAppDeclaration bundleIdentifier]', '-[CRCarPlayAppDeclaration isSystemApp]', 
                       '-[CRCarPlayAppDeclaration launchUsingSiri]', '-[CRCarPlayAppDeclaration requiresGeoSupport]', 
                       '-[CRCarPlayAppDeclaration setAutoMakerProtocols:]', 
                       '-[CRCarPlayAppDeclaration setBundleIdentifier:]', 
                       '-[CRCarPlayAppDeclaration setLaunchUsingSiri:]', 
                       '-[CRCarPlayAppDeclaration setRequiresGeoSupport:]', 
                       '-[CRCarPlayAppDeclaration setSupportsCalling:]', 
                       '-[CRCarPlayAppDeclaration setSupportsMessaging:]', 
                       '-[CRCarPlayAppDeclaration setSupportsPlayableContent:]', 
                       '-[CRCarPlayAppDeclaration setSystemApp:]', '-[CRCarPlayAppDeclaration supportsCalling]', 
                       '-[CRCarPlayAppDeclaration supportsMessaging]', 
                       '-[CRCarPlayAppDeclaration supportsPlayableContent]', 
                       '-[CRCarPlayAppPolicy .cxx_destruct]', '-[CRCarPlayAppPolicy badgesAppIcon]', 
                       '-[CRCarPlayAppPolicy canDisplayOnCarScreen]', '-[CRCarPlayAppPolicy handlesCarIntents]', 
                       '-[CRCarPlayAppPolicy init]', '-[CRCarPlayAppPolicy isCarPlaySupported]', 
                       '-[CRCarPlayAppPolicy launchUsingMusicUIService]', 
                       '-[CRCarPlayAppPolicy launchUsingSiri]', '-[CRCarPlayAppPolicy setBadgesAppIcon:]', 
                       '-[CRCarPlayAppPolicy setCanDisplayOnCarScreen:]', 
                       '-[CRCarPlayAppPolicy setCarPlaySupported:]', '-[CRCarPlayAppPolicy setHandlesCarIntents:]', 
                       '-[CRCarPlayAppPolicy setLaunchUsingMusicUIService:]', 
                       '-[CRCarPlayAppPolicy setLaunchUsingSiri:]', '-[CRCarPlayAppPolicy setShowsNotifications:]', 
                       '-[CRCarPlayAppPolicy setSiriActivationOptions:]', 
                       '-[CRCarPlayAppPolicy showsNotifications]', '-[CRCarPlayAppPolicy siriActivationOptions]', 
                       '-[CRCarPlayAppPolicyEvaluator .cxx_destruct]', 
                       '-[CRCarPlayAppPolicyEvaluator _appWithDeclaration:supportsAllIntents:]', 
                       '-[CRCarPlayAppPolicyEvaluator _appWithDeclaration:supportsAnyIntents:]', 
                       '-[CRCarPlayAppPolicyEvaluator _connectedProtocolsIntersectsAppProtocols:]', 
                       '-[CRCarPlayAppPolicyEvaluator _sessionStatus]', 
                       '-[CRCarPlayAppPolicyEvaluator _simulatedAccessoryProtocols]', 
                       '-[CRCarPlayAppPolicyEvaluator blacklist]', '-[CRCarPlayAppPolicyEvaluator effectivePolicyForAppDeclaration:]', 
                       '-[CRCarPlayAppPolicyEvaluator fetchApplicationBundleIdentifiersForCarIntents:]', 
                       '-[CRCarPlayAppPolicyEvaluator init]', '-[CRCarPlayAppPolicyEvaluator isGeoSupported]', 
                       '-[CRCarPlayAppPolicyEvaluator setBlacklist:]', 
                       '-[CRCarPlayAppPolicyEvaluator setGeoSupported:]', 
                       '-[CRCarPlayAppPolicyEvaluator set_simulatedAccessoryProtocols:]', 
                       '-[CRCarPlayPreferences .cxx_destruct]', '-[CRCarPlayPreferences _isCarPlayAllowed]', 
                       '-[CRCarPlayPreferences _updateCarPlayAllowed]', 
                       '-[CRCarPlayPreferences cachedCarPlayAllowed]', 
                       '-[CRCarPlayPreferences dealloc]', '-[CRCarPlayPreferences handleAssistantLanguageChanged:]', 
                       '-[CRCarPlayPreferences handleAssistantPreferencesChanged:]', 
                       '-[CRCarPlayPreferences init]', '-[CRCarPlayPreferences isCarPlayAllowed]', 
                       '-[CRCarPlayPreferences isCarPlayCapable]', '-[CRCarPlayPreferences isWirelessCarPlayEnabled]', 
                       '-[CRCarPlayPreferences preferencesDelegate]', '-[CRCarPlayPreferences profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]', 
                       '-[CRCarPlayPreferences setCachedCarPlayAllowed:]', 
                       '-[CRCarPlayPreferences setPreferencesDelegate:]', 
                       '-[CRPairedVehicleManager .cxx_destruct]', '-[CRPairedVehicleManager allVehicles]', 
                       '-[CRPairedVehicleManager init]', '-[CRPairedVehicleManager pairedVehicles]', 
                       '-[CRPairedVehicleManager removeVehicle:]', '-[CRPairedVehicleManager saveVehicle:]', 
                       '-[CRPairedVehicleManager serviceClient]', '-[CRPairedVehicleManager setServiceClient:]', 
                       '-[CRPairedVehicleManager vehicleForBluetoothAddress:]', 
                       '-[CRPairedVehicleManager vehicleForCertificateSerial:]', 
                       '-[CRPairedVehicleManager vehicleNameForWiFiUUID:]', 
                       '-[CRUsageInformation .cxx_destruct]', '-[CRUsageInformation init]', 
                       '-[CRUsageInformation serviceClient]', '-[CRUsageInformation setServiceClient:]', 
                       '-[CRUsageInformation shouldSuggestCarPlayTips]', 
                       '-[CRVehicle .cxx_destruct]', '-[CRVehicle _pairingDebugDescription]', 
                       '-[CRVehicle accessoryProtocols]', '-[CRVehicle bluetoothAddress]', 
                       '-[CRVehicle carplayWiFiUUID]', '-[CRVehicle certificateSerialNumber]', 
                       '-[CRVehicle description]', '-[CRVehicle displayName]', 
                       '-[CRVehicle encodeWithCoder:]', '-[CRVehicle hash]', 
                       '-[CRVehicle identifier]', '-[CRVehicle initWithCoder:]', 
                       '-[CRVehicle initWithIdentifier:certificateSerial:]', 
                       '-[CRVehicle init]', '-[CRVehicle isEqual:]', '-[CRVehicle isPaired]', 
                       '-[CRVehicle mergeAttributesFromVehicle:]', '-[CRVehicle pairingStatus]', 
                       '-[CRVehicle setAccessoryProtocols:]', '-[CRVehicle setBluetoothAddress:]', 
                       '-[CRVehicle setCarplayWiFiUUID:]', '-[CRVehicle setCertificateSerialNumber:]', 
                       '-[CRVehicle setIdentifier:]', '-[CRVehicle setPairingStatus:]', 
                       '-[CRVehicle setVehicleName:]', '-[CRVehicle vehicleName]', 
                       '-[CRVehicleAccessory .cxx_destruct]', '-[CRVehicleAccessory _updateName]', 
                       '-[CRVehicleAccessory accessoryProtocols]', '-[CRVehicleAccessory accessory]', 
                       '-[CRVehicleAccessory beginWiredBluetoothPairing:]', 
                       '-[CRVehicleAccessory bluetoothAddress]', '-[CRVehicleAccessory certificateSerialNumber]', 
                       '-[CRVehicleAccessory connectionID]', '-[CRVehicleAccessory description]', 
                       '-[CRVehicleAccessory displayName]', '-[CRVehicleAccessory isBluetoothConnected]', 
                       '-[CRVehicleAccessory requestWiFiCredentials]', 
                       '-[CRVehicleAccessory sendDeviceTransportIdentifiers]', 
                       '-[CRVehicleAccessory setAccessory:]', '-[CRVehicleAccessory setAccessoryProtocols:]', 
                       '-[CRVehicleAccessory setBluetoothAddress:]', '-[CRVehicleAccessory setCertificateSerialNumber:]', 
                       '-[CRVehicleAccessory setConnectionID:]', '-[CRVehicleAccessory setSupportsUSBCarPlay:]', 
                       '-[CRVehicleAccessory setSupportsWiredBluetoothPairing:]', 
                       '-[CRVehicleAccessory setSupportsWirelessCarPlay:]', 
                       '-[CRVehicleAccessory setVehicleName:]', '-[CRVehicleAccessory supportsUSBCarPlay]', 
                       '-[CRVehicleAccessory supportsWiredBluetoothPairing]', 
                       '-[CRVehicleAccessory supportsWirelessCarPlay]', 
                       '-[CRVehicleAccessory vehicleName]', '-[CRVehicleAccessoryManager .cxx_destruct]', 
                       '-[CRVehicleAccessoryManager _primeConnectedVehicleAccessories]', 
                       '-[CRVehicleAccessoryManager _updateVehicle:usingAccessory:]', 
                       '-[CRVehicleAccessoryManager _vehicleForAccessory:]', 
                       '-[CRVehicleAccessoryManager connectedVehicleAccessories]', 
                       '-[CRVehicleAccessoryManager dealloc]', '-[CRVehicleAccessoryManager handleAccessoryConnect:]', 
                       '-[CRVehicleAccessoryManager handleAccessoryDisconnect:]', 
                       '-[CRVehicleAccessoryManager handleAccessoryInformationUpdate:]', 
                       '-[CRVehicleAccessoryManager init]', '-[CRVehicleAccessoryManager setVehicleAccessoryDelegate:]', 
                       '-[CRVehicleAccessoryManager setVehiclesBySerialNumber:]', 
                       '-[CRVehicleAccessoryManager vehicleAccessoryDelegate]', 
                       '-[CRVehicleAccessoryManager vehicleAccessoryForCertificateSerial:]', 
                       '-[CRVehicleAccessoryManager vehicleAccessoryForiAPConnectionIdentifier:]', 
                       '-[CRVehicleAccessoryManager vehiclesBySerialNumber]', 
                       '-[CRVehicleInformation .cxx_destruct]', '-[CRVehicleInformation _fetchMapsFallbackAmbientBrightnessWithToken:]', 
                       '-[CRVehicleInformation _handleLimitedUIChanged:]', 
                       '-[CRVehicleInformation _handleNightModeChanged:]', 
                       '-[CRVehicleInformation _screenDidUpdate:]', '-[CRVehicleInformation dealloc]', 
                       '-[CRVehicleInformation driverPosition]', '-[CRVehicleInformation externalDevice]', 
                       '-[CRVehicleInformation init]', '-[CRVehicleInformation interactionRestrictions]', 
                       '-[CRVehicleInformation mapsFallbackAmbientBrightness]', 
                       '-[CRVehicleInformation setExternalDevice:]', '-[CRVehicleInformation setMapsFallbackAmbientBrightness:]', 
                       '-[CRVehicleInformation vehicleAmbientBrightness]', 
                       '-[CRVehiclePolicyMonitor .cxx_destruct]', '-[CRVehiclePolicyMonitor dealloc]', 
                       '-[CRVehiclePolicyMonitor delegate]', '-[CRVehiclePolicyMonitor initWithVehicleCertificateSerial:]', 
                       '-[CRVehiclePolicyMonitor isMonitoring]', '-[CRVehiclePolicyMonitor monitoringConnection]', 
                       '-[CRVehiclePolicyMonitor serviceConnection]', '-[CRVehiclePolicyMonitor setDelegate:]', 
                       '-[CRVehiclePolicyMonitor setMonitoring:]', '-[CRVehiclePolicyMonitor setServiceConnection:]', 
                       '-[CRVehiclePolicyMonitor setVehicleCertificateSerial:]', 
                       '-[CRVehiclePolicyMonitor startMonitoring]', '-[CRVehiclePolicyMonitor stopMonitoring]', 
                       '-[CRVehiclePolicyMonitor vehicleCertificateSerial]', 
                       '-[CRVehiclePolicyMonitor willDisableCertificateSerial:reply:]', 
                       '-[CRVehiclePolicyMonitor willEnableCertificateSerial:reply:]', 
                       GCC_except_table0, GCC_except_table0, GCC_except_table1, 
                       GCC_except_table1, GCC_except_table10, GCC_except_table17, 
                       GCC_except_table4, GCC_except_table48, GCC_except_table5, 
                       GCC_except_table52, GCC_except_table57, GCC_except_table6, 
                       GCC_except_table9, _AFConnectionFunction, _AFLanguageCodeDidChangeNotificationFunction, 
                       _AFPreferencesDidChangeNotificationFunction, _AFPreferencesFunction, 
                       _AVExternalDeviceFunction, _AVExternalDeviceLimitedUIChangedNotificationFunction, 
                       _AVExternalDeviceLimitedUIElementMusicListsFunction, 
                       _AVExternalDeviceLimitedUIElementNonMusicListsFunction, 
                       _AVExternalDeviceLimitedUIElementSoftKeyboardFunction, 
                       _AVExternalDeviceNightModeChangedNotificationFunction, 
                       _AVFoundationLibrary, _AVFoundationLibrary.frameworkLibrary, 
                       _AggregateDictionaryLibrary, _AggregateDictionaryLibrary.frameworkLibrary, 
                       _AirPlayDiagnosticsLibrary.frameworkLibrary, _AssistantServicesLibrary, 
                       _AssistantServicesLibrary.frameworkLibrary, _AssistantServicesLibraryCore.frameworkLibrary, 
                       _CARLimitedUIValueUserInterfaceMusicLists, _CARLimitedUIValueUserInterfaceNonMusicLists, 
                       _CARLimitedUIValueUserInterfaceSoftKeyboard, _CARLimitedUIValueUserInterfaceSoftPhoneKeypad, 
                       _CARSessionAuthenticationSucceededNotification, 
                       _CARSessionElectronicTollCollectionStateChangedNotification, 
                       _CARSessionLimitUserInterfacesChangedNotification, 
                       _CARSessionNightModeChangedNotification, _CARSessionOwnsTurnByTurnNavigationChangedNotification, 
                       _CARSessionPerformanceReportPostedNotification, 
                       _CARSessionScreenBecameAvailableNotification, _CARSessionScreenBecameUnavailableNotification, 
                       _CARSessionServerConnectionDiedNotification, _CARSesssionStatusChangedCallback, 
                       _CRAggregateAddValueForScalarKey, _CRAggregateReconnectionEnableWiFiAcceptedKey, 
                       _CRAggregateReconnectionEnableWiFiDeclinedKey, _CRAggregateReconnectionFailureCountKey, 
                       _CRAggregateReconnectionSuccessCountKey, _CRAggregateSetValueForScalarKey, 
                       _CRAggregateVehicleCountKey, _CRAggregateWiredAcceptedKey, 
                       _CRAggregateWiredDeclinedKey, _CRAggregateWiredToWirelessAcceptedKey, 
                       _CRAggregateWiredToWirelessDeclinedKey, _CRAggregateWirelessAcceptedKey, 
                       _CRAggregateWirelessDeclinedKey, _CRCarPlayAppPolicyChangedNotification, 
                       _CRCarPlayAppServicePolicyChangedHandler, _CRCollectCarPlayDiagnosticsWithScreenshots, 
                       _CRCreateRadarURLWithAttachments, _CRFrameworkBundle, 
                       _CRGenerateCarPlayDiagnosticsFolder, _CRIsAnyPairedVehicleAttached, 
                       _CRLocalizedStringForKey, _CRLocalizedWiFiVariantKeyForKey, 
                       _CRMapsLightLevelChangeNotification, _CRPairedVehiclesDidChangeNotification, 
                       _CRPreferencesEnableWirelessDomain, _CRPreferencesEnableWirelessKey, 
                       _CRPreferencesLoggingChangedNotification, _CRPreferencesLoggingKey, 
                       _CRPreferencesNotMigratedDomain, _CRPreferencesSettingsDebugUIKey, 
                       _CRSaveAirPlayDiagnosticsToDestinationFolder, _CRSaveScreenshotsToDestinationFolder, 
                       _CRSessionStatusInCarNotificationCallback, _CRSettingsDebugUIEnabled, 
                       _CRVehicleInformationInteractionRestrictionsChangedNotification, 
                       _CRVehicleInformationVehicleAmbientBrightnessChangedNotification, 
                       _CarGeneralLogging, _CarGeneralLogging.facility, 
                       _CarGeneralLogging.onceToken, _CarKitVersionNumber, 
                       _CarKitVersionString, _IAPAuthenticationLibrary.frameworkLibrary, 
                       _IAPLibrary.frameworkLibrary, _LSApplicationProxyFunction, 
                       _MobileCoreServicesLibrary.frameworkLibrary, _UIKitLibrary, 
                       _UIKitLibrary.frameworkLibrary, _UIKitLibrary.frameworkLibrary, 
                       _UIScreenDidConnectNotificationFunction, _UIScreenDidDisconnectNotificationFunction, 
                       '___24-[CARSessionStatus init]_block_invoke', '___24-[CARSessionStatus init]_block_invoke.206', 
                       '___28-[CRVehicleInformation init]_block_invoke', 
                       '___29-[CRCarKitServiceClient init]_block_invoke', 
                       '___33-[CARSession requestCarUIForURL:]_block_invoke', 
                       '___34-[CARSession initWithFigEndpoint:]_block_invoke', 
                       '___35-[CRCarPlayAppPolicyEvaluator init]_block_invoke', 
                       '___37-[CARSession takeScreenForConnection]_block_invoke', 
                       '___37-[CRPairedVehicleManager allVehicles]_block_invoke', 
                       '___37-[CRPairedVehicleManager allVehicles]_block_invoke_2', 
                       '___38-[CARSessionScreenBorrowToken dealloc]_block_invoke', 
                       '___38-[CRPairedVehicleManager saveVehicle:]_block_invoke', 
                       '___38-[CRPairedVehicleManager saveVehicle:]_block_invoke_2', 
                       '___40-[CRCarPlayAppBlacklist _fetchBlacklist]_block_invoke', 
                       '___40-[CRCarPlayAppBlacklist _fetchBlacklist]_block_invoke_2', 
                       '___40-[CRCarPlayAppBlacklist _fetchBlacklist]_block_invoke_3', 
                       '___40-[CRPairedVehicleManager pairedVehicles]_block_invoke', 
                       '___40-[CRPairedVehicleManager removeVehicle:]_block_invoke', 
                       '___40-[CRPairedVehicleManager removeVehicle:]_block_invoke_2', 
                       '___40-[CRVehiclePolicyMonitor stopMonitoring]_block_invoke', 
                       '___40-[CRVehiclePolicyMonitor stopMonitoring]_block_invoke_2', 
                       '___41-[CARSession takeScreenForClient:reason:]_block_invoke', 
                       '___41-[CRVehiclePolicyMonitor startMonitoring]_block_invoke', 
                       '___41-[CRVehiclePolicyMonitor startMonitoring]_block_invoke_2', 
                       '___44-[CARSessionStatus _handleInCarNotification]_block_invoke', 
                       '___46-[CRUsageInformation shouldSuggestCarPlayTips]_block_invoke', 
                       '___46-[CRUsageInformation shouldSuggestCarPlayTips]_block_invoke_2', 
                       '___46-[CRVehiclePolicyMonitor monitoringConnection]_block_invoke', 
                       '___48-[CARSessionStatus waitForSessionInitialization]_block_invoke', 
                       '___49-[CRVehicleAccessory beginWiredBluetoothPairing:]_block_invoke', 
                       '___50-[CRCarPlayAppBlacklist containsBundleIdentifier:]_block_invoke', 
                       '___51-[CARSessionStatus _handleAuthenticationSucceeded:]_block_invoke', 
                       '___52-[CARSessionConfiguration initWithPropertySupplier:]_block_invoke', 
                       '___52-[CRVehicleAccessoryManager handleAccessoryConnect:]_block_invoke', 
                       '___55-[CRVehicleAccessoryManager handleAccessoryDisconnect:]_block_invoke', 
                       '___61-[CARSessionScreenBorrowToken initWithSession:client:reason:]_block_invoke', 
                       '___62-[CRVehicleAccessoryManager handleAccessoryInformationUpdate:]_block_invoke', 
                       '___70-[CRCarPlayAppPolicyEvaluator _appWithDeclaration:supportsAllIntents:]_block_invoke', 
                       '___70-[CRCarPlayAppPolicyEvaluator _appWithDeclaration:supportsAnyIntents:]_block_invoke', 
                       '___78-[CRCarPlayAppPolicyEvaluator fetchApplicationBundleIdentifiersForCarIntents:]_block_invoke', 
                       ___Block_byref_object_copy_, ___Block_byref_object_dispose_, 
                       ___CarGeneralLogging_block_invoke, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp.101, ___block_descriptor_tmp.13, 
                       ___block_descriptor_tmp.19, ___block_descriptor_tmp.194, 
                       ___block_descriptor_tmp.196, ___block_descriptor_tmp.203, 
                       ___block_descriptor_tmp.208, ___block_descriptor_tmp.209, 
                       ___block_descriptor_tmp.212, ___block_descriptor_tmp.215, 
                       ___block_descriptor_tmp.215, ___block_descriptor_tmp.220, 
                       ___block_descriptor_tmp.222, ___block_descriptor_tmp.24, 
                       ___block_descriptor_tmp.267, ___block_descriptor_tmp.279, 
                       ___block_descriptor_tmp.28, ___block_descriptor_tmp.30, 
                       ___block_descriptor_tmp.33, ___block_descriptor_tmp.35, 
                       ___block_descriptor_tmp.36, ___block_descriptor_tmp.42, 
                       ___block_descriptor_tmp.42, ___block_descriptor_tmp.46, 
                       ___block_descriptor_tmp.49, ___block_descriptor_tmp.49, 
                       ___block_descriptor_tmp.52, ___block_descriptor_tmp.54, 
                       ___block_descriptor_tmp.67, ___block_descriptor_tmp.89, 
                       ___block_descriptor_tmp.96, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global.280, ___block_literal_global.50, 
                       ___block_literal_global.53, ___block_literal_global.55, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_.10, 
                       ___copy_helper_block_.16, ___copy_helper_block_.191, 
                       ___copy_helper_block_.193, ___copy_helper_block_.201, 
                       ___copy_helper_block_.206, ___copy_helper_block_.207, 
                       ___copy_helper_block_.210, ___copy_helper_block_.212, 
                       ___copy_helper_block_.213, ___copy_helper_block_.218, 
                       ___copy_helper_block_.22, ___copy_helper_block_.220, 
                       ___copy_helper_block_.26, ___copy_helper_block_.265, 
                       ___copy_helper_block_.27, ___copy_helper_block_.30, 
                       ___copy_helper_block_.33, ___copy_helper_block_.39, 
                       ___copy_helper_block_.47, ___copy_helper_block_.64, 
                       ___copy_helper_block_.87, ___copy_helper_block_.94, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_.11, ___destroy_helper_block_.17, 
                       ___destroy_helper_block_.192, ___destroy_helper_block_.194, 
                       ___destroy_helper_block_.202, ___destroy_helper_block_.207, 
                       ___destroy_helper_block_.208, ___destroy_helper_block_.211, 
                       ___destroy_helper_block_.213, ___destroy_helper_block_.214, 
                       ___destroy_helper_block_.219, ___destroy_helper_block_.221, 
                       ___destroy_helper_block_.23, ___destroy_helper_block_.266, 
                       ___destroy_helper_block_.27, ___destroy_helper_block_.28, 
                       ___destroy_helper_block_.31, ___destroy_helper_block_.34, 
                       ___destroy_helper_block_.40, ___destroy_helper_block_.48, 
                       ___destroy_helper_block_.65, ___destroy_helper_block_.88, 
                       ___destroy_helper_block_.95, ___figEndpointNotificationCallback_block_invoke, 
                       _avExternalDeviceNotificationsFromEndpoint, _classAFConnection, 
                       _classAFPreferences, _classAVExternalDevice, _classLSApplicationProxy, 
                       _constantAFLanguageCodeDidChangeNotification, _constantAFPreferencesDidChangeNotification, 
                       _constantAVExternalDeviceLimitedUIChangedNotification, 
                       _constantAVExternalDeviceLimitedUIElementMusicLists, 
                       _constantAVExternalDeviceLimitedUIElementNonMusicLists, 
                       _constantAVExternalDeviceLimitedUIElementSoftKeyboard, 
                       _constantAVExternalDeviceNightModeChangedNotification, 
                       _constantUIScreenDidConnectNotification, _constantUIScreenDidDisconnectNotification, 
                       _constantkAssistantDirectActionEventKey, _figEndpointNotificationCallback, 
                       _figEndpointNotificationCallback.createFigToAVFNotificationMappingOnce, 
                       _figEndpointNotificationCallback.figToCARSessionNotificationMapping, 
                       _getAFConnectionClass, _getAFLanguageCodeDidChangeNotification, 
                       _getAFPreferencesClass, _getAFPreferencesDidChangeNotification, 
                       _getAVExternalDeviceClass, _getAVExternalDeviceLimitedUIChangedNotification, 
                       _getAVExternalDeviceLimitedUIElementMusicLists, 
                       _getAVExternalDeviceLimitedUIElementNonMusicLists, 
                       _getAVExternalDeviceLimitedUIElementSoftKeyboard, 
                       _getAVExternalDeviceNightModeChangedNotification, 
                       _getLSApplicationProxyClass, _getUIScreenDidConnectNotification, 
                       _getUIScreenDidDisconnectNotification, _getkAssistantDirectActionEventKey, 
                       _init.onceToken, _initADClientAddValueForScalarKey, 
                       _initADClientSetValueForScalarKey, _initAFConnection, 
                       _initAFLanguageCodeDidChangeNotification, _initAFPreferences, 
                       _initAFPreferencesDidChangeNotification, _initAVExternalDevice, 
                       _initAVExternalDeviceLimitedUIChangedNotification, 
                       _initAVExternalDeviceLimitedUIElementMusicLists, 
                       _initAVExternalDeviceLimitedUIElementNonMusicLists, 
                       _initAVExternalDeviceLimitedUIElementSoftKeyboard, 
                       _initAVExternalDeviceNightModeChangedNotification, 
                       _initAirPlayDiagnosticsGetConnectedDeviceLogs, _initIAPAppAuthCertForConnectionID, 
                       _initIapAuthCertSerial, _initLSApplicationProxy, 
                       _initUIImagePNGRepresentation, _initUIScreenDidConnectNotification, 
                       _initUIScreenDidDisconnectNotification, _initkAssistantDirectActionEventKey, 
                       _kAssistantDirectActionEventKeyFunction, _softLinkADClientAddValueForScalarKey, 
                       _softLinkADClientSetValueForScalarKey, _softLinkAirPlayDiagnosticsGetConnectedDeviceLogs, 
                       _softLinkIAPAppAuthCertForConnectionID, _softLinkIapAuthCertSerial, 
                       _softLinkUIImagePNGRepresentation, _urlEncode ]
    objc-classes:    [ _CARManufacturerIcon, _CARSession, _CARSessionConfiguration, 
                       _CARSessionScreenBorrowToken, _CARSessionStatus, 
                       _CARSessionTurnByTurnToken, _CRCarKitServiceClient, 
                       _CRCarPlayAppBlacklist, _CRCarPlayAppDeclaration, 
                       _CRCarPlayAppPolicy, _CRCarPlayAppPolicyEvaluator, 
                       _CRCarPlayPreferences, _CRPairedVehicleManager, 
                       _CRUsageInformation, _CRVehicle, _CRVehicleAccessory, 
                       _CRVehicleAccessoryManager, _CRVehicleInformation, 
                       _CRVehiclePolicyMonitor ]
    objc-ivars:      [ _CRCarKitServiceClient._serviceConnection, _CARManufacturerIcon._imageData, 
                       _CARManufacturerIcon._pixelSize, _CARManufacturerIcon._prerendered, 
                       _CARSession._MFiCertificateSerialNumber, _CARSession._authenticated, 
                       _CARSession._configuration, _CARSession._endpoint, 
                       _CARSession._sessionDelegate, _CARSessionConfiguration._endpointIdentifier, 
                       _CARSessionConfiguration._limitableUserInterfaces, 
                       _CARSessionConfiguration._manufacturerIconLabel, 
                       _CARSessionConfiguration._manufacturerIconVisible, 
                       _CARSessionConfiguration._manufacturerIcons, _CARSessionConfiguration._modelName, 
                       _CARSessionConfiguration._name, _CARSessionConfiguration._rightHandDrive, 
                       _CARSessionConfiguration._transportType, _CARSessionScreenBorrowToken._client, 
                       _CARSessionScreenBorrowToken._reason, _CARSessionScreenBorrowToken._session, 
                       _CARSessionStatus._connectingTimer, _CARSessionStatus._session, 
                       _CARSessionStatus._sessionObserver, _CARSessionStatus._sessionUpdatesQueue, 
                       _CARSessionStatus._timeoutInterval, _CARSessionTurnByTurnToken._session, 
                       _CRCarKitServiceClient._outstandingSemaphores, _CRCarKitServiceClient._service, 
                       _CRCarPlayAppBlacklist._blacklistAccessQueue, _CRCarPlayAppBlacklist._blacklistedBundleIDs, 
                       _CRCarPlayAppDeclaration._autoMakerProtocols, _CRCarPlayAppDeclaration._bundleIdentifier, 
                       _CRCarPlayAppDeclaration._launchUsingSiri, _CRCarPlayAppDeclaration._requiresGeoSupport, 
                       _CRCarPlayAppDeclaration._supportsCalling, _CRCarPlayAppDeclaration._supportsMessaging, 
                       _CRCarPlayAppDeclaration._supportsPlayableContent, 
                       _CRCarPlayAppDeclaration._systemApp, _CRCarPlayAppPolicy._badgesAppIcon, 
                       _CRCarPlayAppPolicy._canDisplayOnCarScreen, _CRCarPlayAppPolicy._carPlaySupported, 
                       _CRCarPlayAppPolicy._handlesCarIntents, _CRCarPlayAppPolicy._launchUsingMusicUIService, 
                       _CRCarPlayAppPolicy._launchUsingSiri, _CRCarPlayAppPolicy._showsNotifications, 
                       _CRCarPlayAppPolicy._siriActivationOptions, _CRCarPlayAppPolicyEvaluator.__simulatedAccessoryProtocols, 
                       _CRCarPlayAppPolicyEvaluator._blacklist, _CRCarPlayAppPolicyEvaluator._geoSupported, 
                       _CRCarPlayAppPolicyEvaluator._sessionStatus, _CRCarPlayPreferences._cachedCarPlayAllowed, 
                       _CRCarPlayPreferences._preferencesDelegate, _CRPairedVehicleManager._serviceClient, 
                       _CRUsageInformation._serviceClient, _CRVehicle._accessoryProtocols, 
                       _CRVehicle._bluetoothAddress, _CRVehicle._carplayWiFiUUID, 
                       _CRVehicle._certificateSerialNumber, _CRVehicle._identifier, 
                       _CRVehicle._pairingStatus, _CRVehicle._vehicleName, 
                       _CRVehicleAccessory._accessory, _CRVehicleAccessory._accessoryProtocols, 
                       _CRVehicleAccessory._bluetoothAddress, _CRVehicleAccessory._certificateSerialNumber, 
                       _CRVehicleAccessory._connectionID, _CRVehicleAccessory._supportsUSBCarPlay, 
                       _CRVehicleAccessory._supportsWiredBluetoothPairing, 
                       _CRVehicleAccessory._supportsWirelessCarPlay, _CRVehicleAccessory._vehicleName, 
                       _CRVehicleAccessoryManager._vehicleAccessoryDelegate, 
                       _CRVehicleAccessoryManager._vehiclesBySerialNumber, 
                       _CRVehicleInformation._externalDevice, _CRVehicleInformation._mapsAmbientBrightnessNotifyToken, 
                       _CRVehicleInformation._mapsFallbackAmbientBrightness, 
                       _CRVehiclePolicyMonitor._delegate, _CRVehiclePolicyMonitor._monitoring, 
                       _CRVehiclePolicyMonitor._serviceConnection, _CRVehiclePolicyMonitor._vehicleCertificateSerial ]
...
