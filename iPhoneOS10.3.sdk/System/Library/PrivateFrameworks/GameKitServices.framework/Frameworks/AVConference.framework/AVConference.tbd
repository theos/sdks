---
archs:           [ armv7, armv7s, arm64 ]
platform:        ios
install-name:    /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
exports:         
  - archs:           [ armv7, armv7s, arm64 ]
    symbols:         [ _AVConferenceAudioTierAudioBitrate, '+[AVAudioClient currentInputDevice]', 
                       '+[AVAudioClient currentOutputDevice]', '+[AVAudioClient defaultInputDevice]', 
                       '+[AVAudioClient defaultOutputDevice]', '+[AVAudioClient hasActiveAudioSession]', 
                       '+[AVAudioClient initializeAudioSessionQ]', '+[AVAudioClient isMicrophoneMuted]', 
                       '+[AVAudioClient resetAudioSessionOutputPortOverride]', 
                       '+[AVAudioClient setAudioSessionProperties:]', '+[AVAudioClient setInputDevice:]', 
                       '+[AVAudioClient setMicrophoneMuted:]', '+[AVAudioClient setOutputDevice:]', 
                       '+[AVAudioClient startAudioSessionWithCompletionHandler:]', 
                       '+[AVAudioClient startAudioSession]', '+[AVAudioClient stopAudioSession]', 
                       '+[AVAudioDeviceList currentInputDevice]', '+[AVAudioDeviceList defaultInputDevice]', 
                       '+[AVAudioDeviceList defaultOutputDevice]', '+[AVAudioDeviceList deviceForUID:]', 
                       '+[AVAudioDeviceList setInputDevice:]', '+[AVCAudioStream capabilities]', 
                       '+[AVCPacketRelayConnection connectionWithIDSDestination:]', 
                       '+[AVCPacketRelayConnection connectionWithIDSSocketDescriptor:]', 
                       '+[AVCPacketRelayConnection connectionWithSocket:]', 
                       '+[AVCPacketRelayConnection connectionWithSocket:remoteAddress:]', 
                       '+[AVCPacketRelayConnection connectionWithSocket:remoteAddress:packetFilter:]', 
                       '+[AVCPacketRelayDriver sharedInstance]', '+[AVCRTCPPacket newPacketWithRTCPPacket:]', 
                       '+[AVCVideoStream capabilities]', '+[AVConference addressPointerFromBlob:]', 
                       '+[AVConference doBlockingConnectionCheck:]', '+[AVConference doBlockingConnectionCheck]', 
                       '+[AVConference externalAddressForSelfConnectionBlob:]', 
                       '+[AVConference hasActiveAudioSession]', '+[AVConference refreshLoggingParameters]', 
                       '+[AVConference setAudioSessionProperties:]', '+[AVConference startAudioSessionWithCompletionHandler:]', 
                       '+[AVConference startAudioSession]', '+[AVConference stopAudioSession]', 
                       '+[AVConferencePreview AVConferencePreviewSingleton]', 
                       '+[AVConferenceXPCClient AVConferenceXPCClientSingleton]', 
                       '+[AVConferenceXPCClient dictionaryForAudioConfig:]', 
                       '+[AVConferenceXPCClient dictionaryForCommonStreamConfig:]', 
                       '+[AVConferenceXPCClient dictionaryForMediaStreamConfig:]', 
                       '+[AVConferenceXPCClient dictionaryForVideoConfig:]', 
                       '+[AVConferenceXPCServer AVConferenceXPCServerSingleton]', 
                       '+[AVConferenceXPCServer newMediaStreamConfigFromDictionary:]', 
                       '+[AVConferenceXPCServer setupAudioConfig:fromDictionary:]', 
                       '+[AVConferenceXPCServer setupCommonStreamConfig:fromDictionary:]', 
                       '+[AVConferenceXPCServer setupVideoConfig:fromDictionary:]', 
                       '+[AVInternalDeviceList defaultDeviceOfType:]', 
                       '+[AVInternalDeviceList newDeviceList]', '+[CannedAVSync sharedCannedAVSync]', 
                       '+[CannedAudioInjector isAudioAvailable:]', '+[CannedVideoCapture cannedVideoTypeForPath:]', 
                       '+[CannedVideoCapture createPixelBufferPool:withWidth:height:]', 
                       '+[GKNATObserver allocWithZone:]', '+[GKSConnectivitySettings getAddressForService:]', 
                       '+[GKSConnectivitySettings getAllSettings]', '+[GKSConnectivitySettings getCachedIPPort]', 
                       '+[GKSConnectivitySettings getClientOption:]', '+[GKSConnectivitySettings getIPPortForService:]', 
                       '+[GKSConnectivitySettings getKeepAliveTimeoutFromCarrierBundle]', 
                       '+[GKSConnectivitySettings getNATTypeFromCarrierBundle]', 
                       '+[GKSConnectivitySettings initialize]', '+[GKSConnectivitySettings setAddress:forService:]', 
                       '+[GKSConnectivitySettings setClientOptions:]', 
                       '+[GKSConnectivitySettings setServerAddresses:]', 
                       '+[GKSConnectivitySettings supportiRATRecommendation]', 
                       '+[GKVoiceChatError getNSError:code:detailedCode:filePath:description:reason:]', 
                       '+[GKVoiceChatError getNSError:code:detailedCode:returnCode:filePath:description:reason:]', 
                       '+[LogDumpUtility AddFileToMarco:logCategory:]', 
                       '+[LogDumpUtility createDirectory:]', '+[LogDumpUtility getCachesDirectoryPath]', 
                       '+[LogDumpUtility getDefaultLogDumpPath]', '+[LogDumpUtility logFilename:logNameType:prefix:suffix:marcoLog:]', 
                       '+[LogDumpUtility newLogDumpStream:logNameType:prefix:suffix:marcoLog:fullFilename:]', 
                       '+[LogDumpUtility removeFilesInDirectory:olderThan:]', 
                       '+[LogDumpUtility removeOldFilesInDefaultLogDumpPath]', 
                       '+[NSError(AVConferenceError) AVConferenceServiceError:detailCode:description:]', 
                       '+[NSError(AVConferenceError) AVConferenceServiceError:detailedCode:filePath:description:reason:]', 
                       '+[NSError(AVConferenceError) AVConferenceServiceError:detailedCode:returnCode:filePath:description:reason:]', 
                       '+[SDPMediaLine fillImageArray:imageArray:]', '+[SDPMediaLine fillImageStruct:imageStruct:]', 
                       '+[SDPMediaLine fillImageStructWithDictionary:forInterface:imageStruct:]', 
                       '+[SDPMini setPayload:mediaLine:]', '+[SnapshotTimer takeSnapshotForTask:]', 
                       '+[VCAudioManager defaultManager]', '+[VCAudioPayload blockSizeForPayload:]', 
                       '+[VCAudioPayload isPayloadSupported:]', '+[VCAudioRuleCollection getForcedPayload]', 
                       '+[VCAudioStream capabilities]', '+[VCAudioStream isSameSRTPKey:newKey:]', 
                       '+[VCAudioStream supportedAudioPayloads]', '+[VCAudioTierPicker shouldFilterTierForPayload:bitRate:packetsPerBundle:cellular:operatingMode:]', 
                       '+[VCCallInfo getVCCurrentVersion]', '+[VCCallSession keyPathsForValuesAffectingNetworkQuality]', 
                       '+[VCCapabilities AudioOnlyVCCapabilities]', '+[VCCapabilities DataOnlyVCCapabilities]', 
                       '+[VCCapabilities VideoOnlyVCCapabilities]', '+[VCCapabilities screenSharingVCCapabilities]', 
                       '+[VCCaptionsManager defaultManager]', '+[VCCaptionsManagerStreamTokenClientList isValidContext:]', 
                       '+[VCCaptionsManagerStreamTokenClientList streamTokenFromClientContext:]', 
                       '+[VCCaptionsTranscription segmentsType]', '+[VCDatagramChannelManager sharedInstance]', 
                       '+[VCDispatchQueue defaultManager]', '+[VCHardwareSettingsEmbedded sharedInstance]', 
                       '+[VCImageQueue drawingContext]', '+[VCMediaNegotiationBlob bandwidthSettingsType]', 
                       '+[VCMediaNegotiationBlobVideoPayloadSettings videoRuleCollectionsType]', 
                       '+[VCMediaNegotiationBlobVideoSettings videoPayloadCollectionsType]', 
                       '+[VCMediaStreamManager addNSError:toXPCArgumentDictionary:]', 
                       '+[VCMediaStreamManager defaultManager]', '+[VCMediaStreamSynchronizer differenceBetweenRtpTimestamp:rtpTimestamp:]', 
                       '+[VCNetworkAgent agentDomain]', '+[VCNetworkAgent agentFromData:]', 
                       '+[VCNetworkAgent agentType]', '+[VCRemoteVideoManager defaultManager]', 
                       '+[VCServerBag checkKeysAgainstHardcodedPrefs:]', 
                       '+[VCServerBag pullStoreBagKeys]', '+[VCServerBag retrieveBag]', 
                       '+[VCServerBag sharedInstance]', '+[VCServerBag verifyRequiredKeys:]', 
                       '+[VCServerBag verifyRequiredKeys:withError:]', 
                       '+[VCServerBag verifyRequiredVoiceChatKeys:]', '+[VCTransport sharedInstance]', 
                       '+[VCVideoCaptureServer VCVideoCaptureServerSingleton]', 
                       '+[VCVideoRuleCollectionsCamera sharedInstance]', 
                       '+[VCVideoRuleCollectionsCameraEmbedded sharedInstance]', 
                       '+[VCVideoRuleCollectionsCameraMac sharedInstance]', 
                       '+[VCVideoRuleCollectionsScreen sharedInstance]', 
                       '+[VCVideoStream capabilities]', '+[VCVideoStream isSameSRTPKey:newKey:]', 
                       '+[VCVideoStream supportedVideoPayloads]', '+[VCWeakObjectHolder weakObjectHolderWithObject:]', 
                       '+[VideoAttributes videoAttributesWithVideoAttributes:]', 
                       '+[VideoConferenceDefaults VideoConferenceDefaultsSingleton]', 
                       '+[VideoConferenceDefaults getDoubleValueForKey:defaultValue:]', 
                       '+[VideoConferenceManager addNSError:toConferenceXPCArgumentDictionary:]', 
                       '+[VideoConferenceManager defaultVideoConferenceManager]', 
                       '+[VideoUtil convertPixelBufferToJPEG:]', '-[AVAudioClient changeListener]', 
                       '-[AVAudioClient dealloc]', '-[AVAudioClient deviceList]', 
                       '-[AVAudioClient devices]', '-[AVAudioClient init]', 
                       '-[AVAudioClient inputDevices]', '-[AVAudioClient outputDevices]', 
                       '-[AVAudioClient setChangeListener:]', '-[AVAudioClient setDeviceList:]', 
                       '-[AVAudioDevice UID]', '-[AVAudioDevice createNameForScope:]', 
                       '-[AVAudioDevice createName]', '-[AVAudioDevice createUID]', 
                       '-[AVAudioDevice dealloc]', '-[AVAudioDevice description]', 
                       '-[AVAudioDevice deviceID]', '-[AVAudioDevice deviceName]', 
                       '-[AVAudioDevice hash]', '-[AVAudioDevice initWithDeviceID:]', 
                       '-[AVAudioDevice inputAvailable]', '-[AVAudioDevice isBluetoothDevice]', 
                       '-[AVAudioDevice isEqual:]', '-[AVAudioDevice isPreferredDevice]', 
                       '-[AVAudioDevice isSomethingConnectedToJack]', '-[AVAudioDevice isStreamAvailableForScope:]', 
                       '-[AVAudioDevice isValidDevice]', '-[AVAudioDevice isValidInputDevice]', 
                       '-[AVAudioDevice outputAvailable]', '-[AVAudioDeviceList changeListener]', 
                       '-[AVAudioDeviceList dealloc]', '-[AVAudioDeviceList devices]', 
                       '-[AVAudioDeviceList init]', '-[AVAudioDeviceList inputDevices]', 
                       '-[AVAudioDeviceList outputDevices]', '-[AVAudioDeviceList setChangeListener:]', 
                       '-[AVCAudioStream capabilities]', '-[AVCAudioStream configuration]', 
                       '-[AVCAudioStream configure:error:]', '-[AVCAudioStream dealloc]', 
                       '-[AVCAudioStream delegate]', '-[AVCAudioStream deregisterBlocksForDelegateNotifications]', 
                       '-[AVCAudioStream direction]', '-[AVCAudioStream initWithIDSDestination:isOriginator:callID:error:]', 
                       '-[AVCAudioStream initWithIDSDestination:isOriginator:error:]', 
                       '-[AVCAudioStream initWithLocalAddress:callID:error:]', 
                       '-[AVCAudioStream initWithLocalAddress:error:]', 
                       '-[AVCAudioStream initWithLocalAddress:isOriginator:callID:error:]', 
                       '-[AVCAudioStream initWithLocalAddress:isOriginator:error:]', 
                       '-[AVCAudioStream initWithLocalAddress:networkSockets:IDSDestination:isOriginator:callID:error:]', 
                       '-[AVCAudioStream initWithNetworkSockets:isOriginator:callID:error:]', 
                       '-[AVCAudioStream initWithNetworkSockets:isOriginator:error:]', 
                       '-[AVCAudioStream isInputFrequencyMeteringEnabled]', 
                       '-[AVCAudioStream isOutputFrequencyMeteringEnabled]', 
                       '-[AVCAudioStream isRTCPEnabled]', '-[AVCAudioStream isRTCPTimeOutEnabled]', 
                       '-[AVCAudioStream isRTPTimeOutEnabled]', '-[AVCAudioStream pause]', 
                       '-[AVCAudioStream refreshLoggingParameters]', '-[AVCAudioStream registerBlocksForDelegateNotifications]', 
                       '-[AVCAudioStream resume]', '-[AVCAudioStream rtcpSendIntervalSec]', 
                       '-[AVCAudioStream rtcpTimeOutIntervalSec]', '-[AVCAudioStream rtpTimeOutIntervalSec]', 
                       '-[AVCAudioStream sendDTMFDigitString:withVolume:duration:interval:]', 
                       '-[AVCAudioStream setCapabilities:]', '-[AVCAudioStream setConfiguration:]', 
                       '-[AVCAudioStream setDelegate:]', '-[AVCAudioStream setDirection:]', 
                       '-[AVCAudioStream setInputFrequencyMeteringEnabled:]', 
                       '-[AVCAudioStream setOutputFrequencyMeteringEnabled:]', 
                       '-[AVCAudioStream setRtcpEnabled:]', '-[AVCAudioStream setRtcpSendIntervalSec:]', 
                       '-[AVCAudioStream setRtcpTimeOutEnabled:]', '-[AVCAudioStream setRtcpTimeOutIntervalSec:]', 
                       '-[AVCAudioStream setRtpTimeOutEnabled:]', '-[AVCAudioStream setRtpTimeOutIntervalSec:]', 
                       '-[AVCAudioStream startContinuousDTMFWithDigit:volume:]', 
                       '-[AVCAudioStream startSynchronizeWithStream:]', 
                       '-[AVCAudioStream start]', '-[AVCAudioStream stopContinuousDTMF]', 
                       '-[AVCAudioStream stop]', '-[AVCAudioStream terminateSession]', 
                       '-[AVCAudioStream vcMediaStream:didPauseStream:error:]', 
                       '-[AVCAudioStream vcMediaStream:didReceiveDTMFEventWithDigit:]', 
                       '-[AVCAudioStream vcMediaStream:didReceiveRTCPPackets:]', 
                       '-[AVCAudioStream vcMediaStream:didResumeStream:error:]', 
                       '-[AVCAudioStream vcMediaStream:didStartStream:error:]', 
                       '-[AVCAudioStream vcMediaStream:updateFrequencyLevel:isInputMeter:]', 
                       '-[AVCAudioStream vcMediaStream:updateInputFrequencyLevel:]', 
                       '-[AVCAudioStream vcMediaStream:updateOutputFrequencyLevel:]', 
                       '-[AVCAudioStream vcMediaStreamDidRTCPTimeOut:]', 
                       '-[AVCAudioStream vcMediaStreamDidRTPTimeOut:]', 
                       '-[AVCAudioStream vcMediaStreamDidStop:]', '-[AVCAudioStreamConfig audioStreamMode]', 
                       '-[AVCAudioStreamConfig cnPayloadType]', '-[AVCAudioStreamConfig codecType]', 
                       '-[AVCAudioStreamConfig dtmfPayloadType]', '-[AVCAudioStreamConfig dtmfTimestampRate]', 
                       '-[AVCAudioStreamConfig init]', '-[AVCAudioStreamConfig isCNEnabled]', 
                       '-[AVCAudioStreamConfig isCNValid]', '-[AVCAudioStreamConfig isDTMFValid]', 
                       '-[AVCAudioStreamConfig isDTXEnabled]', '-[AVCAudioStreamConfig isLatencySensitiveMode]', 
                       '-[AVCAudioStreamConfig isOctectAligned]', '-[AVCAudioStreamConfig isValid]', 
                       '-[AVCAudioStreamConfig maxPtime]', '-[AVCAudioStreamConfig preferredAMRMode]', 
                       '-[AVCAudioStreamConfig ptime]', '-[AVCAudioStreamConfig rateModeMask]', 
                       '-[AVCAudioStreamConfig setAudioStreamMode:]', '-[AVCAudioStreamConfig setCnEnabled:]', 
                       '-[AVCAudioStreamConfig setCnPayloadType:]', '-[AVCAudioStreamConfig setCodecType:]', 
                       '-[AVCAudioStreamConfig setDtmfPayloadType:]', '-[AVCAudioStreamConfig setDtmfTimestampRate:]', 
                       '-[AVCAudioStreamConfig setDtxEnabled:]', '-[AVCAudioStreamConfig setLatencySensitiveMode:]', 
                       '-[AVCAudioStreamConfig setMaxPtime:]', '-[AVCAudioStreamConfig setOctetAligned:]', 
                       '-[AVCAudioStreamConfig setPreferredAMRMode:]', 
                       '-[AVCAudioStreamConfig setPtime:]', '-[AVCAudioStreamConfig setRateModeMask:]', 
                       '-[AVCCaptionsClient captionsEnabled]', '-[AVCCaptionsClient captionsSupported]', 
                       '-[AVCCaptionsClient configureCaptions:]', '-[AVCCaptionsClient connect]', 
                       '-[AVCCaptionsClient dealloc]', '-[AVCCaptionsClient delegate]', 
                       '-[AVCCaptionsClient deregisterBlocksForNotifications]', 
                       '-[AVCCaptionsClient disconnect]', '-[AVCCaptionsClient enableCaptions:]', 
                       '-[AVCCaptionsClient initWithDelegate:streamToken:]', 
                       '-[AVCCaptionsClient registerBlocksForNotifications]', 
                       '-[AVCCaptionsClient streamToken]', '-[AVCCaptionsConfig dealloc]', 
                       '-[AVCCaptionsConfig description]', '-[AVCCaptionsConfig locale]', 
                       '-[AVCCaptionsConfig setLocale:]', '-[AVCCaptionsResult addTokenWithString:confidence:spaceAfter:]', 
                       '-[AVCCaptionsResult dealloc]', '-[AVCCaptionsResult description]', 
                       '-[AVCCaptionsResult initWithCapacity:utteranceComplete:utteranceNumber:updateNumber:]', 
                       '-[AVCCaptionsResult text]', '-[AVCCaptionsResult tokens]', 
                       '-[AVCCaptionsResult updateNumber]', '-[AVCCaptionsResult utteranceComplete]', 
                       '-[AVCCaptionsResult utteranceNumber]', '-[AVCCaptionsToken confidence]', 
                       '-[AVCCaptionsToken dealloc]', '-[AVCCaptionsToken description]', 
                       '-[AVCCaptionsToken hasSpaceAfter]', '-[AVCCaptionsToken initWithText:confidence:spaceAfter:]', 
                       '-[AVCCaptionsToken text]', '-[AVCMediaStreamConfig SRTCPCipherSuite]', 
                       '-[AVCMediaStreamConfig SRTPCipherSuite]', '-[AVCMediaStreamConfig audio]', 
                       '-[AVCMediaStreamConfig cName]', '-[AVCMediaStreamConfig dealloc]', 
                       '-[AVCMediaStreamConfig description]', '-[AVCMediaStreamConfig direction]', 
                       '-[AVCMediaStreamConfig init]', '-[AVCMediaStreamConfig isAudioCodecValid]', 
                       '-[AVCMediaStreamConfig isRTCPEnabled]', '-[AVCMediaStreamConfig isRTCPTimeOutEnabled]', 
                       '-[AVCMediaStreamConfig isRTCPXREnabled]', '-[AVCMediaStreamConfig isRTPTimeOutEnabled]', 
                       '-[AVCMediaStreamConfig isRateAdaptationEnabled]', 
                       '-[AVCMediaStreamConfig isValidAudioConfig]', '-[AVCMediaStreamConfig isValidVideoConfig]', 
                       '-[AVCMediaStreamConfig localAddress]', '-[AVCMediaStreamConfig receiveMasterKey]', 
                       '-[AVCMediaStreamConfig recommendedMTU]', '-[AVCMediaStreamConfig remoteAddress]', 
                       '-[AVCMediaStreamConfig remoteSSRC]', '-[AVCMediaStreamConfig rtcpRemotePort]', 
                       '-[AVCMediaStreamConfig rtcpSendInterval]', '-[AVCMediaStreamConfig rtcpTimeOutInterval]', 
                       '-[AVCMediaStreamConfig rtpTimeOutInterval]', '-[AVCMediaStreamConfig rxPayloadType]', 
                       '-[AVCMediaStreamConfig sendMasterKey]', '-[AVCMediaStreamConfig setAudio:]', 
                       '-[AVCMediaStreamConfig setCName:]', '-[AVCMediaStreamConfig setDirection:]', 
                       '-[AVCMediaStreamConfig setLocalAddress:]', '-[AVCMediaStreamConfig setRateAdaptationEnabled:]', 
                       '-[AVCMediaStreamConfig setReceiveMasterKey:]', 
                       '-[AVCMediaStreamConfig setRecommendedMTU:]', '-[AVCMediaStreamConfig setRemoteAddress:]', 
                       '-[AVCMediaStreamConfig setRemoteSSRC:]', '-[AVCMediaStreamConfig setRtcpEnabled:]', 
                       '-[AVCMediaStreamConfig setRtcpRemotePort:]', '-[AVCMediaStreamConfig setRtcpSendInterval:]', 
                       '-[AVCMediaStreamConfig setRtcpTimeOutEnabled:]', 
                       '-[AVCMediaStreamConfig setRtcpTimeOutInterval:]', 
                       '-[AVCMediaStreamConfig setRtcpXREnabled:]', '-[AVCMediaStreamConfig setRtpTimeOutEnabled:]', 
                       '-[AVCMediaStreamConfig setRtpTimeOutInterval:]', 
                       '-[AVCMediaStreamConfig setRxPayloadType:]', '-[AVCMediaStreamConfig setSRTCPCipherSuite:]', 
                       '-[AVCMediaStreamConfig setSRTPCipherSuite:]', '-[AVCMediaStreamConfig setSendMasterKey:]', 
                       '-[AVCMediaStreamConfig setTxPayloadType:]', '-[AVCMediaStreamConfig setVideo:]', 
                       '-[AVCMediaStreamConfig txPayloadType]', '-[AVCMediaStreamConfig video]', 
                       '-[AVCNetworkAddress dealloc]', '-[AVCNetworkAddress init]', 
                       '-[AVCNetworkAddress interfaceName]', '-[AVCNetworkAddress ip]', 
                       '-[AVCNetworkAddress isIPv6]', '-[AVCNetworkAddress port]', 
                       '-[AVCNetworkAddress setInterfaceName:]', '-[AVCNetworkAddress setIp:]', 
                       '-[AVCNetworkAddress setIsIPv6:]', '-[AVCNetworkAddress setPort:]', 
                       '-[AVCPacketFilter isMatchedPacket:size:]', '-[AVCPacketFilterRTP initWithIncomingSSRC:accecptPacketType:]', 
                       '-[AVCPacketFilterRTP initWithIncomingSSRC:acceptPacketType:]', 
                       '-[AVCPacketFilterRTP isMatchedPacket:size:]', '-[AVCPacketFilterRTP isPayloadTypeMatched:]', 
                       '-[AVCPacketFilterRTP isRTCPPayload:]', '-[AVCPacketRelay connections]', 
                       '-[AVCPacketRelay dealloc]', '-[AVCPacketRelay delegate]', 
                       '-[AVCPacketRelay findConnectionToForwardData:size:]', 
                       '-[AVCPacketRelay initWithConnection:connection:error:]', 
                       '-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]', 
                       '-[AVCPacketRelay isAllConnectionTypeValid:]', '-[AVCPacketRelay multiplexedConnection]', 
                       '-[AVCPacketRelay setConnections:]', '-[AVCPacketRelay setDelegate:]', 
                       '-[AVCPacketRelay setMultiplexedConnection:]', '-[AVCPacketRelay startAllConnections]', 
                       '-[AVCPacketRelay start]', '-[AVCPacketRelay stopAllConnections]', 
                       '-[AVCPacketRelay stop]', '-[AVCPacketRelayDriver dealloc]', 
                       '-[AVCPacketRelayDriver init]', '-[AVCPacketRelayDriver startMonitoringFileDescriptor:forConnection:]', 
                       '-[AVCPacketRelayDriver stopMonitoringFileDescriptor:]', 
                       '-[AVCPacketRelayIDSConnection dealloc]', '-[AVCPacketRelayIDSConnection initWithIDSDestination:]', 
                       '-[AVCPacketRelayIDSConnection initWithIDSSocketDescriptor:]', 
                       '-[AVCPacketRelayIDSConnection isDemuxNeeded]', 
                       '-[AVCPacketRelayIDSConnection isResumed]', '-[AVCPacketRelayIDSConnection packetFilter]', 
                       '-[AVCPacketRelayIDSConnection readHandler]', '-[AVCPacketRelayIDSConnection readyToRead]', 
                       '-[AVCPacketRelayIDSConnection sendData:size:error:]', 
                       '-[AVCPacketRelayIDSConnection setIsDemuxNeeded:]', 
                       '-[AVCPacketRelayIDSConnection setIsResumed:]', 
                       '-[AVCPacketRelayIDSConnection setPacketFilter:]', 
                       '-[AVCPacketRelayIDSConnection setReadHandler:]', 
                       '-[AVCPacketRelayIDSConnection start]', '-[AVCPacketRelayIDSConnection stop]', 
                       '-[AVCPacketRelayIDSConnection type]', '-[AVCPacketRelaySocketConnection dealloc]', 
                       '-[AVCPacketRelaySocketConnection description]', 
                       '-[AVCPacketRelaySocketConnection initWithSocket:remoteAddress:packetFilter:]', 
                       '-[AVCPacketRelaySocketConnection isDemuxNeeded]', 
                       '-[AVCPacketRelaySocketConnection packetFilter]', 
                       '-[AVCPacketRelaySocketConnection readHandler]', 
                       '-[AVCPacketRelaySocketConnection readyToRead]', 
                       '-[AVCPacketRelaySocketConnection receiveDataOnSocket:]', 
                       '-[AVCPacketRelaySocketConnection sendData:size:error:]', 
                       '-[AVCPacketRelaySocketConnection setIsDemuxNeeded:]', 
                       '-[AVCPacketRelaySocketConnection setPacketFilter:]', 
                       '-[AVCPacketRelaySocketConnection setReadHandler:]', 
                       '-[AVCPacketRelaySocketConnection start]', '-[AVCPacketRelaySocketConnection stop]', 
                       '-[AVCPacketRelaySocketConnection type]', '-[AVCRTCPPacket SSRC]', 
                       '-[AVCRTCPPacket description]', '-[AVCRTCPPacket initWithRTCPPacket:]', 
                       '-[AVCRTCPPacket packetType]', '-[AVCRTCPPacket setPacketType:]', 
                       '-[AVCRTCPPacket setSSRC:]', '-[AVCRTCPReceiverReport cumulativePacketsLost]', 
                       '-[AVCRTCPReceiverReport delaySinceLastSR]', '-[AVCRTCPReceiverReport description]', 
                       '-[AVCRTCPReceiverReport extendedHighestSequenceNumber]', 
                       '-[AVCRTCPReceiverReport fractionLost]', '-[AVCRTCPReceiverReport initWithRTCPPacket:]', 
                       '-[AVCRTCPReceiverReport interarrivalJitter]', '-[AVCRTCPReceiverReport lastSRTimestamp]', 
                       '-[AVCRTCPReceiverReport reportedSourceSSRC]', '-[AVCRTCPReceiverReport setCumulativePacketsLost:]', 
                       '-[AVCRTCPReceiverReport setDelaySinceLastSR:]', 
                       '-[AVCRTCPReceiverReport setExtendedHighestSequenceNumber:]', 
                       '-[AVCRTCPReceiverReport setFractionLost:]', '-[AVCRTCPReceiverReport setInterarrivalJitter:]', 
                       '-[AVCRTCPReceiverReport setLastSRTimestamp:]', 
                       '-[AVCRTCPReceiverReport setReportedSourceSSRC:]', 
                       '-[AVCRTCPSenderReport NTPLeastSignificantWord]', 
                       '-[AVCRTCPSenderReport NTPMostSignificantWord]', 
                       '-[AVCRTCPSenderReport RTPTimestamp]', '-[AVCRTCPSenderReport dealloc]', 
                       '-[AVCRTCPSenderReport description]', '-[AVCRTCPSenderReport initWithRTCPPacket:]', 
                       '-[AVCRTCPSenderReport octetsSent]', '-[AVCRTCPSenderReport packetsSent]', 
                       '-[AVCRTCPSenderReport receiverReport]', '-[AVCRTCPSenderReport setNTPLeastSignificantWord:]', 
                       '-[AVCRTCPSenderReport setNTPMostSignificantWord:]', 
                       '-[AVCRTCPSenderReport setOctetsSent:]', '-[AVCRTCPSenderReport setPacketsSent:]', 
                       '-[AVCRTCPSenderReport setRTPTimestamp:]', '-[AVCRTCPSenderReport setReceiverReport:]', 
                       '-[AVCRTCPSourceDescription dealloc]', '-[AVCRTCPSourceDescription description]', 
                       '-[AVCRTCPSourceDescription initWithRTCPPacket:]', 
                       '-[AVCRTCPSourceDescription setText:]', '-[AVCRTCPSourceDescription setType:]', 
                       '-[AVCRTCPSourceDescription text]', '-[AVCRTCPSourceDescription type]', 
                       '-[AVCRemoteVideoClient cleanupSubLayerForMode:]', 
                       '-[AVCRemoteVideoClient connectionTypeString]', 
                       '-[AVCRemoteVideoClient dealloc]', '-[AVCRemoteVideoClient delegate]', 
                       '-[AVCRemoteVideoClient deregisterBlocksForNotifications]', 
                       '-[AVCRemoteVideoClient drawText:inSubLayer:]', 
                       '-[AVCRemoteVideoClient hasReceivedFirstFrame]', 
                       '-[AVCRemoteVideoClient hasReceivedLastFrame]', 
                       '-[AVCRemoteVideoClient initWithStreamToken:delegate:]', 
                       '-[AVCRemoteVideoClient insertInfoSubLayerIntoLayer:videoMode:]', 
                       '-[AVCRemoteVideoClient insertSubLayerInLayer:videoMode:videoSlot:]', 
                       '-[AVCRemoteVideoClient isMediaStalled]', '-[AVCRemoteVideoClient isVideoDegraded]', 
                       '-[AVCRemoteVideoClient isVideoPaused]', '-[AVCRemoteVideoClient registerBlocksForNotifications]', 
                       '-[AVCRemoteVideoClient remoteScreenAttributes]', 
                       '-[AVCRemoteVideoClient remoteVideoAttributes]', 
                       '-[AVCRemoteVideoClient setActiveVideoLayerForMode:]', 
                       '-[AVCRemoteVideoClient setActiveVideoModeFromRemoteVideoAttribute:]', 
                       '-[AVCRemoteVideoClient setConnectionTypeString:]', 
                       '-[AVCRemoteVideoClient setHasReceivedFirstFrame:]', 
                       '-[AVCRemoteVideoClient setHasReceivedLastFrame:]', 
                       '-[AVCRemoteVideoClient setIsMediaStalled:]', '-[AVCRemoteVideoClient setIsVideoDegraded:]', 
                       '-[AVCRemoteVideoClient setIsVideoPaused:]', '-[AVCRemoteVideoClient setRemoteScreenAttributes:]', 
                       '-[AVCRemoteVideoClient setRemoteVideoAttributes:]', 
                       '-[AVCRemoteVideoClient setShouldDisplayVideoInfoLayer:]', 
                       '-[AVCRemoteVideoClient setVideoLayer:forMode:]', 
                       '-[AVCRemoteVideoClient shouldDisplayVideoInfoLayer]', 
                       '-[AVCRemoteVideoClient slotForMode:]', '-[AVCRemoteVideoClient streamToken]', 
                       '-[AVCRemoteVideoClient subLayerForMode:]', '-[AVCRemoteVideoClient subLayerRefForMode:]', 
                       '-[AVCRemoteVideoClient terminateConnection]', '-[AVCRemoteVideoClient updateConnectionInfoWithLocalInterfaceType:remoteInterfaceType:]', 
                       '-[AVCVideoStream capabilities]', '-[AVCVideoStream configuration]', 
                       '-[AVCVideoStream configure:error:]', '-[AVCVideoStream dealloc]', 
                       '-[AVCVideoStream delegate]', '-[AVCVideoStream deregisterBlocksForDelegateNotifications]', 
                       '-[AVCVideoStream direction]', '-[AVCVideoStream getStats]', 
                       '-[AVCVideoStream initWithIDSDestination:callID:error:]', 
                       '-[AVCVideoStream initWithLocalAddress:networkSockets:IDSDestination:callID:error:]', 
                       '-[AVCVideoStream initWithNetworkSockets:callID:error:]', 
                       '-[AVCVideoStream isRTCPEnabled]', '-[AVCVideoStream isRTCPTimeOutEnabled]', 
                       '-[AVCVideoStream isRTPTimeOutEnabled]', '-[AVCVideoStream pause]', 
                       '-[AVCVideoStream refreshLoggingParameters]', '-[AVCVideoStream registerBlocksForDelegateNotifications]', 
                       '-[AVCVideoStream requestLastDecodedFrame]', '-[AVCVideoStream resume]', 
                       '-[AVCVideoStream rtcpSendIntervalSec]', '-[AVCVideoStream rtcpTimeOutIntervalSec]', 
                       '-[AVCVideoStream rtpTimeOutIntervalSec]', '-[AVCVideoStream setCapabilities:]', 
                       '-[AVCVideoStream setConfiguration:]', '-[AVCVideoStream setDelegate:]', 
                       '-[AVCVideoStream setDirection:]', '-[AVCVideoStream setRtcpEnabled:]', 
                       '-[AVCVideoStream setRtcpSendIntervalSec:]', '-[AVCVideoStream setRtcpTimeOutEnabled:]', 
                       '-[AVCVideoStream setRtcpTimeOutIntervalSec:]', 
                       '-[AVCVideoStream setRtpTimeOutEnabled:]', '-[AVCVideoStream setRtpTimeOutIntervalSec:]', 
                       '-[AVCVideoStream start]', '-[AVCVideoStream stop]', 
                       '-[AVCVideoStream streamToken]', '-[AVCVideoStream terminateSession]', 
                       '-[AVCVideoStream updateVideoConfiguration:]', '-[AVCVideoStream vcMediaStream:didPauseStream:error:]', 
                       '-[AVCVideoStream vcMediaStream:didReceiveRTCPPackets:]', 
                       '-[AVCVideoStream vcMediaStream:didResumeStream:error:]', 
                       '-[AVCVideoStream vcMediaStream:didStartStream:error:]', 
                       '-[AVCVideoStream vcMediaStream:didUpdateVideoConfiguration:error:dictionary:]', 
                       '-[AVCVideoStream vcMediaStream:downlinkQualityDidChange:]', 
                       '-[AVCVideoStream vcMediaStream:uplinkQualityDidChange:]', 
                       '-[AVCVideoStream vcMediaStreamDidRTCPTimeOut:]', 
                       '-[AVCVideoStream vcMediaStreamDidRTPTimeOut:]', 
                       '-[AVCVideoStream vcMediaStreamDidStop:]', '-[AVCVideoStreamConfig cvoExtensionID]', 
                       '-[AVCVideoStreamConfig enableCVO]', '-[AVCVideoStreamConfig framerate]', 
                       '-[AVCVideoStreamConfig isValid]', '-[AVCVideoStreamConfig isVideoProtected]', 
                       '-[AVCVideoStreamConfig keyFrameInterval]', '-[AVCVideoStreamConfig remoteVideoInitialOrientation]', 
                       '-[AVCVideoStreamConfig rxCodecType]', '-[AVCVideoStreamConfig rxMaxBitrate]', 
                       '-[AVCVideoStreamConfig rxMinBitrate]', '-[AVCVideoStreamConfig setCvoExtensionID:]', 
                       '-[AVCVideoStreamConfig setEnableCVO:]', '-[AVCVideoStreamConfig setFramerate:]', 
                       '-[AVCVideoStreamConfig setIsVideoProtected:]', 
                       '-[AVCVideoStreamConfig setKeyFrameInterval:]', 
                       '-[AVCVideoStreamConfig setRemoteVideoInitialOrientation:]', 
                       '-[AVCVideoStreamConfig setRxCodecType:]', '-[AVCVideoStreamConfig setRxMaxBitrate:]', 
                       '-[AVCVideoStreamConfig setRxMinBitrate:]', '-[AVCVideoStreamConfig setTxCodecType:]', 
                       '-[AVCVideoStreamConfig setTxMaxBitrate:]', '-[AVCVideoStreamConfig setTxMinBitrate:]', 
                       '-[AVCVideoStreamConfig setVideoResolution:]', '-[AVCVideoStreamConfig txCodecType]', 
                       '-[AVCVideoStreamConfig txMaxBitrate]', '-[AVCVideoStreamConfig txMinBitrate]', 
                       '-[AVCVideoStreamConfig videoResolution]', '-[AVCVirtualTTYDevice dealloc]', 
                       '-[AVCVirtualTTYDevice delegate]', '-[AVCVirtualTTYDevice deregisterBlocksForDelegateNotifications]', 
                       '-[AVCVirtualTTYDevice initWithMode:error:]', '-[AVCVirtualTTYDevice registerBlocksForDelegateNotifications]', 
                       '-[AVCVirtualTTYDevice sendCharacter:]', '-[AVCVirtualTTYDevice setDelegate:]', 
                       '-[AVCVirtualTTYDevice start]', '-[AVCVirtualTTYDevice stop]', 
                       '-[AVCVirtualTTYDevice terminateSession]', '-[AVConference addGKSCallEvent:sessionID:]', 
                       '-[AVConference callMetadataForCallID:]', '-[AVConference cancelCallID:]', 
                       '-[AVConference capabilitiesForCallID:]', '-[AVConference cleanupSubLayerFront]', 
                       '-[AVConference convertBlobtoNewBlob:]', '-[AVConference convertBlobtoOldBlob:]', 
                       '-[AVConference currentAudioInputDevice]', '-[AVConference currentAudioOutputDevice]', 
                       '-[AVConference dealloc]', '-[AVConference delegate]', 
                       '-[AVConference doBlockingConnectionCheck]', '-[AVConference getIsAudioPaused:callID:error:]', 
                       '-[AVConference getIsVideoPaused:callID:error:]', 
                       '-[AVConference handleGKSConnectivitySettingsUpdate:]', 
                       '-[AVConference initWithClientUUID:]', '-[AVConference initWithClientUUID:transportType:]', 
                       '-[AVConference init]', '-[AVConference initializeNewCallWithDeviceRole:]', 
                       '-[AVConference initializeNewCall]', '-[AVConference inputMeterLevel]', 
                       '-[AVConference insertSubLayerFrontInLayer:videoSlot:]', 
                       '-[AVConference inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:]', 
                       '-[AVConference isInputFrequencyMeteringEnabled]', 
                       '-[AVConference isInputMeteringEnabled]', '-[AVConference isMicrophoneMuted]', 
                       '-[AVConference isOutputFrequencyMeteringEnabled]', 
                       '-[AVConference isOutputMeteringEnabled]', '-[AVConference isSpeakerPhoneEnabled]', 
                       '-[AVConference isUsingViceroyBlobFormat]', '-[AVConference lastActiveCallID]', 
                       '-[AVConference listenForNotifications]', '-[AVConference localBitrateForCallID:]', 
                       '-[AVConference localFrameHeight]', '-[AVConference localFrameWidth]', 
                       '-[AVConference localFramerateForCallID:]', '-[AVConference localPacketLossRateForCallID:]', 
                       '-[AVConference localScreenAttributesForVideoAttributes:]', 
                       '-[AVConference natType]', '-[AVConference networkQualityForCallID:]', 
                       '-[AVConference networkQualityGraphLayer]', '-[AVConference networkQualityUpdateTimer]', 
                       '-[AVConference networkQuality]', '-[AVConference newRandomParticipantID]', 
                       '-[AVConference outputMeterLevel]', '-[AVConference processCancelRelayRequest:cancelDict:didOriginateRequest:]', 
                       '-[AVConference processRelayRequestResponse:responseDict:didOriginateRequest:]', 
                       '-[AVConference processRelayUpdate:updateDict:didOriginateRequest:]', 
                       '-[AVConference processRemoteIPChange:callID:]', 
                       '-[AVConference remoteBitrateForCallID:]', '-[AVConference remoteCancelledCallID:]', 
                       '-[AVConference remoteFrameHeightForCallID:]', '-[AVConference remoteFrameWidthForCallID:]', 
                       '-[AVConference remoteFramerateForCallID:]', '-[AVConference remotePacketLossRateForCallID:]', 
                       '-[AVConference remoteVideoBackLayer]', '-[AVConference remoteVideoLayer]', 
                       '-[AVConference requiresWifi]', '-[AVConference roundTripTimeForCallID:]', 
                       '-[AVConference sendARPLData:toCallID:]', '-[AVConference sendData:forCallID:encrypted:]', 
                       '-[AVConference sendProtobuf:withType:forCallID:]', 
                       '-[AVConference setActive:]', '-[AVConference setActiveRemoteVideoLayerFront:]', 
                       '-[AVConference setAudioInputDevice:]', '-[AVConference setAudioOutputDevice:]', 
                       '-[AVConference setCallReport:withReport:]', '-[AVConference setConferenceState:forCallID:]', 
                       '-[AVConference setConferenceVisualRectangle:forCallID:]', 
                       '-[AVConference setDelegate:]', '-[AVConference setEnableSpeakerPhone:]', 
                       '-[AVConference setInputFrequencyMeteringEnabled:]', 
                       '-[AVConference setInputMeteringEnabled:]', '-[AVConference setLastActiveCallID:]', 
                       '-[AVConference setLocalScreenAttributes:]', '-[AVConference setMicrophoneMuted:]', 
                       '-[AVConference setNetworkQualityGraphLayer:]', 
                       '-[AVConference setNetworkQualityUpdateTimer:]', 
                       '-[AVConference setOutputFrequencyMeteringEnabled:]', 
                       '-[AVConference setOutputMeteringEnabled:]', '-[AVConference setPauseAudio:callID:error:]', 
                       '-[AVConference setPauseVideo:callID:error:]', '-[AVConference setPeerCN:callID:]', 
                       '-[AVConference setPeerProtocolVersion:forCallID:]', 
                       '-[AVConference setRemoteVideoBackLayer:]', '-[AVConference setRemoteVideoLayer:]', 
                       '-[AVConference setRequiresWifi:]', '-[AVConference setServerInfo:]', 
                       '-[AVConference setSessionID:callID:]', '-[AVConference setSetSessionID:forCallID:]', 
                       '-[AVConference setShouldDisplayNetworkQualityGraph:]', 
                       '-[AVConference setUseViceroyBlobFormat:]', '-[AVConference shouldDisplayNetworkQualityGraph]', 
                       '-[AVConference shouldSendBlackFrames:callID:]', 
                       '-[AVConference startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:]', 
                       '-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]', 
                       '-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:]', 
                       '-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]', 
                       '-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]', 
                       '-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]', 
                       '-[AVConference startNetworkQualityUpdateTimer]', 
                       '-[AVConference statsForCallID:]', '-[AVConference stopCallID:]', 
                       '-[AVConference stopListeningForNotifications]', 
                       '-[AVConference stopNetworkQualityUpdateTimer]', 
                       '-[AVConference updateCapabilities:forCallID:]', 
                       '-[AVConference updateGKSConnectivitySettings]', 
                       '-[AVConference updateNetworkQualityGraph]', '-[AVConference videoConference:cancelRelayRequest:requestDict:]', 
                       '-[AVConference videoConference:closeConnectionForCallID:]', 
                       '-[AVConference videoConference:didChangeLocalVariablesForCallID:]', 
                       '-[AVConference videoConference:didReceiveARPLData:forCallID:]', 
                       '-[AVConference videoConference:didReceiveData:forCallID:]', 
                       '-[AVConference videoConference:didReceiveFirstRemoteFrameForCallID:]', 
                       '-[AVConference videoConference:didRemoteScreenAttributesChange:forCallID:]', 
                       '-[AVConference videoConference:didRemoteVideoAttributesChange:forCallID:]', 
                       '-[AVConference videoConference:didStartSession:withCallID:error:]', 
                       '-[AVConference videoConference:didStartSession:withCallID:withUserInfo:error:]', 
                       '-[AVConference videoConference:didStopWithCallID:error:]', 
                       '-[AVConference videoConference:didStopWithCallID:error:callMetadata:]', 
                       '-[AVConference videoConference:inititiateRelayRequest:requestDict:]', 
                       '-[AVConference videoConference:isRemoteAudioBelowThreshold:]', 
                       '-[AVConference videoConference:localAudioEnabled:forCallID:error:]', 
                       '-[AVConference videoConference:localIPChange:withCallID:]', 
                       '-[AVConference videoConference:reinitializeCallForCallID:]', 
                       '-[AVConference videoConference:remoteAudioEnabled:forCallID:]', 
                       '-[AVConference videoConference:remoteAudioPaused:callID:]', 
                       '-[AVConference videoConference:remoteCallingModeChanged:forCallID:]', 
                       '-[AVConference videoConference:remoteMediaStalled:callID:]', 
                       '-[AVConference videoConference:remoteVideoPaused:callID:]', 
                       '-[AVConference videoConference:sendRelayUpdate:updateDict:]', 
                       '-[AVConference videoConference:updateInputFrequencyLevel:]', 
                       '-[AVConference videoConference:updateInputMeterLevel:]', 
                       '-[AVConference videoConference:updateOutputFrequencyLevel:]', 
                       '-[AVConference videoConference:updateOutputMeterLevel:]', 
                       '-[AVConference videoConference:videoQualityNotificationForCallID:isDegraded:isRemote:]', 
                       '-[AVConference videoConference:withCallID:didPauseAudio:error:]', 
                       '-[AVConference videoConference:withCallID:didPauseVideo:error:]', 
                       '-[AVConference videoConference:withCallID:networkHint:]', 
                       '-[AVConference videoStreamTokenForCallID:]', '-[AVConference warmupForCall]', 
                       '-[AVConference(Private) callStateForCallID:]', 
                       '-[AVConference(Private) deregisterBlocksForVCNotifications]', 
                       '-[AVConference(Private) registerBlocksForVCNotifications]', 
                       '-[AVConference(Private) serverDied]', '-[AVConference(Private) serverReconnected]', 
                       '-[AVConference(Private) setCallState:forCallID:]', 
                       '-[AVConferenceCallState capabilities]', '-[AVConferenceCallState dealloc]', 
                       '-[AVConferenceCallState isAudioPaused]', '-[AVConferenceCallState isVideoPaused]', 
                       '-[AVConferenceCallState setAudioIsPaused:]', '-[AVConferenceCallState setCapabilities:]', 
                       '-[AVConferenceCallState setIsVideoPaused:]', '-[AVConferencePreview allocWithZone:]', 
                       '-[AVConferencePreview autorelease]', '-[AVConferencePreview beginPIPToPreviewAnimation]', 
                       '-[AVConferencePreview beginPreviewToPIPAnimation]', 
                       '-[AVConferencePreview cameraDidBecomeAvailable:]', 
                       '-[AVConferencePreview connectLayer:withSlot:]', 
                       '-[AVConferencePreview copyWithZone:]', '-[AVConferencePreview dealloc]', 
                       '-[AVConferencePreview delegate]', '-[AVConferencePreview didChangeLocalScreenAttributes:]', 
                       '-[AVConferencePreview didChangeLocalVideoAttributes:]', 
                       '-[AVConferencePreview didGetSnapshot:]', '-[AVConferencePreview didPausePreview]', 
                       '-[AVConferencePreview didReceiveCommError]', '-[AVConferencePreview didReceiveErrorFromCamera:error:]', 
                       '-[AVConferencePreview didReceiveFirstPreviewFrameFromCamera:]', 
                       '-[AVConferencePreview didStartPreview]', '-[AVConferencePreview didStopPreview]', 
                       '-[AVConferencePreview endPIPToPreviewAnimation]', 
                       '-[AVConferencePreview endPreviewToPIPAnimation]', 
                       '-[AVConferencePreview getSnapshot]', '-[AVConferencePreview init]', 
                       '-[AVConferencePreview isPreviewRunning]', '-[AVConferencePreview localCamera]', 
                       '-[AVConferencePreview localScreenAttributesForVideoAttributes:]', 
                       '-[AVConferencePreview localVideoAttributes]', '-[AVConferencePreview localVideoLayer:]', 
                       '-[AVConferencePreview pausePreview]', '-[AVConferencePreview registerBlocksForDelegateNotifications]', 
                       '-[AVConferencePreview release]', '-[AVConferencePreview retainCount]', 
                       '-[AVConferencePreview retain]', '-[AVConferencePreview setDelegate:]', 
                       '-[AVConferencePreview setLocalCamera:]', '-[AVConferencePreview setLocalScreenAttributes:]', 
                       '-[AVConferencePreview setLocalVideoAttributes:]', 
                       '-[AVConferencePreview setLocalVideoLayer:front:]', 
                       '-[AVConferencePreview startPreviewUnpausing:]', 
                       '-[AVConferencePreview startPreview]', '-[AVConferencePreview stopPreview]', 
                       '-[AVConferenceXPCClient closeConnectionToServer]', 
                       '-[AVConferenceXPCClient connectionPersists]', '-[AVConferenceXPCClient connection]', 
                       '-[AVConferenceXPCClient copyConnection]', '-[AVConferenceXPCClient createConnectionToServer]', 
                       '-[AVConferenceXPCClient dealloc]', '-[AVConferenceXPCClient deregisterFromService:]', 
                       '-[AVConferenceXPCClient init]', '-[AVConferenceXPCClient newNSDictionaryFromNSError:]', 
                       '-[AVConferenceXPCClient newNSDictionaryFromXPCDictionary:]', 
                       '-[AVConferenceXPCClient newNSErrorFromNSDictionary:]', 
                       '-[AVConferenceXPCClient newServerDiedDictionary]', 
                       '-[AVConferenceXPCClient newTimeoutDictionary]', 
                       '-[AVConferenceXPCClient newXPCDictionaryFromNSDictionary:]', 
                       '-[AVConferenceXPCClient registerBlockForService:block:]', 
                       '-[AVConferenceXPCClient registerBlockForService:block:queue:]', 
                       '-[AVConferenceXPCClient registerBlockForService:block:queue:eventLogLevel:]', 
                       '-[AVConferenceXPCClient registeredBlocks]', '-[AVConferenceXPCClient sendMessageAsync:]', 
                       '-[AVConferenceXPCClient sendMessageAsync:arguments:]', 
                       '-[AVConferenceXPCClient sendMessageAsync:arguments:reply:]', 
                       '-[AVConferenceXPCClient sendMessageAsync:arguments:reply:queue:]', 
                       '-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:]', 
                       '-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:]', 
                       '-[AVConferenceXPCClient sendMessageSync:]', '-[AVConferenceXPCClient sendMessageSync:arguments:]', 
                       '-[AVConferenceXPCClient sendMessageSync:arguments:xpcArguments:]', 
                       '-[AVConferenceXPCServer _xpc_start_listening_for_connections]', 
                       '-[AVConferenceXPCServer allocWithZone:]', '-[AVConferenceXPCServer appendContextToDictionary:forConnection:]', 
                       '-[AVConferenceXPCServer appendPIDToDictionary:pid:]', 
                       '-[AVConferenceXPCServer authorizedTokenData]', 
                       '-[AVConferenceXPCServer autorelease]', '-[AVConferenceXPCServer copyWithZone:]', 
                       '-[AVConferenceXPCServer dealloc]', '-[AVConferenceXPCServer deregisterFromService:]', 
                       '-[AVConferenceXPCServer init]', '-[AVConferenceXPCServer listener]', 
                       '-[AVConferenceXPCServer newClientDiedDictionary]', 
                       '-[AVConferenceXPCServer newNSDictionaryFromNSError:]', 
                       '-[AVConferenceXPCServer newNSDictionaryFromXPCDictionary:]', 
                       '-[AVConferenceXPCServer newNSErrorFromNSDictionary:]', 
                       '-[AVConferenceXPCServer newXPCDictionaryFromNSDictionary:forEvent:]', 
                       '-[AVConferenceXPCServer registerBlockForService:block:]', 
                       '-[AVConferenceXPCServer registerBlockForService:block:queue:]', 
                       '-[AVConferenceXPCServer registerBlockForService:block:queue:eventLogLevel:]', 
                       '-[AVConferenceXPCServer registeredBlocks]', '-[AVConferenceXPCServer release]', 
                       '-[AVConferenceXPCServer retainCount]', '-[AVConferenceXPCServer retain]', 
                       '-[AVConferenceXPCServer sendMessageAsync:arguments:]', 
                       '-[AVConferenceXPCServer sendMessageAsync:arguments:context:]', 
                       '-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]', 
                       '-[AVConferenceXPCServer(XPCManagement) _xpc_add_connection_to_list:]', 
                       '-[AVConferenceXPCServer(XPCManagement) _xpc_get_connection_from_list_for_connection:]', 
                       '-[AVConferenceXPCServer(XPCManagement) _xpc_get_connection_from_list_for_context:]', 
                       '-[AVConferenceXPCServer(XPCManagement) _xpc_get_connections_from_list_for_context:]', 
                       '-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]', 
                       '-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connection_from_list:]', 
                       '-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connections_from_list]', 
                       '-[AVInternalDeviceList changeListener]', '-[AVInternalDeviceList cleanup]', 
                       '-[AVInternalDeviceList dealloc]', '-[AVInternalDeviceList deviceList]', 
                       '-[AVInternalDeviceList init]', '-[AVInternalDeviceList setChangeListener:]', 
                       '-[AVPingTest avg]', '-[AVPingTest calculateInterfaceName]', 
                       '-[AVPingTest dealloc]', '-[AVPingTest description]', 
                       '-[AVPingTest initWithIPAsString:usingWifi:]', '-[AVPingTest max]', 
                       '-[AVPingTest min]', '-[AVPingTest packetLossRate]', 
                       '-[AVPingTest start]', '-[AVPingTest stddev]', '-[AVPingTest usingWifi]', 
                       '-[AVPingTest(ParsingHelper) parsePingLineForBadCommand:]', 
                       '-[AVPingTest(ParsingHelper) parsePingLineForBadInterface:]', 
                       '-[AVPingTest(ParsingHelper) parsePingLineForLatencyStats:]', 
                       '-[AVPingTest(ParsingHelper) parsePingLineForPLR:]', 
                       '-[AVPingTest(ParsingHelper) parseResults:secondLastLine:]', 
                       '-[AVTelephonyInterface dealloc]', '-[AVTelephonyInterface delegate]', 
                       '-[AVTelephonyInterface handleTelephonyNotification:withInfo:]', 
                       '-[AVTelephonyInterface handleVocoderNotificationWithInfo:]', 
                       '-[AVTelephonyInterface init]', '-[AVTelephonyInterface registerForNotifications]', 
                       '-[AVTelephonyInterface setDelegate:]', '-[AVTelephonyInterface translateVocoderTypeToCoreAudioType:]', 
                       '-[AVTelephonyInterface unregisterForNotifications]', 
                       '-[CMVideoCapture copyColorInfo:]', '-[CMVideoCapture dealloc]', 
                       '-[CMVideoCapture frameBecameAvailableCount:figBufferQueueEmptyCount:figBufferQueueErrorCount:]', 
                       '-[CMVideoCapture getCameraType:]', '-[CMVideoCapture getPreviewFrameCount:captureFrameCount:reset:]', 
                       '-[CMVideoCapture initWithOptions:frameCallback:videoCaptureEventCallbackData:videoCaptureEventCallback:width:height:frameRate:cameraType:withError:]', 
                       '-[CMVideoCapture isPreviewRunning]', '-[CMVideoCapture setCameraType:]', 
                       '-[CMVideoCapture setFrameRatePercentage:newFramerate:]', 
                       '-[CMVideoCapture setWidth:height:frameRate:]', 
                       '-[CMVideoCapture startCaptureWithWidth:height:frameRate:]', 
                       '-[CMVideoCapture startPreview]', '-[CMVideoCapture stop:]', 
                       '-[CMVideoCaptureCameraTorchManager closeTorchDevice]', 
                       '-[CMVideoCaptureCameraTorchManager initWithVideoCaptureHandle:]', 
                       '-[CMVideoCaptureCameraTorchManager openTorchDevice]', 
                       '-[CMVideoCaptureCameraTorchManager turnTorchOff]', 
                       '-[CMVideoCaptureCameraTorchManager turnTorchOn]', 
                       '-[CameraConferenceSynchronizer cameraSizeChangedTo:]', 
                       '-[CameraConferenceSynchronizer changeCameraToCaptureSettings:forced:]', 
                       '-[CameraConferenceSynchronizer dealloc]', '-[CameraConferenceSynchronizer init]', 
                       '-[CameraConferenceSynchronizer localPortraitAspectRatio]', 
                       '-[CameraConferenceSynchronizer notifyClientOfRemoteFrame:]', 
                       '-[CameraConferenceSynchronizer reset]', '-[CameraConferenceSynchronizer scheduleCameraChangeToCaptureSettings:]', 
                       '-[CameraConferenceSynchronizer scheduleCameraChangeToPreviewSettings]', 
                       '-[CameraConferenceSynchronizer scheduleFirstRemoteFrameNotification:]', 
                       '-[CameraConferenceSynchronizer setLocalPortraitAspectRatio:]', 
                       '-[CameraConferenceSynchronizer shouldConferenceChangeCameraToCaptureSettings]', 
                       '-[CameraConferenceSynchronizer shouldConferenceChangeCameraToPreviewSettings]', 
                       '-[CameraConferenceSynchronizer shouldConferenceSendFirstRemoteFrameNotification]', 
                       '-[CannedAVSync addDrift:]', '-[CannedAVSync addStreamWithCount:rate:]', 
                       '-[CannedAVSync base]', '-[CannedAVSync clampForTime:]', 
                       '-[CannedAVSync clear]', '-[CannedAVSync init]', 
                       '-[CannedAVSync modulo]', '-[CannedAVSync setBase:]', 
                       '-[CannedAVSync setModulo:]', '-[CannedAudioInjector cannedMoviePath]', 
                       '-[CannedAudioInjector dealloc]', '-[CannedAudioInjector decodeAudio]', 
                       '-[CannedAudioInjector fromBeginning]', '-[CannedAudioInjector initWithPath:withDescription:fromBeginning:]', 
                       '-[CannedAudioInjector injectToBuffer:size:time:muted:]', 
                       '-[CannedAudioInjector position]', '-[CannedAudioInjector readRawAudioSamples]', 
                       '-[CannedAudioInjector samples]', '-[CannedAudioInjector setCannedMoviePath:]', 
                       '-[CannedAudioInjector setFromBeginning:]', '-[CannedAudioInjector setPosition:]', 
                       '-[CannedAudioInjector setSamples:]', '-[CannedEncodedVideoCapture allFrameCount]', 
                       '-[CannedEncodedVideoCapture allFrameRate]', '-[CannedEncodedVideoCapture assetReader]', 
                       '-[CannedEncodedVideoCapture compressedFileAsset]', 
                       '-[CannedEncodedVideoCapture createPixelBufferForFrameIndex:]', 
                       '-[CannedEncodedVideoCapture dealloc]', '-[CannedEncodedVideoCapture frameCount]', 
                       '-[CannedEncodedVideoCapture getFrameRate:frameCount:]', 
                       '-[CannedEncodedVideoCapture height]', '-[CannedEncodedVideoCapture initWithPath:]', 
                       '-[CannedEncodedVideoCapture initializeDecoder]', 
                       '-[CannedEncodedVideoCapture initialize]', '-[CannedEncodedVideoCapture movieURLString]', 
                       '-[CannedEncodedVideoCapture readerVideoTrackOutput]', 
                       '-[CannedEncodedVideoCapture rotatePixelBuffer:andStoreTo:]', 
                       '-[CannedEncodedVideoCapture setAllFrameCount:]', 
                       '-[CannedEncodedVideoCapture setAllFrameRate:]', 
                       '-[CannedEncodedVideoCapture setAssetReader:]', 
                       '-[CannedEncodedVideoCapture setCompressedFileAsset:]', 
                       '-[CannedEncodedVideoCapture setFrameCount:]', '-[CannedEncodedVideoCapture setHeight:]', 
                       '-[CannedEncodedVideoCapture setMovieURLString:]', 
                       '-[CannedEncodedVideoCapture setReaderVideoTrackOutput:]', 
                       '-[CannedEncodedVideoCapture setVideoScaler:]', 
                       '-[CannedEncodedVideoCapture setVideoTrack:]', '-[CannedEncodedVideoCapture setWidth:]', 
                       '-[CannedEncodedVideoCapture setWidth:height:]', 
                       '-[CannedEncodedVideoCapture videoScaler]', '-[CannedEncodedVideoCapture videoTrack]', 
                       '-[CannedEncodedVideoCapture width]', '-[CannedRawVideoCapture allFrameCount]', 
                       '-[CannedRawVideoCapture allFrameRate]', '-[CannedRawVideoCapture allResolutions]', 
                       '-[CannedRawVideoCapture createPixelBufferForFrameIndex:]', 
                       '-[CannedRawVideoCapture currentResolution]', '-[CannedRawVideoCapture dealloc]', 
                       '-[CannedRawVideoCapture getFrameRate:frameCount:]', 
                       '-[CannedRawVideoCapture height]', '-[CannedRawVideoCapture initWithPath:]', 
                       '-[CannedRawVideoCapture initializeFrameResolutionArrayFromFolder:]', 
                       '-[CannedRawVideoCapture rotatePixelBuffer:andStoreTo:]', 
                       '-[CannedRawVideoCapture setAllFrameCount:]', '-[CannedRawVideoCapture setAllFrameRate:]', 
                       '-[CannedRawVideoCapture setAllResolutions:]', '-[CannedRawVideoCapture setCurrentResolution:]', 
                       '-[CannedRawVideoCapture setHeight:]', '-[CannedRawVideoCapture setVideoScaler:]', 
                       '-[CannedRawVideoCapture setWidth:]', '-[CannedRawVideoCapture setWidth:height:]', 
                       '-[CannedRawVideoCapture videoScaler]', '-[CannedRawVideoCapture width]', 
                       '-[CannedVideoCapture copyColorInfo:]', '-[CannedVideoCapture dealloc]', 
                       '-[CannedVideoCapture frameFeeder]', '-[CannedVideoCapture getCamera:]', 
                       '-[CannedVideoCapture getCameraType:]', '-[CannedVideoCapture initWithOptions:callback:width:height:frameRate:cameraType:folder:withError:]', 
                       '-[CannedVideoCapture isPreviewRunning]', '-[CannedVideoCapture pimpl]', 
                       '-[CannedVideoCapture setCamera:]', '-[CannedVideoCapture setCameraType:]', 
                       '-[CannedVideoCapture setFrameFeeder:]', '-[CannedVideoCapture setWidth:height:frameRate:]', 
                       '-[CannedVideoCapture startCaptureWithWidth:height:frameRate:]', 
                       '-[CannedVideoCapture startPreview]', '-[CannedVideoCapture startThreads]', 
                       '-[CannedVideoCapture stop:]', '-[CannedVideoCapture stopThreads]', 
                       '-[DTMFEventHandler constructDTMFEventPacketWithEvent:volume:durationCounter:interval:dataBuffer:isEnd:]', 
                       '-[DTMFEventHandler dealloc]', '-[DTMFEventHandler init]', 
                       '-[DTMFEventHandler insertStartBlockWithEvent:volume:timestamp:]', 
                       '-[DTMFEventHandler insertStopBlockWithTimestamp:]', 
                       '-[DTMFEventHandler sendDTMFEvent:atTimestamp:withSampleRate:]', 
                       '-[DTMFEventHandler sendingDTMFEventWithTimeStamp:interval:RTPHandle:]', 
                       '-[DTMFEventHandler shouldTransmitDTMFWithTimestamp:]', 
                       '-[DTMFEventHandler stopDTMFEvent]', '-[FFTMeter computeWithSampleBuffer:numSamples:voiceActive:]', 
                       '-[FFTMeter dealloc]', '-[FFTMeter init]', '-[GKInterfaceListener _isCellUp]', 
                       '-[GKInterfaceListener _isWifiUp]', '-[GKInterfaceListener dealloc]', 
                       '-[GKInterfaceListener hasConnectionWithWifi:cell:]', 
                       '-[GKInterfaceListener init]', '-[GKInterfaceListener interfaceListenerDelegate]', 
                       '-[GKInterfaceListener setInterfaceListenerDelegate:]', 
                       '-[GKInterfaceListener set_isCellUp:]', '-[GKInterfaceListener set_isWifiUp:]', 
                       '-[GKInterfaceListener startChangeListener]', '-[GKInterfaceListener startRoutingChangeListener]', 
                       '-[GKInterfaceListener stopChangeListener]', '-[GKInterfaceListener stopRoutingChangeListener]', 
                       '-[GKNATObserver currentNATType]', '-[GKNATObserver delegate]', 
                       '-[GKNATObserver initWithOptions:]', '-[GKNATObserver setDelegate:]', 
                       '-[GKNATObserver shouldTryNATCheck]', '-[GKNATObserverInternal HTTPCheckWithIPPort:ipv6Prefix:useCache:]', 
                       '-[GKNATObserverInternal HTTPSCheckWithIPPort:ipv6Prefix:useCache:]', 
                       '-[GKNATObserverInternal NATCheckWithIPPort:ipv6Prefix:useCache:]', 
                       '-[GKNATObserverInternal cacheNATFlags:forNetwork:]', 
                       '-[GKNATObserverInternal calculateSummmaryNATType:andCarrierNATType:andNonCarrierNATType:copyInterfaceInfoDictionary:]', 
                       '-[GKNATObserverInternal callCommNATTestFromIPPort:ipv6Prefix:]', 
                       '-[GKNATObserverInternal callHTTPTestFromIPPort:ipv6Prefix:ToServer:isSSL:]', 
                       '-[GKNATObserverInternal clearRetries]', '-[GKNATObserverInternal copyNatTypeCachePlistScheme]', 
                       '-[GKNATObserverInternal copyNatTypeCache]', '-[GKNATObserverInternal copyNatTypeCache_OSXGamedScheme]', 
                       '-[GKNATObserverInternal currentNATType]', '-[GKNATObserverInternal dealloc]', 
                       '-[GKNATObserverInternal delegate]', '-[GKNATObserverInternal ensureNatCachePathExists]', 
                       '-[GKNATObserverInternal initWithOptions:]', '-[GKNATObserverInternal init]', 
                       '-[GKNATObserverInternal lookupCachedNATFlagsForNetwork:]', 
                       '-[GKNATObserverInternal nameForNetworkWithIPPort:interfaceName:]', 
                       '-[GKNATObserverInternal natTypeForCommNATFlags:isCarrier:]', 
                       '-[GKNATObserverInternal registerForNetworkChanges]', 
                       '-[GKNATObserverInternal release]', '-[GKNATObserverInternal reportNATType]', 
                       '-[GKNATObserverInternal setCommNATFlags:forInterface:isCached:]', 
                       '-[GKNATObserverInternal setDelegate:]', '-[GKNATObserverInternal setFlags:forInterface:isCached:isCachedKey:mask:]', 
                       '-[GKNATObserverInternal setSSLFlags:forInterface:isCached:]', 
                       '-[GKNATObserverInternal setTCPFlags:forInterface:isCached:]', 
                       '-[GKNATObserverInternal shouldTryNATCheck]', '-[GKNATObserverInternal tryNATCheckWithDelay:]', 
                       '-[GKNATObserverInternal updateNatTypeCache:]', 
                       '-[GKNATObserverInternal updateNatTypeCache_CachePlistScheme:]', 
                       '-[GKNATObserverInternal updateNatTypeCache_OSXGamedScheme:]', 
                       '-[GKNATObserver_SCContext observer]', '-[GKNATObserver_SCContext setObserver:]', 
                       '-[GKRingBuffer dealloc]', '-[GKRingBuffer fetch:numSamples:timestamp:]', 
                       '-[GKRingBuffer increaseCapacity:]', '-[GKRingBuffer initWithCapacity:bytesPerFrame:]', 
                       '-[GKRingBuffer init]', '-[GKRingBuffer needsNewNumSamples:timestamp:]', 
                       '-[GKRingBuffer store:numSamples:timestamp:]', '-[GKSConnectivitySettings dealloc]', 
                       '-[GKSConnectivitySettings init]', '-[HandleWrapper handle]', 
                       '-[HandleWrapper setHandle:]', '-[ICEResultQuery callID]', 
                       '-[ICEResultQuery dealloc]', '-[ICEResultQuery initWithCallID:]', 
                       '-[ICEResultQuery initWithResult:]', '-[ICEResultQuery isQueryAnswered]', 
                       '-[ICEResultQuery result]', '-[ICEResultQuery setCallID:]', 
                       '-[ICEResultQuery setIsQueryAnswered:]', '-[ICEResultQuery setResult:]', 
                       '-[ICEResultWaitQueue addResult:forCallID:]', '-[ICEResultWaitQueue copyResultForCallID:]', 
                       '-[ICEResultWaitQueue dealloc]', '-[ICEResultWaitQueue init]', 
                       '-[IPPortWrapper dealloc]', '-[IPPortWrapper init]', 
                       '-[IPPortWrapper ipport]', '-[IPPortWrapper setIpport:]', 
                       '-[IPv6PrefixWrapper dealloc]', '-[IPv6PrefixWrapper initWithPrefix:]', 
                       '-[IPv6PrefixWrapper ipv6Prefix]', '-[LoopbackSocketTunnel getIPPort:]', 
                       '-[LoopbackSocketTunnel getVTPIPPort:]', '-[LoopbackSocketTunnel initWithPort:delegate:error:]', 
                       '-[LoopbackSocketTunnel optionalArg]', '-[LoopbackSocketTunnel sendPacketToVTP:]', 
                       '-[LoopbackSocketTunnel serverLoopProc]', '-[LoopbackSocketTunnel setOptionalArg:]', 
                       '-[LoopbackSocketTunnel setVTPIP:]', '-[LoopbackSocketTunnel shutdownSocket]', 
                       '-[NSDictionary(GK_NSDictionaryDeepMutableCopy) copyGKSDeepMutable]', 
                       '-[NSDictionary(NSDictionaryCopy_AVConference) copyGKSDeep]', 
                       '-[SDPMediaLine addAttribute:]', '-[SDPMediaLine addImageAttributeRules:transportType:payload:direction:attributeString:]', 
                       '-[SDPMediaLine addPayload:rtpMap:formatParameters:]', 
                       '-[SDPMediaLine addVideoImageAttr:ForPayload:]', 
                       '-[SDPMediaLine addWifiRules:cellularRules:payload:direction:]', 
                       '-[SDPMediaLine allowRTCPFB]', '-[SDPMediaLine appendPayload:dimensions:direction:attributeString:]', 
                       '-[SDPMediaLine attributes]', '-[SDPMediaLine createVideoImageAttr:direction:dimensions:count:]', 
                       '-[SDPMediaLine dealloc]', '-[SDPMediaLine getVideoRecvImages:]', 
                       '-[SDPMediaLine getVideoSendImages:]', '-[SDPMediaLine imageAttributeRules]', 
                       '-[SDPMediaLine initWithParser:rtpPort:payloads:]', 
                       '-[SDPMediaLine init]', '-[SDPMediaLine parseAttribute:]', 
                       '-[SDPMediaLine parseImageAttributeRules:]', '-[SDPMediaLine parseMediaLine:]', 
                       '-[SDPMediaLine payloads]', '-[SDPMediaLine rtcpPort]', 
                       '-[SDPMediaLine rtpId]', '-[SDPMediaLine rtpPort]', 
                       '-[SDPMediaLine setImageAttributeRules:]', '-[SDPMediaLine setRtpId:]', 
                       '-[SDPMediaLine string]', '-[SDPMediaLine supportImage:width:height:rate:]', 
                       '-[SDPMediaLine videoDisplayAttribute:withHeight:]', 
                       '-[SDPMediaLine videoImageAttributes:]', '-[SDPMini aacBlockSize]', 
                       '-[SDPMini addMediaLine:mediaType:]', '-[SDPMini allowAudioRecording]', 
                       '-[SDPMini allowRTCPFB]', '-[SDPMini allowsContentsChangeWithAspectPreservation]', 
                       '-[SDPMini allowsDynamicMaxBitrate]', '-[SDPMini answerBandwidth]', 
                       '-[SDPMini audioPayloads]', '-[SDPMini audioRTCPPort]', 
                       '-[SDPMini audioRTPID]', '-[SDPMini audioRTPPort]', 
                       '-[SDPMini audioUnitModel]', '-[SDPMini createVideoImageAttr:direction:dimensions:count:]', 
                       '-[SDPMini dealloc]', '-[SDPMini featuresListDict]', 
                       '-[SDPMini getBasebandCodecType:sampleRate:]', '-[SDPMini getMediaLineForType:]', 
                       '-[SDPMini getNegotiatedResolutionForPayload:forInterface:withRule:direction:result:remoteSupportsHD:screenSharing:]', 
                       '-[SDPMini initWithString:]', '-[SDPMini init]', 
                       '-[SDPMini maxBandwidth]', '-[SDPMini mediaTypeToString:]', 
                       '-[SDPMini origin]', '-[SDPMini secondaryAudioPayloads]', 
                       '-[SDPMini sessionIP]', '-[SDPMini setAacBlockSize:]', 
                       '-[SDPMini setAllowAudioRecording:]', '-[SDPMini setAllowRTCPFB:]', 
                       '-[SDPMini setAllowsContentsChangeWithAspectPreservation:]', 
                       '-[SDPMini setAllowsDynamicMaxBitrate:]', '-[SDPMini setAnswerBandwidth:]', 
                       '-[SDPMini setAudioRTCPPort:]', '-[SDPMini setAudioRTPID:]', 
                       '-[SDPMini setAudioRTPPort:]', '-[SDPMini setAudioUnitModel:]', 
                       '-[SDPMini setBasebandCodecType:sampleRate:]', '-[SDPMini setFeaturesListDict:]', 
                       '-[SDPMini setMaxBandwidth:]', '-[SDPMini setOrigin:]', 
                       '-[SDPMini setSessionIP:]', '-[SDPMini setVideoPayloads:count:]', 
                       '-[SDPMini toStringWithVideoEnabled:]', '-[SDPMini(SDPComposing) composeAudioFMTPForPayload:]', 
                       '-[SDPMini(SDPComposing) composeAudioString]', '-[SDPMini(SDPComposing) composeBandwidthString]', 
                       '-[SDPMini(SDPComposing) composeFLSString]', '-[SDPMini(SDPComposing) composeSessionString]', 
                       '-[SDPMini(SDPParsing) parseAudioFormatAttribute:]', 
                       '-[SDPMini(SDPParsing) parseAudioMediaAttributes:]', 
                       '-[SDPMini(SDPParsing) parseBandwidth:]', '-[SDPMini(SDPParsing) parseIP:]', 
                       '-[SDPMini(SDPParsing) parseMediaLine:]', '-[SDPMini(SDPParsing) parseRTCPPort:]', 
                       '-[SDPMini(SDPParsing) parseRTPID:]', '-[SDPMini(SDPParsing) parseSDPFromString:]', 
                       '-[SDPMini(SDPParsing) parseSessionAttributes:]', 
                       '-[SDPMini(helper) SDPUsername]', '-[SDPMini(mediaParameters) getUseSbr:blockSize:forAACFormat:]', 
                       '-[SDPMini(mediaParameters) rulesFramerate:]', '-[SDPMini(mediaParameters) rulesImageSizeForExternalPayload:pWidth:pHeight:]', 
                       '-[SDPMini(mediaParameters) setUseSbr:blockSize:forAACFormat:]', 
                       '-[SDPMini(mediaParameters) setVideoRTCPFB:useNACK:]', 
                       '-[SDPParser dealloc]', '-[SDPParser fieldName]', 
                       '-[SDPParser fieldType]', '-[SDPParser fieldValue]', 
                       '-[SDPParser initWithString:]', '-[SDPParser nextLine]', 
                       '-[SDPParser parseMediaLineHeader:mediaType:supportedPayloads:rtpPort:]', 
                       '-[SDPParser parsingDone]', '-[SDPParser stringToMediaType:]', 
                       '-[SIPClientDataDictionary copyObjectForKey:p2pID:]', 
                       '-[SIPClientDataDictionary dealloc]', '-[SIPClientDataDictionary init]', 
                       '-[SIPClientDataDictionary setObject:forKey:forP2PID:]', 
                       '-[SnapshotTimer checkinWithTimeout:forTask:]', 
                       '-[SnapshotTimer checkout]', '-[SnapshotTimer init]', 
                       '-[SnapshotTimer setTaskIsComplete:]', '-[SnapshotTimer taskIsComplete]', 
                       '-[TCPBufferPool dealloc]', '-[TCPBufferPool finalize]', 
                       '-[TCPBufferPool getBufferFromPool:]', '-[TCPBufferPool init]', 
                       '-[TCPBufferPool monitorBufferPool]', '-[TCPBufferPool returnBufferToPool:]', 
                       '-[TCPTunnelClient allocationResponseHandler]', 
                       '-[TCPTunnelClient bindingResponseHandler]', '-[TCPTunnelClient closeTunnelSocket]', 
                       '-[TCPTunnelClient connectionType]', '-[TCPTunnelClient createDispatchTimer:withDetailedError:]', 
                       '-[TCPTunnelClient dealloc]', '-[TCPTunnelClient destroyDispatchTimer]', 
                       '-[TCPTunnelClient destroyHandler]', '-[TCPTunnelClient finalize]', 
                       '-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]', 
                       '-[TCPTunnelClient isTunnelSocketClosed]', '-[TCPTunnelClient participantID]', 
                       '-[TCPTunnelClient processSocketReadSSL]', '-[TCPTunnelClient processSocketRead]', 
                       '-[TCPTunnelClient processSocketWrite:]', '-[TCPTunnelClient receiveHandler]', 
                       '-[TCPTunnelClient receivedControlData:]', '-[TCPTunnelClient receivedSSLConnectionData:recordType:]', 
                       '-[TCPTunnelClient reportErrorAndTerminate:detail:returnCode:description:reason:]', 
                       '-[TCPTunnelClient resetConnection]', '-[TCPTunnelClient sendAllocateMsg:]', 
                       '-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]', 
                       '-[TCPTunnelClient sendRefreshMsg:error:]', '-[TCPTunnelClient sendTCPData:bufSize:]', 
                       '-[TCPTunnelClient setAllocationResponseHandler:]', 
                       '-[TCPTunnelClient setBindingResponseHandler:]', 
                       '-[TCPTunnelClient setDestroyHandler:]', '-[TCPTunnelClient setParticipantID:]', 
                       '-[TCPTunnelClient setReceiveHandler:]', '-[TCPTunnelClient setTerminationHandler:]', 
                       '-[TCPTunnelClient terminationHandler]', '-[TCPTunnelClient unbindChannel]', 
                       '-[TCPTunnelClient vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:]', 
                       '-[TCPTunnelClient vcArg:sendRealTimeData:toParticipantID:]', 
                       '-[VCAudioManager AUIOSetup:minSamplesPerFrame:allowAudioRecording:ignoreRefCount:operatingMode:deviceRole:remoteCodecType:remoteCodecSampleRate:completionHandler:]', 
                       '-[VCAudioManager AUIOTeardown:]', '-[VCAudioManager addAudioIOClient:]', 
                       '-[VCAudioManager audioRelayWithDeviceRole:]', '-[VCAudioManager cleanupAUIOSetupWithResult:completionHandler:ignoreRefCount:]', 
                       '-[VCAudioManager clearTargetIODevices]', '-[VCAudioManager clientPID]', 
                       '-[VCAudioManager cmSessionRef]', '-[VCAudioManager currentInputDevice]', 
                       '-[VCAudioManager currentOutputDevice]', '-[VCAudioManager dealloc]', 
                       '-[VCAudioManager enableMetering:isInputMeter:]', 
                       '-[VCAudioManager forceBufferFrames:]', '-[VCAudioManager forceSampleRate:]', 
                       '-[VCAudioManager getAudioManagerClientWithPid:create:]', 
                       '-[VCAudioManager getPreferredHWSampleRate:blockSize:]', 
                       '-[VCAudioManager getVpioFormat:]', '-[VCAudioManager handleAudioInterruption:interruptionInfo:cmd:]', 
                       '-[VCAudioManager inferredOperatingMode]', '-[VCAudioManager init]', 
                       '-[VCAudioManager internalSetRemoteBasebandCodecType:sampleRate:]', 
                       '-[VCAudioManager internalSetupAudioRelayWithIO:deviceRole:completionHandler:]', 
                       '-[VCAudioManager invalidateCurrentAudioParams]', 
                       '-[VCAudioManager isGKVoiceChat]', '-[VCAudioManager isInMediaserverd]', 
                       '-[VCAudioManager isMicrophoneMuted]', '-[VCAudioManager isSpeakerPhoneEnabled]', 
                       '-[VCAudioManager isUsingSuppression]', '-[VCAudioManager onCaptureSound:numBytes:numSamples:timeStamp:timeStampDelta:bufferedSamples:hostTime:averagePower:voiceActivity:deviceRole:]', 
                       '-[VCAudioManager onPlaySound:numBytes:numSamples:timeStamp:averagePower:deviceRole:]', 
                       '-[VCAudioManager processEventQueue]', '-[VCAudioManager projectionModeEnabledState]', 
                       '-[VCAudioManager removeAudioIOClient:]', '-[VCAudioManager resetAudioSessionOutputPortOverride]', 
                       '-[VCAudioManager resetAudioSessionProperties]', 
                       '-[VCAudioManager selectMicForDirection]', '-[VCAudioManager setAudioSessionMode:]', 
                       '-[VCAudioManager setAudioSessionParameters:]', 
                       '-[VCAudioManager setAudioSessionProperties]', '-[VCAudioManager setBlockSize:]', 
                       '-[VCAudioManager setBlockSizeDispatch:]', '-[VCAudioManager setClientPID:]', 
                       '-[VCAudioManager setCurrentInputDevice:]', '-[VCAudioManager setCurrentOutputDevice:]', 
                       '-[VCAudioManager setDirection:]', '-[VCAudioManager setEnableSpeakerPhone:]', 
                       '-[VCAudioManager setIsGKVoiceChat:]', '-[VCAudioManager setIsInMediaserverd:]', 
                       '-[VCAudioManager setIsUsingSuppression:]', '-[VCAudioManager setMicrophoneMuted:]', 
                       '-[VCAudioManager setRemoteBasebandCodecType:sampleRate:]', 
                       '-[VCAudioManager setSampleRate]', '-[VCAudioManager setSamplesPerFrame:]', 
                       '-[VCAudioManager setTargetInputDevice:]', '-[VCAudioManager setTargetOutputDevice:]', 
                       '-[VCAudioManager setupAudioNotifications]', '-[VCAudioManager setupAudioRelayWithIO:deviceRole:completionHandler:]', 
                       '-[VCAudioManager setupAudioSession]', '-[VCAudioManager setupInputBeamforming]', 
                       '-[VCAudioManager setupVPBlockFormat]', '-[VCAudioManager shouldCallAudioCallbackOnAudioIOClient:forDeviceRole:]', 
                       '-[VCAudioManager startAudioIOWithFarEndVersionInfo:minSamplesPerFrame:internalFormat:allowAudioRecording:operatingMode:deviceRole:remoteBasebandCodecType:remoteBasebandCodecSampleRate:completionHandler:]', 
                       '-[VCAudioManager startAudioSessionWithCompletionHandler:dispatchQueue:]', 
                       '-[VCAudioManager startRelayIOWithFormat:deviceRole:completionHandler:]', 
                       '-[VCAudioManager stopAudioIOWithDeviceRole:completionHandler:]', 
                       '-[VCAudioManager stopAudioManagerClient:]', '-[VCAudioManager stopAudioSession]', 
                       '-[VCAudioManager stopRelayIOWithDeviceRole:completionHandler:]', 
                       '-[VCAudioManager targetInputDevice]', '-[VCAudioManager targetOutputDevice]', 
                       '-[VCAudioManager tearDownAudioIO:withCompletionHandler:]', 
                       '-[VCAudioManager tearDownAudioSessionForced:]', 
                       '-[VCAudioManager usingFloat]', '-[VCAudioManager vpOperationModeForConferenceOperatingMode:deviceRole:]', 
                       '-[VCAudioManagerClient clientPid]', '-[VCAudioManagerClient dealloc]', 
                       '-[VCAudioManagerClient inferredOperatingMode]', 
                       '-[VCAudioManagerClient initWithClientPid:]', '-[VCAudioManagerClient sessionReference]', 
                       '-[VCAudioManagerClient setClientPid:]', '-[VCAudioManagerClient setInferredOperatingMode:]', 
                       '-[VCAudioManagerClient setStarted:]', '-[VCAudioManagerClient started]', 
                       '-[VCAudioPayload bitrate]', '-[VCAudioPayload blockSize]', 
                       '-[VCAudioPayload bundleHeaderBytes]', '-[VCAudioPayload canBundle]', 
                       '-[VCAudioPayload createEncoderWithInputFormat:]', 
                       '-[VCAudioPayload dealloc]', '-[VCAudioPayload dtxEnabled]', 
                       '-[VCAudioPayload encodeAudio:numInputBytes:outputBytes:numOutputBytes:]', 
                       '-[VCAudioPayload encodedBytesPerFrame]', '-[VCAudioPayload flags]', 
                       '-[VCAudioPayload getMagicCookie:withLength:]', 
                       '-[VCAudioPayload initWithPayload:blockSize:]', 
                       '-[VCAudioPayload payloadOctetAligned]', '-[VCAudioPayload payload]', 
                       '-[VCAudioPayload qualityForBitRate:]', '-[VCAudioPayload resetEncoderWithSampleBuffer:numBytes:]', 
                       '-[VCAudioPayload resetEncoder]', '-[VCAudioPayload sampleRate]', 
                       '-[VCAudioPayload samplesPerFrame]', '-[VCAudioPayload setBitrate:]', 
                       '-[VCAudioPayload setDtxEnabled:]', '-[VCAudioPayload setInputSampleRate:]', 
                       '-[VCAudioPayload setInternalBundleSamples:]', '-[VCAudioPayload setPayloadOctetAligned:]', 
                       '-[VCAudioPayload setSampleRate:]', '-[VCAudioPayload setUseSBR:]', 
                       '-[VCAudioPayload supportedBitrates]', '-[VCAudioPayload useCookie]', 
                       '-[VCAudioPayload useSBR]', '-[VCAudioPayload(InternalMethods) aacBitrate]', 
                       '-[VCAudioPayload(InternalMethods) createSupportedBitratesForAACELD]', 
                       '-[VCAudioPayload(InternalMethods) createSupportedBitratesForAMR16k]', 
                       '-[VCAudioPayload(InternalMethods) createSupportedBitratesForAMR8k]', 
                       '-[VCAudioPayload(InternalMethods) createSupportedBitratesForOpus]', 
                       '-[VCAudioPayload(InternalMethods) createSupportedBitrates]', 
                       '-[VCAudioPayload(InternalMethods) isDtxEmptyPacket:]', 
                       '-[VCAudioPayload(InternalMethods) setupEncodeProperties]', 
                       '-[VCAudioPayload(InternalMethods) setupInputProperties]', 
                       '-[VCAudioPowerLevelMonitor delegate]', '-[VCAudioPowerLevelMonitor detectRemoteAveragePowerLevel:timestamp:]', 
                       '-[VCAudioPowerLevelMonitor init]', '-[VCAudioPowerLevelMonitor setDelegate:]', 
                       '-[VCAudioRelay IOBufferDuration]', '-[VCAudioRelay blocksRelayedCount]', 
                       '-[VCAudioRelay canSetPropertyWithError:]', '-[VCAudioRelay clientDownlinkPowerMovingAverage]', 
                       '-[VCAudioRelay clientIO]', '-[VCAudioRelay clientToRemoteConverter]', 
                       '-[VCAudioRelay clientUplinkPowerMovingAverage]', 
                       '-[VCAudioRelay createAudioConvertersWithError:]', 
                       '-[VCAudioRelay dealloc]', '-[VCAudioRelay destroyAudioConverters]', 
                       '-[VCAudioRelay eventQueue]', '-[VCAudioRelay forwardSamplesFromIO:toIO:withConverter:]', 
                       '-[VCAudioRelay init]', '-[VCAudioRelay isRelayRunning]', 
                       '-[VCAudioRelay newAudioConverterWithInputFormat:outputFormat:withError:]', 
                       '-[VCAudioRelay periodicHealthPrintDispatchSource]', 
                       '-[VCAudioRelay printStreamFormats]', '-[VCAudioRelay remoteIO]', 
                       '-[VCAudioRelay remoteToClientConverter]', '-[VCAudioRelay rmsPowerOfBuffer:numSamples:]', 
                       '-[VCAudioRelay setClientIO:withError:]', '-[VCAudioRelay setIOBufferDuration:withError:]', 
                       '-[VCAudioRelay setRemoteIO:withError:]', '-[VCAudioRelay sleepTillTime:]', 
                       '-[VCAudioRelay startPeriodicHealthPrint]', '-[VCAudioRelay startRelayIO:name:]', 
                       '-[VCAudioRelay startRelayThreadWithError:]', '-[VCAudioRelay start]', 
                       '-[VCAudioRelay stopRelayThread]', '-[VCAudioRelay stop]', 
                       '-[VCAudioRelay threadEvent]', '-[VCAudioRelay updateRealTimeStats]', 
                       '-[VCAudioRelayIO closeRecordings]', '-[VCAudioRelayIO copyWithZone:]', 
                       '-[VCAudioRelayIO createPacketThreadWithIOBufferDuration:name:error:]', 
                       '-[VCAudioRelayIO createRecordingsWithName:]', '-[VCAudioRelayIO dealloc]', 
                       '-[VCAudioRelayIO destroyPacketThread]', '-[VCAudioRelayIO isEqualToRelayIO:]', 
                       '-[VCAudioRelayIO isInitialized]', '-[VCAudioRelayIO isRunning]', 
                       '-[VCAudioRelayIO micCallbackContext]', '-[VCAudioRelayIO micCallback]', 
                       '-[VCAudioRelayIO micFormat]', '-[VCAudioRelayIO micPowerRMS]', 
                       '-[VCAudioRelayIO micTimestamp]', '-[VCAudioRelayIO packetThread]', 
                       '-[VCAudioRelayIO printStreamFormats]', '-[VCAudioRelayIO setMicCallback:]', 
                       '-[VCAudioRelayIO setMicCallbackContext:]', '-[VCAudioRelayIO setMicFormat:]', 
                       '-[VCAudioRelayIO setMicPowerRMS:]', '-[VCAudioRelayIO setMicTimestamp:]', 
                       '-[VCAudioRelayIO setSpeakerCallback:]', '-[VCAudioRelayIO setSpeakerCallbackContext:]', 
                       '-[VCAudioRelayIO setSpeakerFormat:]', '-[VCAudioRelayIO setSpeakerPowerRMS:]', 
                       '-[VCAudioRelayIO setSpeakerTimestamp:]', '-[VCAudioRelayIO setStartCompletionHandler:]', 
                       '-[VCAudioRelayIO setUsePacketThread:]', '-[VCAudioRelayIO speakerCallbackContext]', 
                       '-[VCAudioRelayIO speakerCallback]', '-[VCAudioRelayIO speakerFormat]', 
                       '-[VCAudioRelayIO speakerPowerRMS]', '-[VCAudioRelayIO speakerTimestamp]', 
                       '-[VCAudioRelayIO startCompletionHandler]', '-[VCAudioRelayIO usePacketThread]', 
                       '-[VCAudioRule description]', '-[VCAudioRule initWithPayload:isSecondary:sbr:samplesPerBlock:]', 
                       '-[VCAudioRule isEqual:]', '-[VCAudioRule isSecondary]', 
                       '-[VCAudioRule payload]', '-[VCAudioRule samplesPerBlock]', 
                       '-[VCAudioRule sbr]', '-[VCAudioRuleCollection addAudioPayload:isSecondary:sbr:]', 
                       '-[VCAudioRuleCollection addAudioRule:]', '-[VCAudioRuleCollection allowAudioRecording]', 
                       '-[VCAudioRuleCollection allowAudioSwitching]', 
                       '-[VCAudioRuleCollection dealloc]', '-[VCAudioRuleCollection initPrimaryPayload:dtxPayload:secondaryPayloads:allowAudioSwitching:sbr:aacBlockSize:]', 
                       '-[VCAudioRuleCollection initWithPhoneContinuity:allowAudioSwitching:sbr:aacBlockSize:]', 
                       '-[VCAudioRuleCollection init]', '-[VCAudioRuleCollection isPayloadSupported:]', 
                       '-[VCAudioRuleCollection rules]', '-[VCAudioRuleCollection setAllowAudioRecording:]', 
                       '-[VCAudioRuleCollection setAllowAudioSwitching:]', 
                       '-[VCAudioRuleCollection setupAudioRulesWithSBR:isContinuity:]', 
                       '-[VCAudioStream AMRModeToBitrate:]', '-[VCAudioStream SRTPCipherSuiteForLTECipherSuite:]', 
                       '-[VCAudioStream addAudioPayload:]', '-[VCAudioStream allocateLastInputSampleBuffer]', 
                       '-[VCAudioStream bundleAndSendSamples:numEncodedBytes:withPayload:timeStamp:voiceActivity:]', 
                       '-[VCAudioStream canProcessAudio]', '-[VCAudioStream captureMeshMode:numBytes:numSamples:timeStamp:bufferedSamples:hostTime:voiceActivity:]', 
                       '-[VCAudioStream checkPacketTimeouts]', '-[VCAudioStream choosePayload:count:]', 
                       '-[VCAudioStream cleanupAudio]', '-[VCAudioStream codecTypeFromAudioPayload:]', 
                       '-[VCAudioStream computePacketTimestampWithInputTimestamp:numSamples:hostTime:]', 
                       '-[VCAudioStream conferenceID]', '-[VCAudioStream configureAudioStreamWithConfiguration:error:]', 
                       '-[VCAudioStream dealloc]', '-[VCAudioStream delegate]', 
                       '-[VCAudioStream deviceRole]', '-[VCAudioStream encodeAudio:numInputBytes:outputBytes:numOutputBytes:withPayload:isTalking:]', 
                       '-[VCAudioStream generateWRMReport]', '-[VCAudioStream getCryptoSet:withMasterKey:]', 
                       '-[VCAudioStream getSRTPMasterKeyLength:]', '-[VCAudioStream getSyncSourceSampleRate]', 
                       '-[VCAudioStream handleAMRCodecModeChange:]', '-[VCAudioStream init]', 
                       '-[VCAudioStream initializeWRM]', '-[VCAudioStream isFrequencyMeteringEnabled:]', 
                       '-[VCAudioStream isSameSRTPConfig:]', '-[VCAudioStream isValid]', 
                       '-[VCAudioStream lock]', '-[VCAudioStream maximumPayloadSize]', 
                       '-[VCAudioStream onCaptureSound:numBytes:numSamples:timeStamp:timeStampDelta:bufferedSamples:hostTime:averagePower:voiceActivity:]', 
                       '-[VCAudioStream onPlaySound:numBytes:numSamples:timeStamp:averagePower:]', 
                       '-[VCAudioStream operatingMode]', '-[VCAudioStream preferredAudioBitrate]', 
                       '-[VCAudioStream prepareAudio]', '-[VCAudioStream pullDecodedMeshMode:timestamp:numBytes:numSamples:]', 
                       '-[VCAudioStream registerAMRModeChangeNotifications]', 
                       '-[VCAudioStream reportRTCPPackets:withCount:]', 
                       '-[VCAudioStream reportWRMMetrics:]', '-[VCAudioStream sendDTMFEvent:]', 
                       '-[VCAudioStream sendSamples:numEncodedBytes:withPayload:timeStamp:voiceActivity:]', 
                       '-[VCAudioStream setCanProcessAudio:]', '-[VCAudioStream setDelegate:]', 
                       '-[VCAudioStream setDeviceRole:]', '-[VCAudioStream setFrequencyMeteringEnabled:meterType:]', 
                       '-[VCAudioStream setInputTimestamp:packetTimestamp:hostTime:]', 
                       '-[VCAudioStream setIsValid:]', '-[VCAudioStream setLocalParticipantInfo:networkSockets:withError:]', 
                       '-[VCAudioStream setMediaQueueStreamSettings]', 
                       '-[VCAudioStream setOperatingMode:]', '-[VCAudioStream setPause:]', 
                       '-[VCAudioStream setRTPPayloads:numPayloads:withError:]', 
                       '-[VCAudioStream setRtcpEnabled:]', '-[VCAudioStream setRtcpSendInterval:]', 
                       '-[VCAudioStream setRtcpTimeOutEnabled:]', '-[VCAudioStream setRtcpTimeOutInterval:]', 
                       '-[VCAudioStream setRtpTimeOutEnabled:]', '-[VCAudioStream setRtpTimeOutInterval:]', 
                       '-[VCAudioStream setState:]', '-[VCAudioStream setStreamConfig:]', 
                       '-[VCAudioStream setStreamConfig:withError:]', '-[VCAudioStream setStreamDirection:]', 
                       '-[VCAudioStream setSyncSourceDelegate:]', '-[VCAudioStream setWRMMetricConfig:]', 
                       '-[VCAudioStream setWRMNotification:]', '-[VCAudioStream setupAudioCodecWithPayload:]', 
                       '-[VCAudioStream setupAudioEncoders]', '-[VCAudioStream setupRTPPayloads]', 
                       '-[VCAudioStream setupRTPWithIDSDestination:error:]', 
                       '-[VCAudioStream setupRTPWithIPInfo:error:]', '-[VCAudioStream setupRTPWithLocalParticipantInfo:error:]', 
                       '-[VCAudioStream setupRTPWithSockets:error:]', '-[VCAudioStream setupSRTP]', 
                       '-[VCAudioStream setupSpecialPayload:]', '-[VCAudioStream startAudioWithCompletionHandler:]', 
                       '-[VCAudioStream startPausedHeartbeat]', '-[VCAudioStream startWRM]', 
                       '-[VCAudioStream start]', '-[VCAudioStream stateEnter]', 
                       '-[VCAudioStream stateExit]', '-[VCAudioStream state]', 
                       '-[VCAudioStream stopAudioWithCompletionHandler:]', 
                       '-[VCAudioStream stopPausedHeartbeat]', '-[VCAudioStream stopSendDTMFEvent]', 
                       '-[VCAudioStream stopWRM]', '-[VCAudioStream stop]', 
                       '-[VCAudioStream streamConfig]', '-[VCAudioStream streamDirection]', 
                       '-[VCAudioStream streamStateToString:]', '-[VCAudioStream syncSourceDelegate]', 
                       '-[VCAudioStream uninitializeWRM]', '-[VCAudioStream unlock]', 
                       '-[VCAudioStream unregisterAMRModeChangeNotifications]', 
                       '-[VCAudioStream updateSoundMeter:samples:numSamples:averagePower:voiceActivity:]', 
                       '-[VCAudioTier audioBitrate]', '-[VCAudioTier description]', 
                       '-[VCAudioTier initWithNetworkBitrate:audioBitrate:packetsPerBundle:payload:]', 
                       '-[VCAudioTier isEqualTo:]', '-[VCAudioTier networkBitrate]', 
                       '-[VCAudioTier packetsPerBundle]', '-[VCAudioTier payload]', 
                       '-[VCAudioTierPicker AudioTier:]', '-[VCAudioTierPicker LargestCapTier:]', 
                       '-[VCAudioTierPicker audioTiers]', '-[VCAudioTierPicker dealloc]', 
                       '-[VCAudioTierPicker defaultTier]', '-[VCAudioTierPicker fallbackTier]', 
                       '-[VCAudioTierPicker initWithOperatingMode:payloads:sampleRate:packetsPerBundle:headerSize:usingCellular:defaultMaxCap:]', 
                       '-[VCAudioTierPicker newTierForPayload:bitrate:sampleRate:packetsPerBundle:headerSize:]', 
                       '-[VCAudioTierPicker tierForNetworkBitrate:duplication:]', 
                       '-[VCAudioTransmitter dealloc]', '-[VCAudioTransmitter initWithRTPHandle:]', 
                       '-[VCAudioTransmitter sendAudioSamples:withPayload:timestamp:byteCount:marker:nextInterval:sentBytes:padding:paddingLength:sendReport:]', 
                       '-[VCAudioTransmitter setupEncoders:blockSize:]', 
                       '-[VCBitrateArbiter createSupportedBitrateRuleSets]', 
                       '-[VCBitrateArbiter dealloc]', '-[VCBitrateArbiter initWithDeviceRole:]', 
                       '-[VCBitrateArbiter maxAllowedAudioOnlyBitrateForConnection:]', 
                       '-[VCBitrateArbiter maxAllowedBitrate2G]', '-[VCBitrateArbiter maxAllowedBitrate3G]', 
                       '-[VCBitrateArbiter maxAllowedBitrateForConnection:]', 
                       '-[VCBitrateArbiter maxAllowedBitrateForConnection:operatingMode:]', 
                       '-[VCBitrateArbiter maxAllowedBitrateLTE]', '-[VCBitrateArbiter maxAllowedBitrateRuleForConnection:]', 
                       '-[VCBitrateArbiter maxAllowedBitrateWifi]', '-[VCBitrateArbiter maxAllowedBitrate]', 
                       '-[VCBitrateArbiter maxAllowedCellularBitrate]', 
                       '-[VCBitrateArbiter maxAllowedScreenShareBitrateForConnection:]', 
                       '-[VCBitrateArbiter maxAllowedScreenShareCellularBitrate]', 
                       '-[VCBitrateArbiter readCarrierBundleValues]', '-[VCBitrateArbiter readHardwareValues]', 
                       '-[VCBitrateArbiter readStoreBagValues]', '-[VCBitrateRule bitrate]', 
                       '-[VCBitrateRule compare:]', '-[VCBitrateRule connectionType]', 
                       '-[VCBitrateRule dealloc]', '-[VCBitrateRule description]', 
                       '-[VCBitrateRule initWithBitrate:connectionType:limitingRule:]', 
                       '-[VCBitrateRule limitingRule]', '-[VCBitrateRule setBitrate:]', 
                       '-[VCBitrateRule setConnectionType:]', '-[VCCallInfo OSVersion]', 
                       '-[VCCallInfo auNumber]', '-[VCCallInfo audioVersionInfo:]', 
                       '-[VCCallInfo callID]', '-[VCCallInfo cellBandwidth]', 
                       '-[VCCallInfo dealloc]', '-[VCCallInfo deviceType]', 
                       '-[VCCallInfo frameworkVersion]', '-[VCCallInfo init]', 
                       '-[VCCallInfo isHDVideoSupported]', '-[VCCallInfo isIOS]', 
                       '-[VCCallInfo isPreLionOS]', '-[VCCallInfo isVideoQualityDegraded]', 
                       '-[VCCallInfo maxBandwidth]', '-[VCCallInfo participantID]', 
                       '-[VCCallInfo requiresImplicitFeatureString]', '-[VCCallInfo resetLastGoodVideoQualityTime:]', 
                       '-[VCCallInfo sdpString]', '-[VCCallInfo sdp]', 
                       '-[VCCallInfo setAuNumber:]', '-[VCCallInfo setCallID:]', 
                       '-[VCCallInfo setCellBandwidth:]', '-[VCCallInfo setDeviceType:]', 
                       '-[VCCallInfo setFrameworkVersion:]', '-[VCCallInfo setIsPreLionOS:]', 
                       '-[VCCallInfo setIsVideoQualityDegraded:]', '-[VCCallInfo setMaxBandwidth:]', 
                       '-[VCCallInfo setOSVersion:]', '-[VCCallInfo setParticipantID:]', 
                       '-[VCCallInfo setSdp:]', '-[VCCallInfo setSdpString:]', 
                       '-[VCCallInfo setSupportsDynamicMaxBitrate:]', '-[VCCallInfo setSupportsSKEOptimization:]', 
                       '-[VCCallInfo setU8Version:]', '-[VCCallInfo setUserAgent:]', 
                       '-[VCCallInfo setVideoIsPaused:]', '-[VCCallInfo setVisibleRectCropping:]', 
                       '-[VCCallInfo supportSDPCompression]', '-[VCCallInfo supportsDynamicContentsRectWithAspectPreservation]', 
                       '-[VCCallInfo supportsDynamicMaxBitrate]', '-[VCCallInfo supportsSKEOptimization]', 
                       '-[VCCallInfo supportsSpecialAACBundle]', '-[VCCallInfo u8Version]', 
                       '-[VCCallInfo updateWithCurrentFramerate:bitrate:packetLossRate:time:]', 
                       '-[VCCallInfo useNewPLCalc]', '-[VCCallInfo usesInitialFECImplementation]', 
                       '-[VCCallInfo videoIsPaused]', '-[VCCallInfo visibleRectCropping]', 
                       '-[VCCallInfoBlob callID]', '-[VCCallInfoBlob clientVersion]', 
                       '-[VCCallInfoBlob copyTo:]', '-[VCCallInfoBlob copyWithZone:]', 
                       '-[VCCallInfoBlob dealloc]', '-[VCCallInfoBlob description]', 
                       '-[VCCallInfoBlob deviceType]', '-[VCCallInfoBlob dictionaryRepresentation]', 
                       '-[VCCallInfoBlob frameworkVersion]', '-[VCCallInfoBlob hash]', 
                       '-[VCCallInfoBlob isEqual:]', '-[VCCallInfoBlob mergeFrom:]', 
                       '-[VCCallInfoBlob osVersion]', '-[VCCallInfoBlob readFrom:]', 
                       '-[VCCallInfoBlob setCallID:]', '-[VCCallInfoBlob setClientVersion:]', 
                       '-[VCCallInfoBlob setDeviceType:]', '-[VCCallInfoBlob setFrameworkVersion:]', 
                       '-[VCCallInfoBlob setOsVersion:]', '-[VCCallInfoBlob writeTo:]', 
                       '-[VCCallLinkCongestionDetector addNewRTT:packetLossRate:timestamp:]', 
                       '-[VCCallLinkCongestionDetector initWithRTTThreshold:lossRateThreshold:]', 
                       '-[VCCallLinkCongestionDetector isLinkCongested]', 
                       '-[VCCallLinkCongestionDetector setIsLinkCongested:]', 
                       '-[VCCallSession addLocalCallInfoToInviteDictionary:]', 
                       '-[VCCallSession applyFeaturesListStringForPayload:]', 
                       '-[VCCallSession audioIsPaused]', '-[VCCallSession audioReceiver]', 
                       '-[VCCallSession audioTierAudioBitrate]', '-[VCCallSession audioTierNetworkBitrate]', 
                       '-[VCCallSession audioTierPacketsPerBundle]', '-[VCCallSession audioTierPayload]', 
                       '-[VCCallSession audioTransmitter]', '-[VCCallSession audioTxBitrate]', 
                       '-[VCCallSession bandwidthDownstream]', '-[VCCallSession bandwidthUpstream]', 
                       '-[VCCallSession basebandCodecSampleRate]', '-[VCCallSession basebandCodecType]', 
                       '-[VCCallSession bundleAndSendSamples:numEncodedBytes:withPayload:timeStamp:bufferedSamples:hasNewSamples:]', 
                       '-[VCCallSession bundledPackets]', '-[VCCallSession callID]', 
                       '-[VCCallSession callMetadata]', '-[VCCallSession cancel:]', 
                       '-[VCCallSession cancelConnectionTimeoutTimer]', 
                       '-[VCCallSession capabilities]', '-[VCCallSession chooseVideoPayloadForInterface:]', 
                       '-[VCCallSession cleanupWCMClient]', '-[VCCallSession cleanupWRMClient]', 
                       '-[VCCallSession connectionChangeState]', '-[VCCallSession connectionManager]', 
                       '-[VCCallSession currentAudioCap]', '-[VCCallSession currentAudioPayload]', 
                       '-[VCCallSession dealloc]', '-[VCCallSession delegate]', 
                       '-[VCCallSession description]', '-[VCCallSession deviceRole]', 
                       '-[VCCallSession didSend200OK]', '-[VCCallSession disconnect:didRemoteCancel:]', 
                       '-[VCCallSession dtxMetrics]', '-[VCCallSession encodeAudio:numInputBytes:outputBytes:numOutputBytes:withPayload:isTalking:]', 
                       '-[VCCallSession evaluateEnableRRx:]', '-[VCCallSession getFeaturesListStringForPayload:]', 
                       '-[VCCallSession getFrontCaptureTime:backCaptureTime:]', 
                       '-[VCCallSession getRealAudioTxBitrate:RxBitrate:duplication:]', 
                       '-[VCCallSession getVideoRuleForVideoMode:interface:sessionBitrate:]', 
                       '-[VCCallSession hAFRC]', '-[VCCallSession hMediaQueue]', 
                       '-[VCCallSession handleCellTechChange:]', '-[VCCallSession handleCellularMTUChanged:]', 
                       '-[VCCallSession handleFirstConnectionSetup:]', 
                       '-[VCCallSession handleKeyExchangeCompleted]', '-[VCCallSession handleNewConnectionSetup:isInitialConnection:]', 
                       '-[VCCallSession handlePendingPrimaryConnectionChange]', 
                       '-[VCCallSession handlePrimaryConnectionChanged:oldPrimaryConnection:]', 
                       '-[VCCallSession handleReceivedPiggybackBlobIDS:]', 
                       '-[VCCallSession handleReceivedPiggybackBlobLegacy:]', 
                       '-[VCCallSession handshakeComplete:withError:]', 
                       '-[VCCallSession imageAttributeRules]', '-[VCCallSession initWithDeviceRole:transportType:]', 
                       '-[VCCallSession init]', '-[VCCallSession inputMeter]', 
                       '-[VCCallSession inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]', 
                       '-[VCCallSession isAudioRunning]', '-[VCCallSession isBetterForSIPInviteWithSourceDestinationInfo:thanSession:]', 
                       '-[VCCallSession isCallOngoing]', '-[VCCallSession isCaller]', 
                       '-[VCCallSession isGKVoiceChat]', '-[VCCallSession isLocalOrRemoteOnCellular]', 
                       '-[VCCallSession isRTCPFBEnabled]', '-[VCCallSession isRemoteMediaStalled]', 
                       '-[VCCallSession isSKEOptimizationEnabled]', '-[VCCallSession isStarted]', 
                       '-[VCCallSession isVideoRunning]', '-[VCCallSession isWaitingForICEResult]', 
                       '-[VCCallSession lastReceived]', '-[VCCallSession lastSentAudioSampleTime]', 
                       '-[VCCallSession localCallInfo]', '-[VCCallSession localCameraSwitchedFrom:to:]', 
                       '-[VCCallSession localParticipantID]', '-[VCCallSession maxPacketLength]', 
                       '-[VCCallSession mutedPeers]', '-[VCCallSession natType]', 
                       '-[VCCallSession networkConditionsTimeoutInSeconds]', 
                       '-[VCCallSession networkQuality]', '-[VCCallSession newMediaBlobWithRemoteMediaBlob:localCallID:]', 
                       '-[VCCallSession nextAudioInterval:]', '-[VCCallSession notifyDelegateActiveConnectionDidChange]', 
                       '-[VCCallSession numBufferBytesAvailable]', '-[VCCallSession operatingMode]', 
                       '-[VCCallSession packetLateAndMissingRatio]', '-[VCCallSession packetLossRate]', 
                       '-[VCCallSession packetsPerBundle]', '-[VCCallSession peerCN]', 
                       '-[VCCallSession preferredAudioCodec]', '-[VCCallSession primaryConnectionDidChangeTo:oldConnection:]', 
                       '-[VCCallSession primaryConnectionType]', '-[VCCallSession processCancelRelayRequest:didOriginateRequest:]', 
                       '-[VCCallSession processRelayRequestResponseDict:didOriginateRequest:]', 
                       '-[VCCallSession processRelayUpdateDict:didOriginateRequest:]', 
                       '-[VCCallSession processRemoteIPChange:callID:]', 
                       '-[VCCallSession pullAudioSamples:timestamp:byteCount:sampleCount:lastReceivedAudioTime:padding:paddingLength:silence:]', 
                       '-[VCCallSession qualityDelegate]', '-[VCCallSession rcvdFirstRemoteFrame]', 
                       '-[VCCallSession receivedSIPInvite]', '-[VCCallSession remoteCellTechStateUpdate:maxRemoteBitrate:]', 
                       '-[VCCallSession remoteFrameHeight]', '-[VCCallSession remoteFrameWidth]', 
                       '-[VCCallSession remoteParticipantID]', '-[VCCallSession remoteVideoAttributes]', 
                       '-[VCCallSession reportOperatingMode]', '-[VCCallSession reportWRMMetrics:]', 
                       '-[VCCallSession requestWRMNotification]', '-[VCCallSession requiresWifi]', 
                       '-[VCCallSession resetVideoRulesForInterface:videoReportingDictionary:]', 
                       '-[VCCallSession ringBuf]', '-[VCCallSession roundTripTime]', 
                       '-[VCCallSession rtcpDescriptor]', '-[VCCallSession rtpHandle]', 
                       '-[VCCallSession sampleRate]', '-[VCCallSession schedulePrimaryConnectionChange:oldConnection:]', 
                       '-[VCCallSession sendARPLData:toCallID:]', '-[VCCallSession sendAudioBundle:atTimeStamp:nextInterval:]', 
                       '-[VCCallSession sendAudioHeartbeat:]', '-[VCCallSession sendData:messageType:encrypted:]', 
                       '-[VCCallSession sendThreadedAudio:buffer:bufferSize:]', 
                       '-[VCCallSession sendWRMStatusUpdate:]', '-[VCCallSession sessionID]', 
                       '-[VCCallSession setBandwidthDownstream:]', '-[VCCallSession setBandwidthUpstream:]', 
                       '-[VCCallSession setBasebandCodecSampleRate:]', 
                       '-[VCCallSession setBasebandCodecType:]', '-[VCCallSession setCapabilities:]', 
                       '-[VCCallSession setConnectionChangeState:]', '-[VCCallSession setConnectionManager:]', 
                       '-[VCCallSession setDelegate:]', '-[VCCallSession setDeviceRole:]', 
                       '-[VCCallSession setDidSend200OK:]', '-[VCCallSession setHAFRC:]', 
                       '-[VCCallSession setHMediaQueue:]', '-[VCCallSession setImageAttributeRules:]', 
                       '-[VCCallSession setInputMeter:]', '-[VCCallSession setIsGKVoiceChat:]', 
                       '-[VCCallSession setIsRTCPFBEnabled:]', '-[VCCallSession setIsStarted:]', 
                       '-[VCCallSession setIsWaitingForICEResult:]', '-[VCCallSession setLastReceived:]', 
                       '-[VCCallSession setLastSentAudioSampleTime:]', 
                       '-[VCCallSession setMaxPacketLength:]', '-[VCCallSession setMutedPeers:]', 
                       '-[VCCallSession setNatType:]', '-[VCCallSession setNetworkConditionsTimeoutInSeconds:]', 
                       '-[VCCallSession setOperatingMode:]', '-[VCCallSession setPacketLateAndMissingRatio:]', 
                       '-[VCCallSession setPacketLossRate:]', '-[VCCallSession setPacketsPerBundle:]', 
                       '-[VCCallSession setPauseAudio:error:]', '-[VCCallSession setPauseAudio:force:error:]', 
                       '-[VCCallSession setPauseVideo:error:]', '-[VCCallSession setPauseVideo:force:error:]', 
                       '-[VCCallSession setPeerCN:]', '-[VCCallSession setPeerProtocolVersion:]', 
                       '-[VCCallSession setPreferredAudioCodec:]', '-[VCCallSession setQualityDelegate:]', 
                       '-[VCCallSession setReceivedSIPInvite:]', '-[VCCallSession setRemoteCallInfoFromInviteDictionary:]', 
                       '-[VCCallSession setRemoteFrameHeight:]', '-[VCCallSession setRemoteFrameWidth:]', 
                       '-[VCCallSession setRemoteVideoAttributes:]', '-[VCCallSession setRequiresWifi:]', 
                       '-[VCCallSession setRingBuf:]', '-[VCCallSession setRoundTripTime:]', 
                       '-[VCCallSession setRtpHandle:]', '-[VCCallSession setSampleRate:]', 
                       '-[VCCallSession setSessionConferenceState:callID:]', 
                       '-[VCCallSession setSessionConferenceVisualRectangle:callID:]', 
                       '-[VCCallSession setSessionID:]', '-[VCCallSession setShouldSendAudio:]', 
                       '-[VCCallSession setShouldTimeoutPackets:]', '-[VCCallSession setSignalGrade:]', 
                       '-[VCCallSession setSignalRaw:]', '-[VCCallSession setSignalStrength:]', 
                       '-[VCCallSession setSipState:]', '-[VCCallSession setSrtpKeyBytes:]', 
                       '-[VCCallSession setState:]', '-[VCCallSession setUseAFRC:]', 
                       '-[VCCallSession setUseCompressedConnectionData:]', 
                       '-[VCCallSession setUseControlByte:]', '-[VCCallSession setUseUEP:]', 
                       '-[VCCallSession setVideoPayload:]', '-[VCCallSession setWRMMetricConfig:]', 
                       '-[VCCallSession setWRMNotification:]', '-[VCCallSession setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:]', 
                       '-[VCCallSession setupSecureDataChannel]', '-[VCCallSession setupWCMClient]', 
                       '-[VCCallSession setupWRMClient]', '-[VCCallSession shouldSendAudio]', 
                       '-[VCCallSession shouldTimeoutPackets]', '-[VCCallSession shouldUseDtx]', 
                       '-[VCCallSession signalGrade]', '-[VCCallSession signalRaw]', 
                       '-[VCCallSession signalStrength]', '-[VCCallSession sipState]', 
                       '-[VCCallSession srtpKeyBytes]', '-[VCCallSession startAWDStats]', 
                       '-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]', 
                       '-[VCCallSession state]', '-[VCCallSession stillWantsToRelay]', 
                       '-[VCCallSession timeoutUnfinishedConnection]', 
                       '-[VCCallSession triggerInterfaceChange]', '-[VCCallSession updateCachedConnectionState]', 
                       '-[VCCallSession updateLastReceivedAudioTime]', 
                       '-[VCCallSession updateLastReceivedPacket:]', '-[VCCallSession updateLastReceivedPacketWithTimestamp:]', 
                       '-[VCCallSession updateMaxPktLength]', '-[VCCallSession updateRemoteMediaStallState:]', 
                       '-[VCCallSession updateVideoQualityStatus:bitrate:time:isRemote:]', 
                       '-[VCCallSession useAFRC]', '-[VCCallSession useCompressedConnectionData]', 
                       '-[VCCallSession useControlByte]', '-[VCCallSession useUEP]', 
                       '-[VCCallSession videoIsPaused]', '-[VCCallSession videoPayload]', 
                       '-[VCCallSession(AVTelephonyInterfaceDelegate) avTelephonyInterface:vocoderInfoChangedToType:sampleRate:]', 
                       '-[VCCallSession(Callbacks) sipCallback:callID:msgIn:msgOut:optional:confIndex:]', 
                       '-[VCCallSession(Messages) setupAudioOnOffStateMessages]', 
                       '-[VCCallSession(Messages) setupAudioPauseMessages]', 
                       '-[VCCallSession(Messages) setupAudioPausedHBMessages]', 
                       '-[VCCallSession(Messages) setupBasebandCodecInfoMessages]', 
                       '-[VCCallSession(Messages) setupCallingModeMessages]', 
                       '-[VCCallSession(Messages) setupCellTechChangeMessages]', 
                       '-[VCCallSession(Messages) setupHandoverCandidateChangeMessage]', 
                       '-[VCCallSession(Messages) setupMessaging]', '-[VCCallSession(Messages) setupPiPStateChangeMessage]', 
                       '-[VCCallSession(Messages) setupVideoPauseMessages]', 
                       '-[VCCallSession(PrivateMethods) Conference_SetBWEstMode:bFakeLargeFrameMode:]', 
                       '-[VCCallSession(PrivateMethods) addAudioPayload:]', 
                       '-[VCCallSession(PrivateMethods) addScreenConfigToSDP:]', 
                       '-[VCCallSession(PrivateMethods) adjustBitrateForConnectionType]', 
                       '-[VCCallSession(PrivateMethods) allPayloadsLocalFeaturesString]', 
                       '-[VCCallSession(PrivateMethods) allocLocalFeaturesString]', 
                       '-[VCCallSession(PrivateMethods) allocateLastInputSampleBuffer:]', 
                       '-[VCCallSession(PrivateMethods) applyNegotiatedAudioSettings:]', 
                       '-[VCCallSession(PrivateMethods) applyNegotiatedCaptionsSettings]', 
                       '-[VCCallSession(PrivateMethods) applyNegotiatedSettings]', 
                       '-[VCCallSession(PrivateMethods) applyNegotiatedVideoSettings:]', 
                       '-[VCCallSession(PrivateMethods) audioRTPID]', '-[VCCallSession(PrivateMethods) calculateSIPEndAction:currentState:error:]', 
                       '-[VCCallSession(PrivateMethods) canNegotiateVideoPayload:supportedPayloads:isLocalOnCellular:isRemoteOnCellular:]', 
                       '-[VCCallSession(PrivateMethods) canSendSIPInviteWithError:]', 
                       '-[VCCallSession(PrivateMethods) chooseAudioNetworkBitrate]', 
                       '-[VCCallSession(PrivateMethods) chooseDTXPayloads:count:]', 
                       '-[VCCallSession(PrivateMethods) choosePayload:count:]', 
                       '-[VCCallSession(PrivateMethods) chooseSecondaryPayloads:count:]', 
                       '-[VCCallSession(PrivateMethods) chooseVideoPayload:operatingMode:isLocalOnCellular:isRemoteOnCellular:]', 
                       '-[VCCallSession(PrivateMethods) cleanupMedia]', 
                       '-[VCCallSession(PrivateMethods) codecBitmapForPayloads:count:]', 
                       '-[VCCallSession(PrivateMethods) configureLegacyTransportWithInviteInfo:error:]', 
                       '-[VCCallSession(PrivateMethods) createInviteSDPWithError:]', 
                       '-[VCCallSession(PrivateMethods) createMediaQueueHandle:]', 
                       '-[VCCallSession(PrivateMethods) createRTPHandles:]', 
                       '-[VCCallSession(PrivateMethods) createSDP:audioPayloadCount:secondaryPayloadTypes:secondaryPayloadCount:videoPayloadTypes:videoPayloadCount:localFeaturesList:answerBandwidth:maxBandwidth:imageSizesSend:imageSendCount:imageSizesRecv:imageRecvCount:sdp:numSDPBytes:error:]', 
                       '-[VCCallSession(PrivateMethods) deriveAspectRatioFLS]', 
                       '-[VCCallSession(PrivateMethods) disableSessionHealthMonitor]', 
                       '-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]', 
                       '-[VCCallSession(PrivateMethods) disconnectWithNoRemotePackets:]', 
                       '-[VCCallSession(PrivateMethods) disconnectWithNoRemotePackets:timeoutUsed:]', 
                       '-[VCCallSession(PrivateMethods) doBandwidthDetection:error:]', 
                       '-[VCCallSession(PrivateMethods) doSipEndAction:callID:error:]', 
                       '-[VCCallSession(PrivateMethods) doSipEndProc:]', 
                       '-[VCCallSession(PrivateMethods) doesVideoPayloadMatchRemoteImageAttributeRules:]', 
                       '-[VCCallSession(PrivateMethods) enableAudio:]', 
                       '-[VCCallSession(PrivateMethods) enableSessionHealthMonitor]', 
                       '-[VCCallSession(PrivateMethods) establishSIPDialogWithSDP:error:]', 
                       '-[VCCallSession(PrivateMethods) findFeatureString:value:valueLength:withPrefix:]', 
                       '-[VCCallSession(PrivateMethods) flushBasebandQueueWithPayloads:flushCount:]', 
                       '-[VCCallSession(PrivateMethods) getAllCompatibleVideoPayloads:forMediaType:]', 
                       '-[VCCallSession(PrivateMethods) getAllPayloadsForAudio:count:secondaryPayloads:secondaryCount:]', 
                       '-[VCCallSession(PrivateMethods) getAllPayloadsForScreen:count:]', 
                       '-[VCCallSession(PrivateMethods) getAllPayloadsForVideo:count:]', 
                       '-[VCCallSession(PrivateMethods) getCompatibleLocalFeaturesListForPayloads:count:]', 
                       '-[VCCallSession(PrivateMethods) getDecodePayloads:numPayloads:withPayload:secondaryPayloads:numSecondaryPayloads:]', 
                       '-[VCCallSession(PrivateMethods) getVideoSettings:forInterface:width:height:framerate:bitRate:]', 
                       '-[VCCallSession(PrivateMethods) handleDuplicationEnabled:activeConnection:]', 
                       '-[VCCallSession(PrivateMethods) handleIncomingWithCallID:msgIn:msgOut:optional:confIndex:error:]', 
                       '-[VCCallSession(PrivateMethods) handleMediaReceivedOverPeerToPeerLink]', 
                       '-[VCCallSession(PrivateMethods) handleMediaReceivedOverRelayLink]', 
                       '-[VCCallSession(PrivateMethods) initWithRelevantStorebagEntries]', 
                       '-[VCCallSession(PrivateMethods) interfaceForCurrentCall]', 
                       '-[VCCallSession(PrivateMethods) isValidVideoPayloadOverride:]', 
                       '-[VCCallSession(PrivateMethods) lock]', '-[VCCallSession(PrivateMethods) logConnectionSuccess]', 
                       '-[VCCallSession(PrivateMethods) logDetailedNetworkInformation]', 
                       '-[VCCallSession(PrivateMethods) logIdentity:]', 
                       '-[VCCallSession(PrivateMethods) logPerfTimings]', 
                       '-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToRTPMode:]', 
                       '-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToSIPMode:]', 
                       '-[VCCallSession(PrivateMethods) matchedFeaturesStringForPayload:]', 
                       '-[VCCallSession(PrivateMethods) maxBitrateForConnectionType]', 
                       '-[VCCallSession(PrivateMethods) maximumPayloadSize]', 
                       '-[VCCallSession(PrivateMethods) maximumSamplesPerFrame]', 
                       '-[VCCallSession(PrivateMethods) negotiateFeaturesString:forPayload:]', 
                       '-[VCCallSession(PrivateMethods) negotiateMaxBandwidth:]', 
                       '-[VCCallSession(PrivateMethods) negotiateMediaMaxBandwidth]', 
                       '-[VCCallSession(PrivateMethods) negotiatePayloads:numPayloads:withError:]', 
                       '-[VCCallSession(PrivateMethods) newSKEBlobWithRemoteSKEBlob:]', 
                       '-[VCCallSession(PrivateMethods) notifyDelegateAndEndCall:didRemoteCancel:error:]', 
                       '-[VCCallSession(PrivateMethods) notifyDelegateSessionStarted]', 
                       '-[VCCallSession(PrivateMethods) pickFeaturesStringForPayload:featuresListDict:remote:]', 
                       '-[VCCallSession(PrivateMethods) prepareSRTPWithError:]', 
                       '-[VCCallSession(PrivateMethods) processSIPMessage:msgOut:optional:confIndex:]', 
                       '-[VCCallSession(PrivateMethods) releaseRTPHandles]', 
                       '-[VCCallSession(PrivateMethods) remotePauseDidChangeToState:forVideo:]', 
                       '-[VCCallSession(PrivateMethods) removeUnusedAudioPayloads]', 
                       '-[VCCallSession(PrivateMethods) reportDashboardEndResult:]', 
                       '-[VCCallSession(PrivateMethods) resetState]', '-[VCCallSession(PrivateMethods) retrieveIdentity]', 
                       '-[VCCallSession(PrivateMethods) retrieveRawFeaturesString]', 
                       '-[VCCallSession(PrivateMethods) sendBasebandCodecMessage]', 
                       '-[VCCallSession(PrivateMethods) sendCallingModeMessage]', 
                       '-[VCCallSession(PrivateMethods) sendSIPInviteWithError:]', 
                       '-[VCCallSession(PrivateMethods) sendTimings]', 
                       '-[VCCallSession(PrivateMethods) setDuplicationFlag:withPreferredLocalLinkTypeForDuplication:]', 
                       '-[VCCallSession(PrivateMethods) setLocalIdentityForKeyExchange]', 
                       '-[VCCallSession(PrivateMethods) setMatchedFeaturesString:localFeaturesString:remoteFeaturesString:]', 
                       '-[VCCallSession(PrivateMethods) setMediaQueueStreamSettings]', 
                       '-[VCCallSession(PrivateMethods) setPayloadEmergencyTierSettings:]', 
                       '-[VCCallSession(PrivateMethods) setRTPPayloads:numPayloads:withError:]', 
                       '-[VCCallSession(PrivateMethods) setSKEBlobOnTransportSession]', 
                       '-[VCCallSession(PrivateMethods) setupAACELDPayload:]', 
                       '-[VCCallSession(PrivateMethods) setupAudioCodecWithPayload:]', 
                       '-[VCCallSession(PrivateMethods) setupAudioCookies]', 
                       '-[VCCallSession(PrivateMethods) setupAudioEncoders]', 
                       '-[VCCallSession(PrivateMethods) setupAudioHeaderSize]', 
                       '-[VCCallSession(PrivateMethods) setupAudioTierPicker]', 
                       '-[VCCallSession(PrivateMethods) setupBitrateNegotation]', 
                       '-[VCCallSession(PrivateMethods) setupCalleeSIPStartTimeout:]', 
                       '-[VCCallSession(PrivateMethods) setupCallerRTPChannelWithError:]', 
                       '-[VCCallSession(PrivateMethods) setupDTLSDefaults]', 
                       '-[VCCallSession(PrivateMethods) setupEncryptionWithKey:confIndex:]', 
                       '-[VCCallSession(PrivateMethods) setupIDSConnectionForCallID:destination:socket:error:]', 
                       '-[VCCallSession(PrivateMethods) setupPeerInfo:usingInviteData:isCaller:capabilities:]', 
                       '-[VCCallSession(PrivateMethods) shouldNotifyDelegateDidStartBeforeAudioSetup]', 
                       '-[VCCallSession(PrivateMethods) shouldSendBlackFrame:]', 
                       '-[VCCallSession(PrivateMethods) shutdownVoiceChatFromRemoteSIPSignal:withReason:]', 
                       '-[VCCallSession(PrivateMethods) sipConnectThreadProc:]', 
                       '-[VCCallSession(PrivateMethods) sipConnectWithError:]', 
                       '-[VCCallSession(PrivateMethods) startAFRC:]', '-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]', 
                       '-[VCCallSession(PrivateMethods) startAudioWithCompletionHandler:]', 
                       '-[VCCallSession(PrivateMethods) startMediaQueue:]', 
                       '-[VCCallSession(PrivateMethods) startMediaWithPreNegotiatedSettings:]', 
                       '-[VCCallSession(PrivateMethods) startPausedHeartbeat]', 
                       '-[VCCallSession(PrivateMethods) startVideo:error:]', 
                       '-[VCCallSession(PrivateMethods) startVideoReceive:]', 
                       '-[VCCallSession(PrivateMethods) startVideoSend:error:]', 
                       '-[VCCallSession(PrivateMethods) stopAFRC:]', '-[VCCallSession(PrivateMethods) stopAudioIO:]', 
                       '-[VCCallSession(PrivateMethods) stopAudioWithCompletionHandler:]', 
                       '-[VCCallSession(PrivateMethods) stopMediaQueue:]', 
                       '-[VCCallSession(PrivateMethods) stopPausedHeartbeat]', 
                       '-[VCCallSession(PrivateMethods) stopVideo:error:]', 
                       '-[VCCallSession(PrivateMethods) stopVideoReceive:isPausing:]', 
                       '-[VCCallSession(PrivateMethods) stopVideoSend:error:]', 
                       '-[VCCallSession(PrivateMethods) treatAsCellular]', 
                       '-[VCCallSession(PrivateMethods) unlock]', '-[VCCallSession(PrivateMethods) updateAudioTxBitrate]', 
                       '-[VCCallSession(PrivateMethods) updateDeviceRole:]', 
                       '-[VCCallSession(PrivateMethods) updateNetworkCheckHint:]', 
                       '-[VCCallSession(PrivateMethods) useAudioPayload:withBitrate:]', 
                       '-[VCCallSession(PrivateMethods) useAudioTier:]', 
                       '-[VCCallSession(PrivateMethods) videoRTPID]', '-[VCCallSession(VCCaptionsReceiverDelegate) didReceiveCaptions:]', 
                       '-[VCCallSession(VCSecureDataChannelDelegate) vcSecureDataChannel:messageType:receivedData:]', 
                       '-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:cancelRelayRequest:]', 
                       '-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:connectionSetupDataDidChange:]', 
                       '-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:initiateRelayRequest:]', 
                       '-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:sendRelayResponse:]', 
                       '-[VCCallSession(VideoConferencing) callAlarmsWithRTPTimeStamp:]', 
                       '-[VCCallSession(VideoConferencing) initializeVideoReceiver:reportingAgent:]', 
                       '-[VCCallSession(VideoConferencing) initializeVideoTransmitter:encodeRule:unpausing:reportingAgent:]', 
                       '-[VCCallSession(VideoConferencing) newRemoteScreenAttributesForOrientation:]', 
                       '-[VCCallSession(VideoConferencing) onCaptureFrame:audioTS:audioHT:videoHT:droppedFrames:cameraBits:]', 
                       '-[VCCallSession(VideoConferencing) onPlayVideo:frameTime:cameraStatusBits:]', 
                       '-[VCCallSession(VideoConferencing) parameterSetForPayload:]', 
                       '-[VCCallSession(VideoConferencing) processBlackFrame:]', 
                       '-[VCCallSession(VideoConferencing) processResolutionChangeToVideoRule:captureRule:featuresListString:]', 
                       '-[VCCallSession(VideoConferencing) sessionReceivingBitrate]', 
                       '-[VCCallSession(VideoConferencing) sessionReceivingFramerate]', 
                       '-[VCCallSession(VideoConferencing) sessionTransmittingBitrate]', 
                       '-[VCCallSession(VideoConferencing) sessionTransmittingFramerate]', 
                       '-[VCCallSession(VideoConferencing) updateVideoQualityNotification:]', 
                       '-[VCCallSession(WCMClientDelegate) wcmGetCallConfig:targetBitrate:]', 
                       '-[VCCallSession(WCMClientDelegate) wcmSetCallConfig:interferenceLevel:]', 
                       '-[VCCapabilities actualAudioCodec]', '-[VCCapabilities actualVideoCodec]', 
                       '-[VCCapabilities decodeFromNSDictionary:]', '-[VCCapabilities description]', 
                       '-[VCCapabilities deviceRole]', '-[VCCapabilities encodeWithCoder:]', 
                       '-[VCCapabilities initWithCoder:]', '-[VCCapabilities initWithEncodedDictionary:]', 
                       '-[VCCapabilities init]', '-[VCCapabilities isAudioEnabled]', 
                       '-[VCCapabilities isAudioPausedToStart]', '-[VCCapabilities isDTLSEnabled]', 
                       '-[VCCapabilities isDuplexAudioOnly]', '-[VCCapabilities isDuplexVideoOnly]', 
                       '-[VCCapabilities isKeyExchangeEnabled]', '-[VCCapabilities isRelayEnabled]', 
                       '-[VCCapabilities isRelayForced]', '-[VCCapabilities isVideoEnabled]', 
                       '-[VCCapabilities isVideoPausedToStart]', '-[VCCapabilities isVideoSourceScreen]', 
                       '-[VCCapabilities newEncodedDictionary]', '-[VCCapabilities preferredAudioCodec]', 
                       '-[VCCapabilities preferredVideoCodec]', '-[VCCapabilities requiresWifi]', 
                       '-[VCCapabilities setActualAudioCodec:]', '-[VCCapabilities setActualVideoCodec:]', 
                       '-[VCCapabilities setDeviceRole:]', '-[VCCapabilities setIsAudioEnabled:]', 
                       '-[VCCapabilities setIsAudioPausedToStart:]', '-[VCCapabilities setIsDTLSEnabled:]', 
                       '-[VCCapabilities setIsDuplexAudioOnly:]', '-[VCCapabilities setIsDuplexVideoOnly:]', 
                       '-[VCCapabilities setIsKeyExchangeEnabled:]', '-[VCCapabilities setIsRelayEnabled:]', 
                       '-[VCCapabilities setIsRelayForced:]', '-[VCCapabilities setIsVideoEnabled:]', 
                       '-[VCCapabilities setIsVideoPausedToStart:]', '-[VCCapabilities setIsVideoSourceScreen:]', 
                       '-[VCCapabilities setPreferredAudioCodec:]', '-[VCCapabilities setPreferredVideoCodec:]', 
                       '-[VCCapabilities setRequiresWifi:]', '-[VCCaptionsClientContext initWithStreamToken:]', 
                       '-[VCCaptionsClientContext streamToken]', '-[VCCaptionsManager captionsSourceFromClientContext:]', 
                       '-[VCCaptionsManager dealloc]', '-[VCCaptionsManager deregisterBlocksForService]', 
                       '-[VCCaptionsManager init]', '-[VCCaptionsManager notifyClientsWithStreamToken:service:arguments:]', 
                       '-[VCCaptionsManager registerBlocksForService]', 
                       '-[VCCaptionsManager registerCaptionsSource:streamToken:]', 
                       '-[VCCaptionsManager streamToken:didDisableCaptions:error:]', 
                       '-[VCCaptionsManager streamToken:didEnableCaptions:error:]', 
                       '-[VCCaptionsManager streamToken:didStartCaptioningWithReason:]', 
                       '-[VCCaptionsManager streamToken:didStopCaptioningWithReason:]', 
                       '-[VCCaptionsManager streamToken:didUpdateCaptions:]', 
                       '-[VCCaptionsManager unregisterCaptionsSourceWithStreamToken:]', 
                       '-[VCCaptionsManagerStreamTokenClientList captionsSource]', 
                       '-[VCCaptionsManagerStreamTokenClientList clientContextList]', 
                       '-[VCCaptionsManagerStreamTokenClientList dealloc]', 
                       '-[VCCaptionsManagerStreamTokenClientList initWithStreamToken:captionsSource:]', 
                       '-[VCCaptionsManagerStreamTokenClientList newContext]', 
                       '-[VCCaptionsManagerStreamTokenClientList removeContext:]', 
                       '-[VCCaptionsReceiver currentTranscription]', '-[VCCaptionsReceiver dealloc]', 
                       '-[VCCaptionsReceiver delegate]', '-[VCCaptionsReceiver initWithDelegate:]', 
                       '-[VCCaptionsReceiver processCaptionsData:]', '-[VCCaptionsReceiver setCurrentTranscription:]', 
                       '-[VCCaptionsSegment confidence]', '-[VCCaptionsSegment copyTo:]', 
                       '-[VCCaptionsSegment copyWithZone:]', '-[VCCaptionsSegment dealloc]', 
                       '-[VCCaptionsSegment description]', '-[VCCaptionsSegment dictionaryRepresentation]', 
                       '-[VCCaptionsSegment hasConfidence]', '-[VCCaptionsSegment hasHasSpaceAfter]', 
                       '-[VCCaptionsSegment hasSpaceAfter]', '-[VCCaptionsSegment hasText]', 
                       '-[VCCaptionsSegment hash]', '-[VCCaptionsSegment isEqual:]', 
                       '-[VCCaptionsSegment mergeFrom:]', '-[VCCaptionsSegment readFrom:]', 
                       '-[VCCaptionsSegment setConfidence:]', '-[VCCaptionsSegment setHasConfidence:]', 
                       '-[VCCaptionsSegment setHasHasSpaceAfter:]', '-[VCCaptionsSegment setHasSpaceAfter:]', 
                       '-[VCCaptionsSegment setText:]', '-[VCCaptionsSegment text]', 
                       '-[VCCaptionsSegment writeTo:]', '-[VCCaptionsTranscription addSegments:]', 
                       '-[VCCaptionsTranscription clearSegments]', '-[VCCaptionsTranscription copyTo:]', 
                       '-[VCCaptionsTranscription copyWithZone:]', '-[VCCaptionsTranscription dealloc]', 
                       '-[VCCaptionsTranscription description]', '-[VCCaptionsTranscription dictionaryRepresentation]', 
                       '-[VCCaptionsTranscription hasIsFinal]', '-[VCCaptionsTranscription hasIsLocal]', 
                       '-[VCCaptionsTranscription hash]', '-[VCCaptionsTranscription isEqual:]', 
                       '-[VCCaptionsTranscription isFinal]', '-[VCCaptionsTranscription isLocal]', 
                       '-[VCCaptionsTranscription mergeFrom:]', '-[VCCaptionsTranscription readFrom:]', 
                       '-[VCCaptionsTranscription segmentsAtIndex:]', '-[VCCaptionsTranscription segmentsCount]', 
                       '-[VCCaptionsTranscription segments]', '-[VCCaptionsTranscription setHasIsFinal:]', 
                       '-[VCCaptionsTranscription setHasIsLocal:]', '-[VCCaptionsTranscription setIsFinal:]', 
                       '-[VCCaptionsTranscription setIsLocal:]', '-[VCCaptionsTranscription setSegments:]', 
                       '-[VCCaptionsTranscription setUpdateNumber:]', '-[VCCaptionsTranscription setUtteranceNumber:]', 
                       '-[VCCaptionsTranscription updateNumber]', '-[VCCaptionsTranscription utteranceNumber]', 
                       '-[VCCaptionsTranscription writeTo:]', '-[VCClientRelay dealloc]', 
                       '-[VCClientRelay initWithIDSSocket:]', '-[VCClientRelay relayIDSPacket]', 
                       '-[VCClientRelay relayVTPPacket]', '-[VCClientRelay setConnectionResult:]', 
                       '-[VCClientRelay setupVTPSocket]', '-[VCClientRelay startRelay]', 
                       '-[VCClientRelay stopRelay]', '-[VCClientRelay stopVTPReceiveThread]', 
                       '-[VCConnectionIDS cellularMTU]', '-[VCConnectionIDS datagramChannelToken]', 
                       '-[VCConnectionIDS dealloc]', '-[VCConnectionIDS description]', 
                       '-[VCConnectionIDS getSourceDestinationInfo:]', 
                       '-[VCConnectionIDS initWithLinkContext:dataChannelToken:]', 
                       '-[VCConnectionIDS isIPv6]', '-[VCConnectionIDS isLocalOnCellular]', 
                       '-[VCConnectionIDS isLocalOnWiFi]', '-[VCConnectionIDS isOnSameInterfacesWithConnection:]', 
                       '-[VCConnectionIDS isRelay]', '-[VCConnectionIDS isRemoteOnCellular]', 
                       '-[VCConnectionIDS isRemoteOnWiFi]', '-[VCConnectionIDS isSameAsConnection:]', 
                       '-[VCConnectionIDS isVPN]', '-[VCConnectionIDS linkID]', 
                       '-[VCConnectionIDS localCellTech]', '-[VCConnectionIDS localConnectionType]', 
                       '-[VCConnectionIDS localInterfaceTypeString]', '-[VCConnectionIDS matchesChannelTokenWithSourceDestinationInfo:]', 
                       '-[VCConnectionIDS matchesSourceDestinationInfo:]', 
                       '-[VCConnectionIDS priority]', '-[VCConnectionIDS remoteCellTech]', 
                       '-[VCConnectionIDS remoteConnectionType]', '-[VCConnectionIDS remoteInterfaceTypeString]', 
                       '-[VCConnectionIDS setCellularMTU:]', '-[VCConnectionIDS setLocalCellTech:]', 
                       '-[VCConnectionIDS setPriority:]', '-[VCConnectionIDS setRemoteCellTech:]', 
                       '-[VCConnectionIDS type]', '-[VCConnectionLegacy cellularMTU]', 
                       '-[VCConnectionLegacy connectionResult]', '-[VCConnectionLegacy copy]', 
                       '-[VCConnectionLegacy dealloc]', '-[VCConnectionLegacy description]', 
                       '-[VCConnectionLegacy getSourceDestinationInfo:]', 
                       '-[VCConnectionLegacy initWithCandidatePair:]', 
                       '-[VCConnectionLegacy initWithConnectionResult:type:]', 
                       '-[VCConnectionLegacy ipportToString:]', '-[VCConnectionLegacy isIPv6]', 
                       '-[VCConnectionLegacy isLocalIPPort:]', '-[VCConnectionLegacy isLocalOnCellular]', 
                       '-[VCConnectionLegacy isLocalOnWiFi]', '-[VCConnectionLegacy isOnSameIPPortWithConnection:]', 
                       '-[VCConnectionLegacy isOnSameInterfacesWithConnection:]', 
                       '-[VCConnectionLegacy isRelay]', '-[VCConnectionLegacy isRemoteIPPort:]', 
                       '-[VCConnectionLegacy isRemoteOnCellular]', '-[VCConnectionLegacy isRemoteOnWiFi]', 
                       '-[VCConnectionLegacy isReplaceOnly]', '-[VCConnectionLegacy isSameAsConnection:]', 
                       '-[VCConnectionLegacy isUpgraded]', '-[VCConnectionLegacy isVPN]', 
                       '-[VCConnectionLegacy localCellTech]', '-[VCConnectionLegacy localConnectionType]', 
                       '-[VCConnectionLegacy localInterfaceTypeString]', 
                       '-[VCConnectionLegacy matchesSourceDestinationInfo:]', 
                       '-[VCConnectionLegacy priority]', '-[VCConnectionLegacy relayChannelNumber]', 
                       '-[VCConnectionLegacy remoteCellTech]', '-[VCConnectionLegacy remoteConnectionType]', 
                       '-[VCConnectionLegacy remoteInterfaceTypeString]', 
                       '-[VCConnectionLegacy setCellularMTU:]', '-[VCConnectionLegacy setLocalCellTech:]', 
                       '-[VCConnectionLegacy setPriority:]', '-[VCConnectionLegacy setRemoteCellTech:]', 
                       '-[VCConnectionLegacy setWaitToBeNominated:]', '-[VCConnectionLegacy type]', 
                       '-[VCConnectionLegacy waitToBeNominated]', '-[VCConnectionManager addConnection:]', 
                       '-[VCConnectionManager callID]', '-[VCConnectionManager connectionCount]', 
                       '-[VCConnectionManager connectionForDuplication]', 
                       '-[VCConnectionManager connectionForQuality:]', 
                       '-[VCConnectionManager connectionForQualityInternal:]', 
                       '-[VCConnectionManager createSourceDestinationInfoList]', 
                       '-[VCConnectionManager dealloc]', '-[VCConnectionManager delegate]', 
                       '-[VCConnectionManager getCellularMTUForActiveConnectionWithQuality:]', 
                       '-[VCConnectionManager getCellularTechForActiveConnectionWithQuality:forLocalInterface:]', 
                       '-[VCConnectionManager getConnectionTypeForActiveConnectionWithQuality:forLocalInterface:]', 
                       '-[VCConnectionManager getConnectionWithSourceDestinationInfo:isPrimary:]', 
                       '-[VCConnectionManager getNumberOfConnectionsInternal]', 
                       '-[VCConnectionManager init]', '-[VCConnectionManager isBetterConnection:asPrimary:]', 
                       '-[VCConnectionManager isConnectedOnIPv6ForActiveConnectionWithQuality:]', 
                       '-[VCConnectionManager isConnectedOnRelayForActiveConnectionWithQuality:]', 
                       '-[VCConnectionManager isDuplicationEnabled]', '-[VCConnectionManager isInterfaceOnCellularForActiveConnectionWithQuality:forLocalInterface:]', 
                       '-[VCConnectionManager isLocalCellularInterfaceUsed]', 
                       '-[VCConnectionManager isOptimalConnection:asPrimary:interfaceMask:]', 
                       '-[VCConnectionManager lastPrimaryConnectionInUse]', 
                       '-[VCConnectionManager mediaExcessiveCellularRxBytes]', 
                       '-[VCConnectionManager mediaExcessiveCellularTxBytes]', 
                       '-[VCConnectionManager preferredLocalInterfaceForDuplication]', 
                       '-[VCConnectionManager primaryConnectionChanged:oldPrimaryConnection:]', 
                       '-[VCConnectionManager primaryConnection]', '-[VCConnectionManager promoteSecondaryConnectionToPrimary:]', 
                       '-[VCConnectionManager relayServerProvider]', '-[VCConnectionManager removeConnection:]', 
                       '-[VCConnectionManager reportConnection:isInitialConnection:]', 
                       '-[VCConnectionManager secondaryConnection]', '-[VCConnectionManager setCallID:]', 
                       '-[VCConnectionManager setConnectionForDuplication:]', 
                       '-[VCConnectionManager setDelegate:]', '-[VCConnectionManager setDuplicationEnabled:]', 
                       '-[VCConnectionManager setLastPrimaryConnectionInUse:]', 
                       '-[VCConnectionManager setPreferredLocalInterfaceForDuplication:]', 
                       '-[VCConnectionManager setPrimaryConnection:]', 
                       '-[VCConnectionManager setRelayServerProvider:]', 
                       '-[VCConnectionManager setReportingAgent:]', '-[VCConnectionManager setSecondaryConnection:]', 
                       '-[VCConnectionManager shouldAcceptDataFromSourceDestinationInfo:]', 
                       '-[VCConnectionManager signalingExcessiveCellularRxBytes]', 
                       '-[VCConnectionManager signalingExcessiveCellularTxBytes]', 
                       '-[VCConnectionManager sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]', 
                       '-[VCConnectionManager updateBytesForSourceDestinationInfo:bytes:isMediaData:isOutgoing:]', 
                       '-[VCConnectionManager updateCellularMTU:]', '-[VCConnectionManager updateCellularTech:forLocalInterface:]', 
                       '-[VCConnectionManager updateReceivedBytesForSourceDestinationInfo:bytesReceived:isMediaData:]', 
                       '-[VCConnectionManager updateReceivedExcessiveBytes:isMediaData:isIPv6:]', 
                       '-[VCConnectionManager updateTransmittedBytesForSourceDestinationInfo:bytesSent:isMediaData:]', 
                       '-[VCConnectionManager updateTransmittedExcessiveBytes:isMediaData:isIPv6:]', 
                       '-[VCConnectionManager useConnectionAsPrimary:]', 
                       '-[VCConnectionManagerIDS addConnection:]', '-[VCConnectionManagerIDS addConnectionToConnectionArray:]', 
                       '-[VCConnectionManagerIDS dealloc]', '-[VCConnectionManagerIDS getConnectionWithSourceDestinationInfo:isPrimary:]', 
                       '-[VCConnectionManagerIDS getPrimaryConnectionToBeCompared]', 
                       '-[VCConnectionManagerIDS getSecondaryConnectionToBeCompared]', 
                       '-[VCConnectionManagerIDS handlePrimaryConnectionRemoved]', 
                       '-[VCConnectionManagerIDS handleSecondaryConnectionRemoved]', 
                       '-[VCConnectionManagerIDS init]', '-[VCConnectionManagerIDS removeConnection:]', 
                       '-[VCConnectionManagerIDS reportConnection:isInitialConnection:]', 
                       '-[VCConnectionManagerIDS setPreferredLocalInterfaceForDuplication:]', 
                       '-[VCConnectionManagerIDS setPreferredRemoteInterfaceForDuplication:]', 
                       '-[VCConnectionManagerIDS shouldAcceptDataFromSourceDestinationInfo:]', 
                       '-[VCConnectionManagerIDS shouldReplaceConnection:withConnection:]', 
                       '-[VCConnectionManagerIDS sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]', 
                       '-[VCConnectionManagerIDS updateCellularMTU:]', 
                       '-[VCConnectionManagerIDS updateCellularTech:forLocalInterface:]', 
                       '-[VCConnectionManagerIDS updateConnectionForDuplication]', 
                       '-[VCConnectionManagerIDS updatePrimaryWithConnection:]', 
                       '-[VCConnectionManagerIDS updateSecondaryWithConnection:]', 
                       '-[VCConnectionManagerLegacy addConnection:]', '-[VCConnectionManagerLegacy dealloc]', 
                       '-[VCConnectionManagerLegacy getConnectionWithSourceDestinationInfo:isPrimary:]', 
                       '-[VCConnectionManagerLegacy getPrimaryConnectionToBeCompared]', 
                       '-[VCConnectionManagerLegacy getSecondaryConnectionToBeCompared]', 
                       '-[VCConnectionManagerLegacy init]', '-[VCConnectionManagerLegacy nominateConnection:asPrimary:interfaceMask:demote:connectionPriority:replaceOnly:]', 
                       '-[VCConnectionManagerLegacy pendingPrimaryConnection]', 
                       '-[VCConnectionManagerLegacy pendingSecondaryConnection]', 
                       '-[VCConnectionManagerLegacy removeConnection:]', 
                       '-[VCConnectionManagerLegacy removeConnectionWithIPPort:isLocalInterface:]', 
                       '-[VCConnectionManagerLegacy removeConnectionWithIPPortInternal:isLocalInterface:]', 
                       '-[VCConnectionManagerLegacy reportConnection:isInitialConnection:]', 
                       '-[VCConnectionManagerLegacy setPendingPrimaryConnection:]', 
                       '-[VCConnectionManagerLegacy setPendingSecondaryConnection:]', 
                       '-[VCConnectionManagerLegacy shouldAcceptDataFromSourceDestinationInfo:]', 
                       '-[VCConnectionManagerLegacy shouldNominateCandidatePair:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]', 
                       '-[VCConnectionManagerLegacy shouldNominateCandidatePairInternal:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]', 
                       '-[VCConnectionManagerLegacy shouldNominateConnection:]', 
                       '-[VCConnectionManagerLegacy sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]', 
                       '-[VCConnectionManagerLegacy updateCellularMTU:]', 
                       '-[VCConnectionManagerLegacy updateCellularTech:forLocalInterface:]', 
                       '-[VCConnectionManagerLegacy updateStateWithCurrentConnection:asPrimary:interfaceMask:demote:replaceOnly:]', 
                       '-[VCDatagramChannelManager addDatagramChannelWithDescriptor:eventHandler:token:error:]', 
                       '-[VCDatagramChannelManager addDatagramChannelWithDestination:eventHandler:token:error:]', 
                       '-[VCDatagramChannelManager closeDatagramChannelWithToken:]', 
                       '-[VCDatagramChannelManager closeVFDWithToken:]', 
                       '-[VCDatagramChannelManager datagramChannelWithToken:]', 
                       '-[VCDatagramChannelManager dealloc]', '-[VCDatagramChannelManager init]', 
                       '-[VCDatagramChannelManager readHandler]', '-[VCDatagramChannelManager removeDatagramChannelWithToken:]', 
                       '-[VCDatagramChannelManager setReadHandler:]', '-[VCDatagramChannelManager setupDatagramChannel:withToken:eventHandler:]', 
                       '-[VCDatagramChannelManager setupVTPForDatagramChannel:withToken:]', 
                       '-[VCDispatchQueue dealloc]', '-[VCDispatchQueue getCustomRootQueueWithPriority:isFixedPriority:]', 
                       '-[VCDispatchQueue init]', '-[VCHardwareSettings init]', 
                       '-[VCHardwareSettingsEmbedded chipId]', '-[VCHardwareSettingsEmbedded dealloc]', 
                       '-[VCHardwareSettingsEmbedded deviceClass]', '-[VCHardwareSettingsEmbedded deviceName]', 
                       '-[VCHardwareSettingsEmbedded init]', '-[VCHardwareSettingsEmbedded initializeScreenDimension]', 
                       '-[VCHardwareSettingsEmbedded screenHeight]', '-[VCHardwareSettingsEmbedded screenWidth]', 
                       '-[VCHardwareSettingsEmbedded useSoftFramerateSwitching]', 
                       '-[VCHardwareSettingsEmbedded videoEncoderType]', 
                       '-[VCImageAttributeRules addRuleForVideoPayload:withDirection:width:height:frameRate:priority:interface:]', 
                       '-[VCImageAttributeRules dealloc]', '-[VCImageAttributeRules description]', 
                       '-[VCImageAttributeRules extractDimensionsForInterface:direction:]', 
                       '-[VCImageAttributeRules imageAttributeRules]', 
                       '-[VCImageAttributeRules init]', '-[VCImageAttributeRules interfaceKey:forInterface:directionKey:forDirection:]', 
                       '-[VCImageAttributeRules setImageAttributeRules:]', 
                       '-[VCImageAttributeRules swapSendAndReceiveRules]', 
                       '-[VCImageQueue dealloc]', '-[VCImageQueue enqueueFrame:atTime:]', 
                       '-[VCImageQueue frameRate]', '-[VCImageQueue getQueueRepresentation:]', 
                       '-[VCImageQueue imageQueueProtected]', '-[VCImageQueue initWithFrameRate:]', 
                       '-[VCImageQueue initWithFrameRate:imageQueueProtected:]', 
                       '-[VCImageQueue pause]', '-[VCImageQueue setFrameRate:]', 
                       '-[VCImageQueue setImageQueueProtected:]', '-[VCImageQueue setVideoDestination:]', 
                       '-[VCImageQueue start]', '-[VCImageQueue stop]', 
                       '-[VCMediaNegotiationBlob addBandwidthSettings:]', 
                       '-[VCMediaNegotiationBlob allowDynamicMaxBitrate]', 
                       '-[VCMediaNegotiationBlob allowsContentsChangeWithAspectPreservation]', 
                       '-[VCMediaNegotiationBlob audioSettings]', '-[VCMediaNegotiationBlob bandwidthSettingsAtIndex:]', 
                       '-[VCMediaNegotiationBlob bandwidthSettingsCount]', 
                       '-[VCMediaNegotiationBlob bandwidthSettings]', '-[VCMediaNegotiationBlob basebandCodecSampleRate]', 
                       '-[VCMediaNegotiationBlob basebandCodec]', '-[VCMediaNegotiationBlob captionsSettings]', 
                       '-[VCMediaNegotiationBlob clearBandwidthSettings]', 
                       '-[VCMediaNegotiationBlob copyTo:]', '-[VCMediaNegotiationBlob copyWithZone:]', 
                       '-[VCMediaNegotiationBlob dealloc]', '-[VCMediaNegotiationBlob description]', 
                       '-[VCMediaNegotiationBlob dictionaryRepresentation]', 
                       '-[VCMediaNegotiationBlob hasAllowDynamicMaxBitrate]', 
                       '-[VCMediaNegotiationBlob hasAllowsContentsChangeWithAspectPreservation]', 
                       '-[VCMediaNegotiationBlob hasAudioSettings]', '-[VCMediaNegotiationBlob hasBasebandCodecSampleRate]', 
                       '-[VCMediaNegotiationBlob hasBasebandCodec]', '-[VCMediaNegotiationBlob hasCaptionsSettings]', 
                       '-[VCMediaNegotiationBlob hasScreenSettings]', '-[VCMediaNegotiationBlob hasUserAgent]', 
                       '-[VCMediaNegotiationBlob hasVideoSettings]', '-[VCMediaNegotiationBlob hash]', 
                       '-[VCMediaNegotiationBlob isEqual:]', '-[VCMediaNegotiationBlob mergeFrom:]', 
                       '-[VCMediaNegotiationBlob readFrom:]', '-[VCMediaNegotiationBlob screenSettings]', 
                       '-[VCMediaNegotiationBlob setAllowDynamicMaxBitrate:]', 
                       '-[VCMediaNegotiationBlob setAllowsContentsChangeWithAspectPreservation:]', 
                       '-[VCMediaNegotiationBlob setAudioSettings:]', '-[VCMediaNegotiationBlob setBandwidthSettings:]', 
                       '-[VCMediaNegotiationBlob setBasebandCodec:]', '-[VCMediaNegotiationBlob setBasebandCodecSampleRate:]', 
                       '-[VCMediaNegotiationBlob setCaptionsSettings:]', 
                       '-[VCMediaNegotiationBlob setHasAllowDynamicMaxBitrate:]', 
                       '-[VCMediaNegotiationBlob setHasAllowsContentsChangeWithAspectPreservation:]', 
                       '-[VCMediaNegotiationBlob setHasBasebandCodecSampleRate:]', 
                       '-[VCMediaNegotiationBlob setScreenSettings:]', 
                       '-[VCMediaNegotiationBlob setUserAgent:]', '-[VCMediaNegotiationBlob setVideoSettings:]', 
                       '-[VCMediaNegotiationBlob userAgent]', '-[VCMediaNegotiationBlob videoSettings]', 
                       '-[VCMediaNegotiationBlob writeTo:]', '-[VCMediaNegotiationBlob(Utils) printBandwidthSettings]', 
                       '-[VCMediaNegotiationBlob(Utils) printCaptionsSettings]', 
                       '-[VCMediaNegotiationBlob(Utils) printWithTitle:blobSize:]', 
                       '-[VCMediaNegotiationBlobAudioSettings audioUnitModel]', 
                       '-[VCMediaNegotiationBlobAudioSettings copyTo:]', 
                       '-[VCMediaNegotiationBlobAudioSettings copyWithZone:]', 
                       '-[VCMediaNegotiationBlobAudioSettings description]', 
                       '-[VCMediaNegotiationBlobAudioSettings dictionaryRepresentation]', 
                       '-[VCMediaNegotiationBlobAudioSettings hasAudioUnitModel]', 
                       '-[VCMediaNegotiationBlobAudioSettings hash]', '-[VCMediaNegotiationBlobAudioSettings isEqual:]', 
                       '-[VCMediaNegotiationBlobAudioSettings mergeFrom:]', 
                       '-[VCMediaNegotiationBlobAudioSettings payloadFlags]', 
                       '-[VCMediaNegotiationBlobAudioSettings readFrom:]', 
                       '-[VCMediaNegotiationBlobAudioSettings rtpSSRC]', 
                       '-[VCMediaNegotiationBlobAudioSettings secondaryFlags]', 
                       '-[VCMediaNegotiationBlobAudioSettings setAudioUnitModel:]', 
                       '-[VCMediaNegotiationBlobAudioSettings setHasAudioUnitModel:]', 
                       '-[VCMediaNegotiationBlobAudioSettings setPayloadFlags:]', 
                       '-[VCMediaNegotiationBlobAudioSettings setRtpSSRC:]', 
                       '-[VCMediaNegotiationBlobAudioSettings setSecondaryFlags:]', 
                       '-[VCMediaNegotiationBlobAudioSettings setSupportFlags:]', 
                       '-[VCMediaNegotiationBlobAudioSettings setUseSBR:]', 
                       '-[VCMediaNegotiationBlobAudioSettings supportFlags]', 
                       '-[VCMediaNegotiationBlobAudioSettings useSBR]', 
                       '-[VCMediaNegotiationBlobAudioSettings writeTo:]', 
                       '-[VCMediaNegotiationBlobAudioSettings(AudioRules) allowAudioRecording]', 
                       '-[VCMediaNegotiationBlobAudioSettings(AudioRules) initWithSSRC:audioRuleCollection:allowAudioRecording:audioUnitNumber:]', 
                       '-[VCMediaNegotiationBlobAudioSettings(AudioRules) negotiationPayloadFromPayload:]', 
                       '-[VCMediaNegotiationBlobAudioSettings(AudioRules) newAudioRuleCollection]', 
                       '-[VCMediaNegotiationBlobAudioSettings(AudioRules) payloadFromNegotiationPayload:]', 
                       '-[VCMediaNegotiationBlobAudioSettings(AudioRules) print]', 
                       '-[VCMediaNegotiationBlobAudioSettings(AudioRules) setAudioRuleCollection:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings StringAsConfiguration:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings configurationAsString:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings configuration]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings copyTo:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings copyWithZone:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings description]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings dictionaryRepresentation]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings hash]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings isEqual:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings maxBandwidth]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings mergeFrom:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings readFrom:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings setConfiguration:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings setMaxBandwidth:]', 
                       '-[VCMediaNegotiationBlobBandwidthSettings writeTo:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings canDisplayCaptions]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings copyTo:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings copyWithZone:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings description]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings dictionaryRepresentation]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings hasCanDisplayCaptions]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings hasSenderLanguages]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings hash]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings isEqual:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings mergeFrom:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings readFrom:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings senderLanguages]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings setCanDisplayCaptions:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings setHasCanDisplayCaptions:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings setHasSenderLanguages:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings setSenderLanguages:]', 
                       '-[VCMediaNegotiationBlobCaptionsSettings writeTo:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings addVideoRuleCollections:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings clearVideoRuleCollections]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings copyTo:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings copyWithZone:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings dealloc]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings description]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings dictionaryRepresentation]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings featureString]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings hash]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings isEqual:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings mergeFrom:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings parameterSet]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings payload]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings readFrom:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings setFeatureString:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings setParameterSet:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings setPayload:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings setVideoRuleCollections:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings videoRuleCollectionsAtIndex:]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings videoRuleCollectionsCount]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings videoRuleCollections]', 
                       '-[VCMediaNegotiationBlobVideoPayloadSettings writeTo:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection StringAsOperation:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection StringAsTransport:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection copyTo:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection copyWithZone:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection description]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection dictionaryRepresentation]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection formats]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection hasPreferredFormat]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection hash]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection isEqual:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection mergeFrom:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection operationAsString:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection operation]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection preferredFormat]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection readFrom:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection setFormats:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection setHasPreferredFormat:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection setOperation:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection setPreferredFormat:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection setTransport:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection transportAsString:]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection transport]', 
                       '-[VCMediaNegotiationBlobVideoRuleCollection writeTo:]', 
                       '-[VCMediaNegotiationBlobVideoSettings addVideoPayloadCollections:]', 
                       '-[VCMediaNegotiationBlobVideoSettings allowRTCPFB]', 
                       '-[VCMediaNegotiationBlobVideoSettings clearVideoPayloadCollections]', 
                       '-[VCMediaNegotiationBlobVideoSettings copyTo:]', 
                       '-[VCMediaNegotiationBlobVideoSettings copyWithZone:]', 
                       '-[VCMediaNegotiationBlobVideoSettings dealloc]', 
                       '-[VCMediaNegotiationBlobVideoSettings description]', 
                       '-[VCMediaNegotiationBlobVideoSettings dictionaryRepresentation]', 
                       '-[VCMediaNegotiationBlobVideoSettings hash]', '-[VCMediaNegotiationBlobVideoSettings isEqual:]', 
                       '-[VCMediaNegotiationBlobVideoSettings mergeFrom:]', 
                       '-[VCMediaNegotiationBlobVideoSettings readFrom:]', 
                       '-[VCMediaNegotiationBlobVideoSettings rtpSSRC]', 
                       '-[VCMediaNegotiationBlobVideoSettings setAllowRTCPFB:]', 
                       '-[VCMediaNegotiationBlobVideoSettings setRtpSSRC:]', 
                       '-[VCMediaNegotiationBlobVideoSettings setVideoPayloadCollections:]', 
                       '-[VCMediaNegotiationBlobVideoSettings videoPayloadCollectionsAtIndex:]', 
                       '-[VCMediaNegotiationBlobVideoSettings videoPayloadCollectionsCount]', 
                       '-[VCMediaNegotiationBlobVideoSettings videoPayloadCollections]', 
                       '-[VCMediaNegotiationBlobVideoSettings writeTo:]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) getPayloadSettingsForPayload:]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithSSRC:allowRTCPFB:videoRuleCollections:featureStrings:]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithScreenSSRC:allowRTCPFB:videoRuleCollections:featureStrings:]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) newVideoRuleCollectionsForScreen:]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) parameterSetStringFromPayloadSettings:]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) printScreen]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) printVideo]', 
                       '-[VCMediaNegotiationBlobVideoSettings(VideoRules) setVideoRuleCollections:featureStrings:isScreen:]', 
                       '-[VCMediaNegotiator addBandwidthSettingsForMediaBlob:operatingMode:connectionType:]', 
                       '-[VCMediaNegotiator bandwidthConfigurationWithOperatingMode:connectionType:]', 
                       '-[VCMediaNegotiator dealloc]', '-[VCMediaNegotiator getPreferredScreenPayloadList]', 
                       '-[VCMediaNegotiator getPreferredVideoPayloadList:]', 
                       '-[VCMediaNegotiator initWithLocalSettings:]', '-[VCMediaNegotiator isCaller]', 
                       '-[VCMediaNegotiator localSettings]', '-[VCMediaNegotiator negotiateAudioAllowRecording:]', 
                       '-[VCMediaNegotiator negotiateAudioDTXPayload:]', 
                       '-[VCMediaNegotiator negotiateAudioPrimaryPayload:]', 
                       '-[VCMediaNegotiator negotiateAudioSecondaryPayloads:]', 
                       '-[VCMediaNegotiator negotiateAudioSettings:]', 
                       '-[VCMediaNegotiator negotiateCaptionsWithCaptionsSettings:]', 
                       '-[VCMediaNegotiator negotiateRTCPFB:]', '-[VCMediaNegotiator negotiateScreenSettings:]', 
                       '-[VCMediaNegotiator negotiateVideoMaxResolutionWithLocalRules:remoteRules:]', 
                       '-[VCMediaNegotiator negotiateVideoSettings:]', 
                       '-[VCMediaNegotiator negotiatedAudioSettings]', 
                       '-[VCMediaNegotiator negotiatedCaptionsSettings]', 
                       '-[VCMediaNegotiator negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:]', 
                       '-[VCMediaNegotiator negotiatedScreenSettings]', 
                       '-[VCMediaNegotiator negotiatedSettings]', '-[VCMediaNegotiator negotiatedVideoSettings]', 
                       '-[VCMediaNegotiator newCompressedBlob:]', '-[VCMediaNegotiator newDecompressedBlob:]', 
                       '-[VCMediaNegotiator newInviteBlob]', '-[VCMediaNegotiator newResponseBlob]', 
                       '-[VCMediaNegotiator processInviteBlob:]', '-[VCMediaNegotiator processParameterSets:videoResults:]', 
                       '-[VCMediaNegotiator processResponseBlob:]', '-[VCMediaNegotiator remoteMaxBandwidthForOperatingMode:connectionType:]', 
                       '-[VCMediaNegotiator saveRemoteBandwidthSettingsWithMediaBlob:]', 
                       '-[VCMediaNegotiator selectBestVideoRuleForTransport:payload:encodingType:localVideoRuleCollection:remoteVideoSettings:negotiatedVideoSettings:isScreen:]', 
                       '-[VCMediaNegotiator selectVideoFeatureString:selectedPayload:]', 
                       '-[VCMediaNegotiator setupAudioWithNegotiatedSettings:]', 
                       '-[VCMediaNegotiator setupBandwidthSettingsForMediaBlob:]', 
                       '-[VCMediaNegotiator setupCaptionsForMediaBlob:]', 
                       '-[VCMediaNegotiator setupScreenWithNegotiatedSettings:]', 
                       '-[VCMediaNegotiator setupVideoWithNegotiatedSettings:]', 
                       '-[VCMediaNegotiator usePreNegotiation]', '-[VCMediaNegotiatorAudioResults addSecondaryPayload:]', 
                       '-[VCMediaNegotiatorAudioResults allowRecording]', 
                       '-[VCMediaNegotiatorAudioResults allowSwitching]', 
                       '-[VCMediaNegotiatorAudioResults audioUnitModel]', 
                       '-[VCMediaNegotiatorAudioResults dealloc]', '-[VCMediaNegotiatorAudioResults dtxPayload]', 
                       '-[VCMediaNegotiatorAudioResults init]', '-[VCMediaNegotiatorAudioResults primaryPayload]', 
                       '-[VCMediaNegotiatorAudioResults remoteSSRC]', '-[VCMediaNegotiatorAudioResults secondaryPayloads]', 
                       '-[VCMediaNegotiatorAudioResults setAllowRecording:]', 
                       '-[VCMediaNegotiatorAudioResults setAllowSwitching:]', 
                       '-[VCMediaNegotiatorAudioResults setAudioUnitModel:]', 
                       '-[VCMediaNegotiatorAudioResults setDtxPayload:]', 
                       '-[VCMediaNegotiatorAudioResults setPrimaryPayload:]', 
                       '-[VCMediaNegotiatorAudioResults setRemoteSSRC:]', 
                       '-[VCMediaNegotiatorCaptionsResults dealloc]', '-[VCMediaNegotiatorCaptionsResults isSupported]', 
                       '-[VCMediaNegotiatorCaptionsResults localLanguages]', 
                       '-[VCMediaNegotiatorCaptionsResults remoteCanDisplayCaptions]', 
                       '-[VCMediaNegotiatorCaptionsResults remoteLanguages]', 
                       '-[VCMediaNegotiatorCaptionsResults setIsSupported:]', 
                       '-[VCMediaNegotiatorCaptionsResults setLocalLanguages:]', 
                       '-[VCMediaNegotiatorCaptionsResults setRemoteCanDisplayCaptions:]', 
                       '-[VCMediaNegotiatorCaptionsResults setRemoteLanguages:]', 
                       '-[VCMediaNegotiatorLocalConfiguration allowAudioRecording]', 
                       '-[VCMediaNegotiatorLocalConfiguration allowAudioSwitching]', 
                       '-[VCMediaNegotiatorLocalConfiguration allowRTCPFB]', 
                       '-[VCMediaNegotiatorLocalConfiguration audioRuleCollection]', 
                       '-[VCMediaNegotiatorLocalConfiguration audioSSRC]', 
                       '-[VCMediaNegotiatorLocalConfiguration audioUnitNumber]', 
                       '-[VCMediaNegotiatorLocalConfiguration basebandCodecSampleRate]', 
                       '-[VCMediaNegotiatorLocalConfiguration basebandCodec]', 
                       '-[VCMediaNegotiatorLocalConfiguration bitrateArbiter]', 
                       '-[VCMediaNegotiatorLocalConfiguration captionsReceiverLanguages]', 
                       '-[VCMediaNegotiatorLocalConfiguration captionsSenderLanguages]', 
                       '-[VCMediaNegotiatorLocalConfiguration dealloc]', 
                       '-[VCMediaNegotiatorLocalConfiguration deviceRole]', 
                       '-[VCMediaNegotiatorLocalConfiguration isCaller]', 
                       '-[VCMediaNegotiatorLocalConfiguration preferredAudioCodec]', 
                       '-[VCMediaNegotiatorLocalConfiguration screenRuleCollections]', 
                       '-[VCMediaNegotiatorLocalConfiguration setAllowAudioRecording:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setAllowAudioSwitching:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setAllowRTCPFB:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setAudioRuleCollection:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setAudioSSRC:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setAudioUnitNumber:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setBasebandCodec:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setBasebandCodecSampleRate:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setBitrateArbiter:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setCaptionsReceiverLanguages:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setCaptionsSenderLanguages:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setDeviceRole:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setIsCaller:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setPreferredAudioCodec:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setScreenRuleCollections:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setVideoFeatureStrings:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setVideoRuleCollections:]', 
                       '-[VCMediaNegotiatorLocalConfiguration setVideoSSRC:]', 
                       '-[VCMediaNegotiatorLocalConfiguration videoFeatureStrings]', 
                       '-[VCMediaNegotiatorLocalConfiguration videoRuleCollections]', 
                       '-[VCMediaNegotiatorLocalConfiguration videoSSRC]', 
                       '-[VCMediaNegotiatorResults bandwidthSettings]', 
                       '-[VCMediaNegotiatorResults dealloc]', '-[VCMediaNegotiatorResults init]', 
                       '-[VCMediaNegotiatorResults remoteBasebandCodecSampleRate]', 
                       '-[VCMediaNegotiatorResults remoteBasebandCodec]', 
                       '-[VCMediaNegotiatorResults remoteUserAgent]', '-[VCMediaNegotiatorResults setBandwidthSettings:]', 
                       '-[VCMediaNegotiatorResults setRemoteBasebandCodec:]', 
                       '-[VCMediaNegotiatorResults setRemoteBasebandCodecSampleRate:]', 
                       '-[VCMediaNegotiatorResults setRemoteUserAgent:]', 
                       '-[VCMediaNegotiatorResults setSupportsDynamicMaxBitrate:]', 
                       '-[VCMediaNegotiatorResults supportsDynamicMaxBitrate]', 
                       '-[VCMediaNegotiatorVideoResults addFeatureString:key:]', 
                       '-[VCMediaNegotiatorVideoResults addParameterSet:key:]', 
                       '-[VCMediaNegotiatorVideoResults addVideoRules:transportType:payload:encodingType:]', 
                       '-[VCMediaNegotiatorVideoResults dealloc]', '-[VCMediaNegotiatorVideoResults featureStrings]', 
                       '-[VCMediaNegotiatorVideoResults init]', '-[VCMediaNegotiatorVideoResults isRTCPFBEnabled]', 
                       '-[VCMediaNegotiatorVideoResults isSupported]', 
                       '-[VCMediaNegotiatorVideoResults parameterSets]', 
                       '-[VCMediaNegotiatorVideoResults remoteSSRC]', '-[VCMediaNegotiatorVideoResults setFeatureStrings:]', 
                       '-[VCMediaNegotiatorVideoResults setIsRTCPFBEnabled:]', 
                       '-[VCMediaNegotiatorVideoResults setIsSupported:]', 
                       '-[VCMediaNegotiatorVideoResults setParameterSets:]', 
                       '-[VCMediaNegotiatorVideoResults setRemoteSSRC:]', 
                       '-[VCMediaNegotiatorVideoResults videoRuleCollections]', 
                       '-[VCMediaStreamManager allocWithZone:]', '-[VCMediaStreamManager autorelease]', 
                       '-[VCMediaStreamManager copyWithZone:]', '-[VCMediaStreamManager dealloc]', 
                       '-[VCMediaStreamManager init]', '-[VCMediaStreamManager pauseStreams:]', 
                       '-[VCMediaStreamManager registerBlocksForService]', 
                       '-[VCMediaStreamManager release]', '-[VCMediaStreamManager retainCount]', 
                       '-[VCMediaStreamManager retain]', '-[VCMediaStreamManager vcMediaStream:didPauseStream:error:]', 
                       '-[VCMediaStreamManager vcMediaStream:didReceiveDTMFEventWithDigit:]', 
                       '-[VCMediaStreamManager vcMediaStream:didReceiveRTCPPackets:]', 
                       '-[VCMediaStreamManager vcMediaStream:didReceiveTTYCharacter:]', 
                       '-[VCMediaStreamManager vcMediaStream:didResumeStream:error:]', 
                       '-[VCMediaStreamManager vcMediaStream:didStartStream:error:]', 
                       '-[VCMediaStreamManager vcMediaStream:didUpdateVideoConfiguration:error:dictionary:]', 
                       '-[VCMediaStreamManager vcMediaStream:downlinkQualityDidChange:]', 
                       '-[VCMediaStreamManager vcMediaStream:updateFrequencyLevel:isInputMeter:]', 
                       '-[VCMediaStreamManager vcMediaStream:uplinkQualityDidChange:]', 
                       '-[VCMediaStreamManager vcMediaStreamDidRTCPTimeOut:]', 
                       '-[VCMediaStreamManager vcMediaStreamDidRTPTimeOut:]', 
                       '-[VCMediaStreamManager vcMediaStreamDidStop:]', 
                       '-[VCMediaStreamStats bitrateKbps]', '-[VCMediaStreamStats dealloc]', 
                       '-[VCMediaStreamStats framerate]', '-[VCMediaStreamStats getBitrateKbpsSinceTime:]', 
                       '-[VCMediaStreamStats getFramerateSinceTime:]', 
                       '-[VCMediaStreamStats init]', '-[VCMediaStreamStats maxBitrateKbps]', 
                       '-[VCMediaStreamStats maxFrameDurationMillis]', 
                       '-[VCMediaStreamStats maxFramerate]', '-[VCMediaStreamStats minBitrateKbps]', 
                       '-[VCMediaStreamStats minFramerate]', '-[VCMediaStreamStats recordDataWithSize:atTime:]', 
                       '-[VCMediaStreamStats setMaxBitrateKbps:]', '-[VCMediaStreamStats setMaxFrameDurationMillis:]', 
                       '-[VCMediaStreamStats setMaxFramerate:]', '-[VCMediaStreamStats setMinBitrateKbps:]', 
                       '-[VCMediaStreamStats setMinFramerate:]', '-[VCMediaStreamStats updateMinMaxSinceTime:]', 
                       '-[VCMediaStreamSynchronizer calculatePlayoutTimeWithRTPTimestamp:]', 
                       '-[VCMediaStreamSynchronizer dealloc]', '-[VCMediaStreamSynchronizer initWithSourceSampleRate:destinationSampleRate:]', 
                       '-[VCMediaStreamSynchronizer updateDestinationNTPTime:withRTPTimeStamp:]', 
                       '-[VCMediaStreamSynchronizer updateSourceNTPTime:withRTPTimeStamp:]', 
                       '-[VCMediaStreamSynchronizer updateSourcePlayoutSampleRTPTimestamp:]', 
                       '-[VCMediaStreamSynchronizer updateSourceState:]', 
                       '-[VCNetworkAgent agentDescription]', '-[VCNetworkAgent agentUUID]', 
                       '-[VCNetworkAgent copyAgentData]', '-[VCNetworkAgent dealloc]', 
                       '-[VCNetworkAgent init]', '-[VCNetworkAgent isActive]', 
                       '-[VCNetworkAgent isKernelActivated]', '-[VCNetworkAgent isSpecificUseOnly]', 
                       '-[VCNetworkAgent isUserActivated]', '-[VCNetworkAgent isVoluntary]', 
                       '-[VCNetworkAgent setActive:]', '-[VCNetworkAgent setAgentDescription:]', 
                       '-[VCNetworkAgent setAgentUUID:]', '-[VCNetworkAgent setKernelActivated:]', 
                       '-[VCNetworkAgent setSpecificUseOnly:]', '-[VCNetworkAgent setUserActivated:]', 
                       '-[VCNetworkAgent setVoluntary:]', '-[VCPacketBundler accessUnitDataSectionHead]', 
                       '-[VCPacketBundler accessUnitHeaderSectionSizeMaximum]', 
                       '-[VCPacketBundler accessUnitHeaderSectionSize]', 
                       '-[VCPacketBundler allocateBundleBuffer:]', '-[VCPacketBundler allowLargePackets]', 
                       '-[VCPacketBundler bundleAudio:numInputBytes:packetPayload:timestamp:]', 
                       '-[VCPacketBundler bundleAudioLegacy:numInputBytes:packetPayload:timestamp:]', 
                       '-[VCPacketBundler bundleAudioRFC3640:numInputBytes:packetPayload:timestamp:]', 
                       '-[VCPacketBundler bundleBufferSizeWidthMaxPacketSize:maxPacketCount:]', 
                       '-[VCPacketBundler bundledPackets]', '-[VCPacketBundler dealloc]', 
                       '-[VCPacketBundler encodedBufferForRFC3640]', '-[VCPacketBundler encodedBufferSizeForRFC3640]', 
                       '-[VCPacketBundler encodedBufferSize]', '-[VCPacketBundler encodedBuffer]', 
                       '-[VCPacketBundler initLock]', '-[VCPacketBundler init]', 
                       '-[VCPacketBundler isFull]', '-[VCPacketBundler lock]', 
                       '-[VCPacketBundler maxPacketSize]', '-[VCPacketBundler packetsPerBundle]', 
                       '-[VCPacketBundler payload]', '-[VCPacketBundler reallocateBufferWithMaxPacketSize:maxPacketCount:]', 
                       '-[VCPacketBundler releaseBundleBuffer]', '-[VCPacketBundler resetBuffer]', 
                       '-[VCPacketBundler setAllowLargePackets:]', '-[VCPacketBundler setMaxPacketSize:]', 
                       '-[VCPacketBundler setPacketsPerBundle:]', '-[VCPacketBundler setPayload:]', 
                       '-[VCPacketBundler setTimestamp:]', '-[VCPacketBundler setUseRFC3640:]', 
                       '-[VCPacketBundler timestamp]', '-[VCPacketBundler unlock]', 
                       '-[VCPacketBundler useRFC3640]', '-[VCRemoteVideoManager cleanupDictionaries]', 
                       '-[VCRemoteVideoManager connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:streamToken:]', 
                       '-[VCRemoteVideoManager dealloc]', '-[VCRemoteVideoManager didReceiveFirstRemoteFrameForStreamToken:]', 
                       '-[VCRemoteVideoManager doesQueueExistForStreamToken:]', 
                       '-[VCRemoteVideoManager getQueueForStreamToken:videoMode:]', 
                       '-[VCRemoteVideoManager init]', '-[VCRemoteVideoManager lock]', 
                       '-[VCRemoteVideoManager newQueueForStreamToken:videoMode:]', 
                       '-[VCRemoteVideoManager newQueueForStreamToken:videoMode:imageQueueProtected:]', 
                       '-[VCRemoteVideoManager notifyCachedStateForStreamToken:]', 
                       '-[VCRemoteVideoManager registerBlocksForService]', 
                       '-[VCRemoteVideoManager releaseQueueForStreamToken:]', 
                       '-[VCRemoteVideoManager remoteMediaDidStall:streamToken:]', 
                       '-[VCRemoteVideoManager remoteScreenAttributesDidChange:streamToken:]', 
                       '-[VCRemoteVideoManager remoteVideoAttributesDidChange:streamToken:]', 
                       '-[VCRemoteVideoManager remoteVideoDidDegrade:streamToken:]', 
                       '-[VCRemoteVideoManager remoteVideoDidPause:streamToken:]', 
                       '-[VCRemoteVideoManager slotForStreamToken:videoMode:]', 
                       '-[VCRemoteVideoManager unlock]', '-[VCRemoteVideoState dealloc]', 
                       '-[VCRemoteVideoState hasReceivedFirstFrame]', '-[VCRemoteVideoState isMediaStalled]', 
                       '-[VCRemoteVideoState isVideoDegraded]', '-[VCRemoteVideoState isVideoPaused]', 
                       '-[VCRemoteVideoState localInterfaceType]', '-[VCRemoteVideoState remoteInterfaceType]', 
                       '-[VCRemoteVideoState remoteScreenAttributes]', 
                       '-[VCRemoteVideoState remoteVideoAttributes]', '-[VCRemoteVideoState setHasReceivedFirstFrame:]', 
                       '-[VCRemoteVideoState setIsMediaStalled:]', '-[VCRemoteVideoState setIsVideoDegraded:]', 
                       '-[VCRemoteVideoState setIsVideoPaused:]', '-[VCRemoteVideoState setLocalInterfaceType:]', 
                       '-[VCRemoteVideoState setRemoteInterfaceType:]', 
                       '-[VCRemoteVideoState setRemoteScreenAttributes:]', 
                       '-[VCRemoteVideoState setRemoteVideoAttributes:]', 
                       '-[VCScreenCapture _startCapture]', '-[VCScreenCapture callbackWithEventString:]', 
                       '-[VCScreenCapture capturedScreen:sourceRect:desRect:transform:]', 
                       '-[VCScreenCapture copyColorInfo:]', '-[VCScreenCapture dealloc]', 
                       '-[VCScreenCapture getCameraType:]', '-[VCScreenCapture getPreviewFrameCount:captureFrameCount:reset:]', 
                       '-[VCScreenCapture initWithFrameCallbackData:frameCallback:videoCaptureEventCallbackData:videoCaptureEventCallback:width:height:frameRate:withError:]', 
                       '-[VCScreenCapture isPreviewRunning]', '-[VCScreenCapture setCameraType:]', 
                       '-[VCScreenCapture setWidth:height:frameRate:]', 
                       '-[VCScreenCapture startCaptureWithWidth:height:frameRate:]', 
                       '-[VCScreenCapture startPreview]', '-[VCScreenCapture stop:]', 
                       '-[VCSecureDataChannel convertData:toEncryptedData:encrypted:]', 
                       '-[VCSecureDataChannel convertEncryptedData:toData:encrypted:]', 
                       '-[VCSecureDataChannel dealloc]', '-[VCSecureDataChannel delegate]', 
                       '-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]', 
                       '-[VCSecureDataChannel maxEncryptedDataSize]', '-[VCSecureDataChannel maxUDPPayloadSize]', 
                       '-[VCSecureDataChannel maxUnencryptedDataSize]', 
                       '-[VCSecureDataChannel sendData:messageType:encrypted:]', 
                       '-[VCSecureDataChannel setDelegate:]', '-[VCSecureDataChannel setMaxUDPPayloadSize:]', 
                       '-[VCSecureDataChannel setupWithSharedSecret:isCaller:error:]', 
                       '-[VCServerBag init]', '-[VCServerBag waitForBagLoad]', 
                       '-[VCSessionMessageTopic dealloc]', '-[VCSessionMessageTopic initWithTopicKey:strings:allowConcurrent:receiveHandler:]', 
                       '-[VCSessionMessageTopic isSendingEnabled]', '-[VCSessionMessageTopic isStringAssociated:]', 
                       '-[VCSessionMessageTopic passMessage:sequence:]', 
                       '-[VCSessionMessageTopic sendMessage:]', '-[VCSessionMessageTopic sendMessage:withSequence:numRetries:]', 
                       '-[VCSessionMessageTopic setIsSendingEnabled:]', 
                       '-[VCSessionMessageTopic setP2PID:]', '-[VCSessionMessageTopic topicKey]', 
                       '-[VCSessionMessaging addTopic:associatedStrings:allowConcurrent:receiveHandler:]', 
                       '-[VCSessionMessaging dealloc]', '-[VCSessionMessaging initWithP2PID:remoteVersion:]', 
                       '-[VCSessionMessaging newDictionaryFromUnpackedMessage:]', 
                       '-[VCSessionMessaging newPackedMessageFromDictionary:]', 
                       '-[VCSessionMessaging sendMessage:withTopic:]', 
                       '-[VCSessionMessaging stopMessaging]', '-[VCTransport cleanup]', 
                       '-[VCTransport dealloc]', '-[VCTransport detailedErrorCodeForConnectionWithCallID:]', 
                       '-[VCTransport discardRelayBindingForCallID:]', 
                       '-[VCTransport discardRelayBindingForCallID:withChannelNumber:]', 
                       '-[VCTransport flushBasebandQueue:]', '-[VCTransport getCellTechForCallID:localCellTech:isLocalCellularQoSEnabled:remoteCellTech:isRemoteCellularQoSEnabled:]', 
                       '-[VCTransport getConnectionDataForCallID:version:useCompressedData:pConnectionData:connectDataSizeInBytes:relayDictionary:interfaceUpdate:nonCellularCandidateTimeout:]', 
                       '-[VCTransport getLoopbackIP:]', '-[VCTransport getNextBestCandidate:callID:isLocal:IPPortToExclude:]', 
                       '-[VCTransport getRemoteCIDForDstIPPort:callID:]', 
                       '-[VCTransport getRemoteICEVersion:remoteICEVersion:]', 
                       '-[VCTransport getSignalStrength:signalRaw:signalGrade:]', 
                       '-[VCTransport iceConnectedForCallID:result:didReceivePacket:useRelay:secretKey:skeResult:]', 
                       '-[VCTransport iceNewCandidatesForCallID:blob:size:newCandidateVersion:]', 
                       '-[VCTransport iceRemoveIPPort:forCallID:isLocalInterface:]', 
                       '-[VCTransport iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]', 
                       '-[VCTransport init]', '-[VCTransport ipPortStillExists:requiresWifi:]', 
                       '-[VCTransport processRemoteInterfaceChangeMessageWithLocalCallID:remoteCallID:remoteData:remoteLen:remoteCandidateVersion:]', 
                       '-[VCTransport receivedDataPacket:length:forCallID:encrypted:OFTType:]', 
                       '-[VCTransport registerDataReceivedHandler:forCallID:]', 
                       '-[VCTransport registerICEBlockForCallID:connectedBlock:newCandidatesBlock:newNominationBlock:removeIPPortBlock:]', 
                       '-[VCTransport sendData:localCallID:remoteCallID:encrypted:OFTType:]', 
                       '-[VCTransport sendUDPPacketReliableEncrypted:localIPPort:destinationIPPort:oftType:]', 
                       '-[VCTransport setARPLHandler:]', '-[VCTransport setForceIPv6ForCallID:]', 
                       '-[VCTransport setForceRelayForCallID:]', '-[VCTransport setICETimeout:]', 
                       '-[VCTransport setSKEState:forCallID:]', '-[VCTransport setupDTLSSecurity:connectionResult:completionHandler:]', 
                       '-[VCTransport startConnectionCheckForCallID:remoteConnectionDataBlob:relayDictionary:iceTimeout:securityIdentity:skeState:usedRelay:]', 
                       '-[VCTransport stopConnectivityCheckForCallID:]', 
                       '-[VCTransport updateBasebandForConnection:notificationRegistrationToken:]', 
                       '-[VCTransport updateICERoleForCallID:role:remoteCallID:sessionID:]', 
                       '-[VCTransport updateInterfaceList:shouldFilterCellInterface:isUpdateNeeded:]', 
                       '-[VCTransport updateQoS:]', '-[VCTransport updateQualityIndicator:isIPv6:]', 
                       '-[VCTransportSession basebandNotificationRegistrationToken]', 
                       '-[VCTransportSession callEventHandlerWithEvent:info:]', 
                       '-[VCTransportSession cleanupBaseband]', '-[VCTransportSession connectionManager]', 
                       '-[VCTransportSession connectionSetupPiggybackBlob]', 
                       '-[VCTransportSession connectionSetupRTTEstimate]', 
                       '-[VCTransportSession dealloc]', '-[VCTransportSession deregisterBasebandNotifications]', 
                       '-[VCTransportSession detailedErrorCode]', '-[VCTransportSession eventHandler]', 
                       '-[VCTransportSession flushBasebandQueueForConnection:payloadInfoList:]', 
                       '-[VCTransportSession flushBasebandQueueWithPayloads:flushCount:]', 
                       '-[VCTransportSession getConnectionSetupData:withOptions:error:]', 
                       '-[VCTransportSession getSignalStrength:signalRaw:signalGrade:]', 
                       '-[VCTransportSession handleMediaReceivedOverPeerToPeerLink]', 
                       '-[VCTransportSession handleMediaReceivedOverRelayLink]', 
                       '-[VCTransportSession init]', '-[VCTransportSession isCallActive]', 
                       '-[VCTransportSession isHandoverSupported]', '-[VCTransportSession isRemoteOSPreLion]', 
                       '-[VCTransportSession perfTimings]', '-[VCTransportSession registerBasebandNotificationsForConnection:]', 
                       '-[VCTransportSession reportNetworkConditionsDegraded]', 
                       '-[VCTransportSession requiresWiFi]', '-[VCTransportSession setCallActive:]', 
                       '-[VCTransportSession setConnectionSetupPiggybackBlob:]', 
                       '-[VCTransportSession setEventHandler:]', '-[VCTransportSession setPerfTimings:]', 
                       '-[VCTransportSession setReportingAgent:]', '-[VCTransportSession setRequiresWiFi:]', 
                       '-[VCTransportSession setUseCompressedConnectionData:]', 
                       '-[VCTransportSession start]', '-[VCTransportSession stop]', 
                       '-[VCTransportSession updateBasebandForConnection:]', 
                       '-[VCTransportSession updateQualityIndicator:isIPv6:]', 
                       '-[VCTransportSession useCompressedConnectionData]', 
                       '-[VCTransportSessionIDS connectionCallback:isInitialConnection:]', 
                       '-[VCTransportSessionIDS connectionSetupPiggybackBlob]', 
                       '-[VCTransportSessionIDS dealloc]', '-[VCTransportSessionIDS deregisterBasebandNotifications]', 
                       '-[VCTransportSessionIDS destination]', '-[VCTransportSessionIDS didEnableDuplication:activeConnection:]', 
                       '-[VCTransportSessionIDS discardConnection:]', '-[VCTransportSessionIDS flushBasebandQueueForConnection:payloadInfoList:]', 
                       '-[VCTransportSessionIDS getConnectionSetupData:withOptions:error:]', 
                       '-[VCTransportSessionIDS getSignalStrength:signalRaw:signalGrade:]', 
                       '-[VCTransportSessionIDS handleCellularMTUChanged:]', 
                       '-[VCTransportSessionIDS handleChannelInfoReport:]', 
                       '-[VCTransportSessionIDS handleDefaultLinkUpdatedWithInfo:]', 
                       '-[VCTransportSessionIDS handleLinkConnectedWithInfo:]', 
                       '-[VCTransportSessionIDS handleLinkDisconnectedWithInfo:]', 
                       '-[VCTransportSessionIDS handlePreConnectionDataReceived:]', 
                       '-[VCTransportSessionIDS handleRATChanged:]', '-[VCTransportSessionIDS initWithCallID:]', 
                       '-[VCTransportSessionIDS primaryConnectionChanged:oldPrimaryConnection:]', 
                       '-[VCTransportSessionIDS registerBasebandNotificationsForConnection:]', 
                       '-[VCTransportSessionIDS setConnectionSetupPiggybackBlob:]', 
                       '-[VCTransportSessionIDS setConnectionSetupTime]', 
                       '-[VCTransportSessionIDS setDefaultLink:]', '-[VCTransportSessionIDS setDestination:]', 
                       '-[VCTransportSessionIDS setPiggybackBlobPreference]', 
                       '-[VCTransportSessionIDS setQuickRelayServerProvider:]', 
                       '-[VCTransportSessionIDS setSocket:]', '-[VCTransportSessionIDS socket]', 
                       '-[VCTransportSessionIDS start]', '-[VCTransportSessionIDS stop]', 
                       '-[VCTransportSessionIDS updateQualityIndicator:isIPv6:]', 
                       '-[VCTransportSessionLegacy IPPortForPrimaryConnectionOnLocalInterface:]', 
                       '-[VCTransportSessionLegacy NATType]', '-[VCTransportSessionLegacy allowsRelay]', 
                       '-[VCTransportSessionLegacy connectionCallback:isInitialConnection:]', 
                       '-[VCTransportSessionLegacy connectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:error:]', 
                       '-[VCTransportSessionLegacy connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:]', 
                       '-[VCTransportSessionLegacy connectionSetupRTTEstimate]', 
                       '-[VCTransportSessionLegacy connectionTypeForConnectionResult:]', 
                       '-[VCTransportSessionLegacy createInitiateRelayDictionaryForCall:primaryConnection:]', 
                       '-[VCTransportSessionLegacy createInitiateRelayDictionary]', 
                       '-[VCTransportSessionLegacy createRelayUpdateDictionary:]', 
                       '-[VCTransportSessionLegacy createSecondaryRelayDispatchTimer:callID:callerRequired:]', 
                       '-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]', 
                       '-[VCTransportSessionLegacy dealloc]', '-[VCTransportSessionLegacy delegate]', 
                       '-[VCTransportSessionLegacy deleteTCPTunnel]', '-[VCTransportSessionLegacy deregisterBasebandNotifications]', 
                       '-[VCTransportSessionLegacy destroySecondaryRelayDispatchTimer]', 
                       '-[VCTransportSessionLegacy detailedErrorCode]', 
                       '-[VCTransportSessionLegacy didEnableDuplication:activeConnection:]', 
                       '-[VCTransportSessionLegacy flushBasebandQueueForConnection:payloadInfoList:]', 
                       '-[VCTransportSessionLegacy generateConnectionData:forCallID:connectionDataSize:nonCellularCandidateTimeout:]', 
                       '-[VCTransportSessionLegacy getConnectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:queue:completionHandler:]', 
                       '-[VCTransportSessionLegacy getConnectionSetupData:withOptions:error:]', 
                       '-[VCTransportSessionLegacy getSignalStrength:signalRaw:signalGrade:]', 
                       '-[VCTransportSessionLegacy handleConnectionSetupDataChangeMessageDelivered]', 
                       '-[VCTransportSessionLegacy handleExchangedKey:result:]', 
                       '-[VCTransportSessionLegacy handleMediaReceivedOverPeerToPeerLink]', 
                       '-[VCTransportSessionLegacy handleMediaReceivedOverRelayLink]', 
                       '-[VCTransportSessionLegacy handleNewCandidates:version:]', 
                       '-[VCTransportSessionLegacy iceTimeoutInSeconds:]', 
                       '-[VCTransportSessionLegacy initWithCallID:]', '-[VCTransportSessionLegacy initialSecondaryRelaySetupDone]', 
                       '-[VCTransportSessionLegacy initiateRelayRequest]', 
                       '-[VCTransportSessionLegacy isCaller]', '-[VCTransportSessionLegacy isConnectedAndAllowAdditionalConnection]', 
                       '-[VCTransportSessionLegacy isHandoverSupported]', 
                       '-[VCTransportSessionLegacy isRemoteOSPreLion]', 
                       '-[VCTransportSessionLegacy localConnectionData]', 
                       '-[VCTransportSessionLegacy localParticipantID]', 
                       '-[VCTransportSessionLegacy localRelayConnectionData]', 
                       '-[VCTransportSessionLegacy localRelayRequestResponse]', 
                       '-[VCTransportSessionLegacy localRelayUpdate]', 
                       '-[VCTransportSessionLegacy loopbackSocketTunnel:receivedData:from:]', 
                       '-[VCTransportSessionLegacy networkStateDidChange]', 
                       '-[VCTransportSessionLegacy notifyDelegateToCancelRelay]', 
                       '-[VCTransportSessionLegacy pendingRelayCount]', 
                       '-[VCTransportSessionLegacy primaryConnectionChanged:oldPrimaryConnection:]', 
                       '-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]', 
                       '-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]', 
                       '-[VCTransportSessionLegacy processRemoteIPChange:]', 
                       '-[VCTransportSessionLegacy processRemoteIPChange:dataLength:remoteCandidateVersion:]', 
                       '-[VCTransportSessionLegacy receivedRealTimeData:fromParticipantID:]', 
                       '-[VCTransportSessionLegacy registerBasebandNotificationsForConnection:]', 
                       '-[VCTransportSessionLegacy remoteCallID]', '-[VCTransportSessionLegacy remoteConnectionData]', 
                       '-[VCTransportSessionLegacy remoteParticipantID]', 
                       '-[VCTransportSessionLegacy remoteRelayConnectionData]', 
                       '-[VCTransportSessionLegacy remoteRelayRequestResponse]', 
                       '-[VCTransportSessionLegacy remoteRelayUpdate]', 
                       '-[VCTransportSessionLegacy reportNetworkConditionsDegraded]', 
                       '-[VCTransportSessionLegacy resetICETimeoutToLongTimeout]', 
                       '-[VCTransportSessionLegacy resetLoopback]', '-[VCTransportSessionLegacy sessionID]', 
                       '-[VCTransportSessionLegacy setAllowsRelay:]', '-[VCTransportSessionLegacy setDelegate:]', 
                       '-[VCTransportSessionLegacy setForceRelay]', '-[VCTransportSessionLegacy setIdentity:]', 
                       '-[VCTransportSessionLegacy setInitialSecondaryRelaySetupDone:]', 
                       '-[VCTransportSessionLegacy setIsCaller:]', '-[VCTransportSessionLegacy setLocalConnectionData:]', 
                       '-[VCTransportSessionLegacy setLocalParticipantID:]', 
                       '-[VCTransportSessionLegacy setLocalRelayConnectionData:]', 
                       '-[VCTransportSessionLegacy setLocalRelayRequestResponse:]', 
                       '-[VCTransportSessionLegacy setLocalRelayUpdate:]', 
                       '-[VCTransportSessionLegacy setNATType:]', '-[VCTransportSessionLegacy setPendingRelayCount:]', 
                       '-[VCTransportSessionLegacy setRemoteCallID:]', 
                       '-[VCTransportSessionLegacy setRemoteConnectionData:]', 
                       '-[VCTransportSessionLegacy setRemoteParticipantID:]', 
                       '-[VCTransportSessionLegacy setRemoteRelayConnectionData:]', 
                       '-[VCTransportSessionLegacy setRemoteRelayRequestResponse:]', 
                       '-[VCTransportSessionLegacy setRemoteRelayUpdate:]', 
                       '-[VCTransportSessionLegacy setSessionID:]', '-[VCTransportSessionLegacy setupInitialSecondaryRelayWithCallbackRelayFlag:callID:]', 
                       '-[VCTransportSessionLegacy setupLoopbackWithConnectionType:]', 
                       '-[VCTransportSessionLegacy setupPendingSecondaryRelayWithNewPrimary:]', 
                       '-[VCTransportSessionLegacy setupSecondaryRelayForCall:callerRequired:]', 
                       '-[VCTransportSessionLegacy setupTransport]', '-[VCTransportSessionLegacy startConnectionWithBlob:useRelay:isInitialRelay:error:]', 
                       '-[VCTransportSessionLegacy start]', '-[VCTransportSessionLegacy stopLoopbackProc:]', 
                       '-[VCTransportSessionLegacy stopLoopback]', '-[VCTransportSessionLegacy stop]', 
                       '-[VCTransportSessionLegacy triggerInterfaceChange]', 
                       '-[VCTransportSessionLegacy updateQualityIndicator:isIPv6:]', 
                       '-[VCVTPWrapper dealloc]', '-[VCVTPWrapper init]', 
                       '-[VCVideoCaptureServer allocWithZone:]', '-[VCVideoCaptureServer appDelegate]', 
                       '-[VCVideoCaptureServer autorelease]', '-[VCVideoCaptureServer beginPIPToPreviewAnimation]', 
                       '-[VCVideoCaptureServer beginPreviewToPIPAnimation]', 
                       '-[VCVideoCaptureServer cameraSupportsWidth:height:]', 
                       '-[VCVideoCaptureServer captureCamera]', '-[VCVideoCaptureServer captureVideoWidth:height:frameRate:]', 
                       '-[VCVideoCaptureServer changeCameraToPendingSettingsWithReset:]', 
                       '-[VCVideoCaptureServer copyCameraColorInfo]', '-[VCVideoCaptureServer copyLocalScreenAttributesForVideoAttributes:]', 
                       '-[VCVideoCaptureServer copyLocalVideoAttributes]', 
                       '-[VCVideoCaptureServer copyWithZone:]', '-[VCVideoCaptureServer createVideoCaptureWithWidth:height:frameRate:useBackFacingCamera:]', 
                       '-[VCVideoCaptureServer dealloc]', '-[VCVideoCaptureServer deregisterForVideoFramesFromSource:withClient:]', 
                       '-[VCVideoCaptureServer endPIPToPreviewAnimation]', 
                       '-[VCVideoCaptureServer endPreviewToPIPAnimation]', 
                       '-[VCVideoCaptureServer enqueueFrameToQueueFront:frame:frameTime:]', 
                       '-[VCVideoCaptureServer handleAVCaptureError:error:]', 
                       '-[VCVideoCaptureServer handleScreenCaptureEvent:]', 
                       '-[VCVideoCaptureServer handleVideoCaptureEvent:]', 
                       '-[VCVideoCaptureServer init]', '-[VCVideoCaptureServer isClientRegisteredForVideoFrames:fromSource:]', 
                       '-[VCVideoCaptureServer localExpectedRatioForScreenOrientation:]', 
                       '-[VCVideoCaptureServer localScreenAttributesForVideoAttributes:]', 
                       '-[VCVideoCaptureServer localScreenRatioForScreenOrientation:]', 
                       '-[VCVideoCaptureServer localVideoAttributes]', 
                       '-[VCVideoCaptureServer onCaptureFrame:frameTime:preview:droppedFrames:isSwitching:cameraType:]', 
                       '-[VCVideoCaptureServer pausePreview]', '-[VCVideoCaptureServer previewVideoWidth:height:frameRate:]', 
                       '-[VCVideoCaptureServer reconnectClientLayerFront:]', 
                       '-[VCVideoCaptureServer registerBlocksForServer]', 
                       '-[VCVideoCaptureServer registerForFrames:unpausing:]', 
                       '-[VCVideoCaptureServer registerForVideoFramesFromSource:withClient:width:height:frameRate:unpausing:]', 
                       '-[VCVideoCaptureServer release]', '-[VCVideoCaptureServer resetCameraToPreviewSettingsForced:]', 
                       '-[VCVideoCaptureServer resizeFrame:]', '-[VCVideoCaptureServer retainCount]', 
                       '-[VCVideoCaptureServer retain]', '-[VCVideoCaptureServer screenCaptureFrame:frameTime:droppedFrames:orientation:]', 
                       '-[VCVideoCaptureServer sendSnapshotFromFrame:]', 
                       '-[VCVideoCaptureServer setAppDelegate:]', '-[VCVideoCaptureServer setCaptureCamera:]', 
                       '-[VCVideoCaptureServer setCaptureWidth:height:rate:]', 
                       '-[VCVideoCaptureServer setCaptureWidth:height:rate:forced:]', 
                       '-[VCVideoCaptureServer setCurrentFrameRate:]', 
                       '-[VCVideoCaptureServer setFrameRatePercentage:]', 
                       '-[VCVideoCaptureServer setFrameRatePercentage:percentage:]', 
                       '-[VCVideoCaptureServer setLocalScreenAttributes:]', 
                       '-[VCVideoCaptureServer setLocalVideoAttributes:]', 
                       '-[VCVideoCaptureServer setLocalVideoDestination:facing:]', 
                       '-[VCVideoCaptureServer startCaptureWithWidth:height:frameRate:unpausing:]', 
                       '-[VCVideoCaptureServer startPreviewUnpausing:]', 
                       '-[VCVideoCaptureServer stopCapture]', '-[VCVideoCaptureServer stopPreview]', 
                       '-[VCVideoRule compare:]', '-[VCVideoRule compareByPref:]', 
                       '-[VCVideoRule description]', '-[VCVideoRule fPref]', 
                       '-[VCVideoRule fRate]', '-[VCVideoRule iHeight]', 
                       '-[VCVideoRule iPayload]', '-[VCVideoRule iWidth]', 
                       '-[VCVideoRule initWithFrameWidth:frameHeight:frameRate:]', 
                       '-[VCVideoRule initWithFrameWidth:frameHeight:frameRate:payload:]', 
                       '-[VCVideoRule initWithFrameWidth:frameHeight:frameRate:payload:priority:]', 
                       '-[VCVideoRule isEqual:]', '-[VCVideoRule setFPref:]', 
                       '-[VCVideoRule setFrameWidth:frameHeight:frameRate:]', 
                       '-[VCVideoRule setToVideoRule:]', '-[VCVideoRuleCollectionKey copyWithZone:]', 
                       '-[VCVideoRuleCollectionKey description]', '-[VCVideoRuleCollectionKey encodingType]', 
                       '-[VCVideoRuleCollectionKey hash]', '-[VCVideoRuleCollectionKey initWithPayload:transportType:encodingType:]', 
                       '-[VCVideoRuleCollectionKey isEqual:]', '-[VCVideoRuleCollectionKey payload]', 
                       '-[VCVideoRuleCollectionKey transportType]', '-[VCVideoRuleCollections addSupportedPayload:]', 
                       '-[VCVideoRuleCollections addVideoRules:transportType:payload:encodingType:]', 
                       '-[VCVideoRuleCollections appendVideoRules:transportType:payload:encodingType:]', 
                       '-[VCVideoRuleCollections dealloc]', '-[VCVideoRuleCollections filterRules:byBitrateRule:]', 
                       '-[VCVideoRuleCollections getVideoRulesForTransport:payload:encodingType:]', 
                       '-[VCVideoRuleCollections init]', '-[VCVideoRuleCollections isPayloadSupported:]', 
                       '-[VCVideoRuleCollections removeVideoRulesWithWidth:height:transportType:encodingType:]', 
                       '-[VCVideoRuleCollections rules]', '-[VCVideoRuleCollections supportedPayloads]', 
                       '-[VCVideoRuleCollections supportedVideoRulesForBitrate:transportType:payload:encodingType:]', 
                       '-[VCVideoRuleCollections supportedVideoRulesSizesForBitrate:transportType:payload:encodingType:]', 
                       '-[VCVideoRuleCollections supportedVideoRulesSyncForTransportType:payload:encodingType:]', 
                       '-[VCVideoRuleCollections supportedVideoSizesForKey:]', 
                       '-[VCVideoRuleCollectionsCamera getBestFrameWidth:frameHeight:frameRate:encodingType:aspectRatio:forPayload:]', 
                       '-[VCVideoRuleCollectionsCamera getBestPreviewFrameWidth:frameHeight:frameRate:]', 
                       '-[VCVideoRuleCollectionsCamera isHiDefCapable]', 
                       '-[VCVideoRuleCollectionsCamera preferredAspectRatio]', 
                       '-[VCVideoRuleCollectionsCamera resetEncodingRulesForCameraIsHD:isWVGA:]', 
                       '-[VCVideoRuleCollectionsCamera setupH264CellularRules]', 
                       '-[VCVideoRuleCollectionsCamera useSoftFramerateSwitching]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded dealloc]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded hardwareConfiguration]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded initSupportedPayloads]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded initWithHardwareSettings:]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded preferredAspectRatio]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded setupH264Rules]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded setupH264WifiRulesWithEncodingType:formatList:formatListCount:preferredFormat:supportsHighDef:]', 
                       '-[VCVideoRuleCollectionsCameraEmbedded setupRules]', 
                       '-[VCVideoRuleCollectionsCameraMac computeDecodingScore]', 
                       '-[VCVideoRuleCollectionsCameraMac computeEncodingScore]', 
                       '-[VCVideoRuleCollectionsCameraMac initSupportedPayloads]', 
                       '-[VCVideoRuleCollectionsCameraMac initWithHardwareSettings:]', 
                       '-[VCVideoRuleCollectionsCameraMac resetEncodingRulesForCameraIsHD:isWVGA:]', 
                       '-[VCVideoRuleCollectionsCameraMac setupH264Rules]', 
                       '-[VCVideoRuleCollectionsCameraMac setupH264WifiRules]', 
                       '-[VCVideoRuleCollectionsCameraMac setupRules]', 
                       '-[VCVideoRuleCollectionsCameraMac useSoftFramerateSwitching]', 
                       '-[VCVideoRuleCollectionsScreen initForMacDecodingOnly]', 
                       '-[VCVideoRuleCollectionsScreen initSupportedPayloads]', 
                       '-[VCVideoRuleCollectionsScreen initWithHardwareSettings:]', 
                       '-[VCVideoRuleCollectionsScreen setupH264Rules]', 
                       '-[VCVideoRuleCollectionsScreen setupMacDecodingOnlyRules]', 
                       '-[VCVideoStream SRTPCipherSuiteForLTECipherSuite:]', 
                       '-[VCVideoStream cacheRemoteVideoFrame:]', '-[VCVideoStream checkPacketTimeouts]', 
                       '-[VCVideoStream collectVideoConfigMetrics:]', '-[VCVideoStream collectVideoStreamStartMetrics:]', 
                       '-[VCVideoStream configureVideoStreamWithConfiguration:error:]', 
                       '-[VCVideoStream dealloc]', '-[VCVideoStream delegate]', 
                       '-[VCVideoStream destroyVideoModules]', '-[VCVideoStream destroyVideoReceiver]', 
                       '-[VCVideoStream destroyVideoTransmitter]', '-[VCVideoStream generateStreamToken]', 
                       '-[VCVideoStream getCryptoSet:withMasterKey:]', 
                       '-[VCVideoStream getSRTPMasterKeyLength:]', '-[VCVideoStream initVideoTransmitter:]', 
                       '-[VCVideoStream init]', '-[VCVideoStream isSameSRTPConfig:]', 
                       '-[VCVideoStream isValid]', '-[VCVideoStream lock]', 
                       '-[VCVideoStream overrideConfigWithDefaults]', '-[VCVideoStream reportRTCPPackets:withCount:]', 
                       '-[VCVideoStream reportingVideoStreamEvent:]', '-[VCVideoStream requestLastDecodedFrame]', 
                       '-[VCVideoStream resetRtcpSendHeartBeatTimer:]', 
                       '-[VCVideoStream sendLastRemoteVideoFrame:]', '-[VCVideoStream setDelegate:]', 
                       '-[VCVideoStream setIsValid:]', '-[VCVideoStream setLocalParticipantInfo:networkSockets:withError:]', 
                       '-[VCVideoStream setPause:]', '-[VCVideoStream setRTPPayloads:numPayloads:withError:]', 
                       '-[VCVideoStream setRtcpEnabled:]', '-[VCVideoStream setRtcpSendInterval:]', 
                       '-[VCVideoStream setRtcpTimeOutEnabled:]', '-[VCVideoStream setRtcpTimeOutInterval:]', 
                       '-[VCVideoStream setRtpTimeOutEnabled:]', '-[VCVideoStream setRtpTimeOutInterval:]', 
                       '-[VCVideoStream setState:]', '-[VCVideoStream setStreamConfig:]', 
                       '-[VCVideoStream setStreamConfig:withError:]', '-[VCVideoStream setStreamDirection:]', 
                       '-[VCVideoStream setupRTPPayloads]', '-[VCVideoStream setupRTPWithIDSDestination:error:]', 
                       '-[VCVideoStream setupRTPWithIPInfo:error:]', '-[VCVideoStream setupRTPWithLocalParticipantInfo:error:]', 
                       '-[VCVideoStream setupRTPWithSockets:error:]', '-[VCVideoStream setupSRTP:forVideo:]', 
                       '-[VCVideoStream startRtcpSendHeartBeat]', '-[VCVideoStream startSynchronization:]', 
                       '-[VCVideoStream start]', '-[VCVideoStream state]', 
                       '-[VCVideoStream stopRtcpSendHeartBeat]', '-[VCVideoStream stopSynchronization]', 
                       '-[VCVideoStream stop]', '-[VCVideoStream streamConfig]', 
                       '-[VCVideoStream streamDirection]', '-[VCVideoStream streamToken]', 
                       '-[VCVideoStream unlock]', '-[VCVideoStream updateVideoConfig:]', 
                       '-[VCVideoStream updateVideoReceiver:]', '-[VCVideoStream vcVideoStreamReceiver:didReceiveRemoteFrame:atTime:newVideoAttributes:isFirstFrame:]', 
                       '-[VCVideoStream vcVideoStreamReceiver:downlinkQualityDidChange:]', 
                       '-[VCVideoStream vcVideoStreamReceiver:receivedTMMBR:]', 
                       '-[VCVideoStream vcVideoStreamReceiverRequestKeyFrame:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl calculateNOWRD:time:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl className]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl description]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl doRateControlWithTime:roundTripTime:packetLossRate:operatingTierIndex:averageBitrate:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl init]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl lossEventCountThresholdForBitrate:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl lossEventCount]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl nowrdAcc]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl nowrdShort]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl nowrd]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl owrd]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl printRateControlFullInfoWithLogDump:time:videoStall:videoFrozenDuration:averageTargetBitrate:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl rampDownTier]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl rampUpTier]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl rateControlInterval]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl resetLossEventBuffer]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl setMaxTierIndex:minTierIndex:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl setRateControlInterval:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl shouldRampDown]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl shouldRampUp]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl stateChange:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl stateEnter]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl stateExit]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl state]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl targetBitrate]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl updatePacketLossRate:time:]', 
                       '-[VCVideoStreamNOWRDLossEventRateControl updateRTPReceiveWithTimestamp:sampleRate:time:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl className]', 
                       '-[VCVideoStreamOWRDLossEventRateControl description]', 
                       '-[VCVideoStreamOWRDLossEventRateControl doRateControlWithTime:roundTripTime:packetLossRate:operatingTierIndex:averageBitrate:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl init]', 
                       '-[VCVideoStreamOWRDLossEventRateControl lossEventCountThresholdForBitrate:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl lossEventCount]', 
                       '-[VCVideoStreamOWRDLossEventRateControl nowrdAcc]', 
                       '-[VCVideoStreamOWRDLossEventRateControl nowrdShort]', 
                       '-[VCVideoStreamOWRDLossEventRateControl nowrd]', 
                       '-[VCVideoStreamOWRDLossEventRateControl owrd]', 
                       '-[VCVideoStreamOWRDLossEventRateControl printRateControlFullInfoWithLogDump:time:videoStall:videoFrozenDuration:averageTargetBitrate:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl rampDownTier]', 
                       '-[VCVideoStreamOWRDLossEventRateControl rampUpTier]', 
                       '-[VCVideoStreamOWRDLossEventRateControl rateControlInterval]', 
                       '-[VCVideoStreamOWRDLossEventRateControl resetLossEventBuffer]', 
                       '-[VCVideoStreamOWRDLossEventRateControl setMaxTierIndex:minTierIndex:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl setRateControlInterval:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl shouldRampDown]', 
                       '-[VCVideoStreamOWRDLossEventRateControl shouldRampUp]', 
                       '-[VCVideoStreamOWRDLossEventRateControl stateChange:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl stateEnter]', 
                       '-[VCVideoStreamOWRDLossEventRateControl stateExit]', 
                       '-[VCVideoStreamOWRDLossEventRateControl state]', 
                       '-[VCVideoStreamOWRDLossEventRateControl targetBitrate]', 
                       '-[VCVideoStreamOWRDLossEventRateControl updatePacketLossRate:time:]', 
                       '-[VCVideoStreamOWRDLossEventRateControl updateRTPReceiveWithTimestamp:sampleRate:time:]', 
                       '-[VCVideoStreamRTTPLRRateControl className]', '-[VCVideoStreamRTTPLRRateControl description]', 
                       '-[VCVideoStreamRTTPLRRateControl doRateControlWithTime:roundTripTime:packetLossRate:operatingTierIndex:averageBitrate:]', 
                       '-[VCVideoStreamRTTPLRRateControl init]', '-[VCVideoStreamRTTPLRRateControl nowrdAcc]', 
                       '-[VCVideoStreamRTTPLRRateControl nowrdShort]', 
                       '-[VCVideoStreamRTTPLRRateControl nowrd]', '-[VCVideoStreamRTTPLRRateControl owrd]', 
                       '-[VCVideoStreamRTTPLRRateControl printRateControlFullInfoWithLogDump:time:videoStall:videoFrozenDuration:averageTargetBitrate:]', 
                       '-[VCVideoStreamRTTPLRRateControl rampDownTier]', 
                       '-[VCVideoStreamRTTPLRRateControl rampUpTier]', 
                       '-[VCVideoStreamRTTPLRRateControl rateControlInterval]', 
                       '-[VCVideoStreamRTTPLRRateControl setMaxTierIndex:minTierIndex:]', 
                       '-[VCVideoStreamRTTPLRRateControl setRateControlInterval:]', 
                       '-[VCVideoStreamRTTPLRRateControl shouldRampDown]', 
                       '-[VCVideoStreamRTTPLRRateControl shouldRampUp]', 
                       '-[VCVideoStreamRTTPLRRateControl stateChange:]', 
                       '-[VCVideoStreamRTTPLRRateControl stateEnter]', 
                       '-[VCVideoStreamRTTPLRRateControl stateExit]', '-[VCVideoStreamRTTPLRRateControl state]', 
                       '-[VCVideoStreamRTTPLRRateControl targetBitrate]', 
                       '-[VCVideoStreamRTTPLRRateControl updateRTPReceiveWithTimestamp:sampleRate:time:]', 
                       '-[VCVideoStreamRateAdaptation averageReceivedBitrate]', 
                       '-[VCVideoStreamRateAdaptation className]', '-[VCVideoStreamRateAdaptation dealloc]', 
                       '-[VCVideoStreamRateAdaptation initWithRTPHandle:reportingAgent:receiverStats:]', 
                       '-[VCVideoStreamRateAdaptation isOperatingAtMaxBitrate]', 
                       '-[VCVideoStreamRateAdaptation isOperatingAtMinBitrate]', 
                       '-[VCVideoStreamRateAdaptation maxOWRD]', '-[VCVideoStreamRateAdaptation nowrdAcc]', 
                       '-[VCVideoStreamRateAdaptation nowrdShort]', '-[VCVideoStreamRateAdaptation nowrd]', 
                       '-[VCVideoStreamRateAdaptation operatingBitrate]', 
                       '-[VCVideoStreamRateAdaptation owrd]', '-[VCVideoStreamRateAdaptation packetLossPercentage]', 
                       '-[VCVideoStreamRateAdaptation receivedTMMBN:]', 
                       '-[VCVideoStreamRateAdaptation reportingVideoStreamEvent:]', 
                       '-[VCVideoStreamRateAdaptation roundTripTime]', 
                       '-[VCVideoStreamRateAdaptation runVideoStreamRateAdaptation]', 
                       '-[VCVideoStreamRateAdaptation scheduleTMMBR:]', 
                       '-[VCVideoStreamRateAdaptation sendTmmbrBitrate]', 
                       '-[VCVideoStreamRateAdaptation setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:]', 
                       '-[VCVideoStreamRateAdaptation setMaxOWRD:]', '-[VCVideoStreamRateAdaptation setOperatingBitrate:]', 
                       '-[VCVideoStreamRateAdaptation updateRTPReceiveWithTimestamp:sampleRate:time:]', 
                       '-[VCVideoStreamRateAdaptation updateVideoStall:withStallDuration:]', 
                       '-[VCVideoStreamRateController className]', '-[VCVideoStreamRateController createLogDumpFile]', 
                       '-[VCVideoStreamRateController dealloc]', '-[VCVideoStreamRateController doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageBitrate:]', 
                       '-[VCVideoStreamRateController init]', '-[VCVideoStreamRateController maxBitrate]', 
                       '-[VCVideoStreamRateController maxTierIndex:]', 
                       '-[VCVideoStreamRateController minBitrate]', '-[VCVideoStreamRateController minTierIndex:]', 
                       '-[VCVideoStreamRateController nowrdAcc]', '-[VCVideoStreamRateController nowrdShort]', 
                       '-[VCVideoStreamRateController nowrd]', '-[VCVideoStreamRateController owrd]', 
                       '-[VCVideoStreamRateController releaseLogDumpFile]', 
                       '-[VCVideoStreamRateController setMaxTargetBitrate:minTargetBitrate:]', 
                       '-[VCVideoStreamRateController setOperatingTierIndexWithBitrate:]', 
                       '-[VCVideoStreamRateController setRateControlInterval:]', 
                       '-[VCVideoStreamRateController targetBitrate]', 
                       '-[VCVideoStreamRateController updateAverageTargetBitrate:interval:]', 
                       '-[VCVideoStreamRateController updateRTPReceiveWithTimestamp:sampleRate:time:]', 
                       '-[VCVideoStreamRateController updateVideoStall:withStallDuration:]', 
                       '-[VCVideoStreamReceiver createDecodeSession:]', 
                       '-[VCVideoStreamReceiver dealloc]', '-[VCVideoStreamReceiver decodeBuffer:size:timestamp:hostTime:]', 
                       '-[VCVideoStreamReceiver decodeFrame:showFrame:]', 
                       '-[VCVideoStreamReceiver delegate]', '-[VCVideoStreamReceiver gatherRealtimeStats:]', 
                       '-[VCVideoStreamReceiver handleRemoteVideoAttributesChange:]', 
                       '-[VCVideoStreamReceiver initWithRTP:delegate:reportingAgent:]', 
                       '-[VCVideoStreamReceiver lastReceivedVideoRTCPPacketTime]', 
                       '-[VCVideoStreamReceiver lastReceivedVideoRTPPacketTime]', 
                       '-[VCVideoStreamReceiver networkReceivePackets]', 
                       '-[VCVideoStreamReceiver pauseVideo]', '-[VCVideoStreamReceiver processVideoRTCP]', 
                       '-[VCVideoStreamReceiver processVideoRTP]', '-[VCVideoStreamReceiver remoteVideoOrientation]', 
                       '-[VCVideoStreamReceiver reportingVideoStreamEvent:]', 
                       '-[VCVideoStreamReceiver roundTripTime]', '-[VCVideoStreamReceiver rtcpSendIntervalElapsed]', 
                       '-[VCVideoStreamReceiver scheduleVideoDecode:schedule_n:]', 
                       '-[VCVideoStreamReceiver setDelegate:]', '-[VCVideoStreamReceiver setEnableCVO:cvoExtensionID:]', 
                       '-[VCVideoStreamReceiver setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:]', 
                       '-[VCVideoStreamReceiver setRemoteVideoOrientation:]', 
                       '-[VCVideoStreamReceiver setRoundTripTime:]', '-[VCVideoStreamReceiver setSyncSource:]', 
                       '-[VCVideoStreamReceiver showDecodedFrame:atTime:]', 
                       '-[VCVideoStreamReceiver startNetworkReceiveThread]', 
                       '-[VCVideoStreamReceiver startSynchronization:]', 
                       '-[VCVideoStreamReceiver startVideo]', '-[VCVideoStreamReceiver stopNetworkReceiveThread]', 
                       '-[VCVideoStreamReceiver stopSynchronization]', 
                       '-[VCVideoStreamReceiver stopVideo]', '-[VCVideoStreamReceiver syncSource]', 
                       '-[VCVideoStreamReceiver teardownDecodeSession:]', 
                       '-[VCVideoStreamReceiver updateSequenceNumber:]', 
                       '-[VCVideoStreamReceiver updateVideoStallStatus:]', 
                       '-[VCVideoStreamTransmitter avConferencePreviewError:]', 
                       '-[VCVideoStreamTransmitter clientCaptureRule]', 
                       '-[VCVideoStreamTransmitter dealloc]', '-[VCVideoStreamTransmitter encodeVideoFrame:time:cameraStatusBits:]', 
                       '-[VCVideoStreamTransmitter forceKeyFrameProperties]', 
                       '-[VCVideoStreamTransmitter gatherRealtimeStats:]', 
                       '-[VCVideoStreamTransmitter getBestCaptureSizeForEncodingSize:]', 
                       '-[VCVideoStreamTransmitter initVideoCompressionWithWidth:height:bitrate:keyFrameIntervalDuration:]', 
                       '-[VCVideoStreamTransmitter initWithResolution:framerate:codecType:maxBitrate:minBitrate:keyFrameInterval:enableCVO:cvoExtensionID:recommendedMTU:rtpHandle:reportingAgent:]', 
                       '-[VCVideoStreamTransmitter isKeyFrame:]', '-[VCVideoStreamTransmitter lastFrameTime]', 
                       '-[VCVideoStreamTransmitter lastKeyFrameSentTime]', 
                       '-[VCVideoStreamTransmitter lastRTPTimestamp]', 
                       '-[VCVideoStreamTransmitter limitCompressionSessionDataRate:]', 
                       '-[VCVideoStreamTransmitter onCaptureFrame:frameTime:droppedFrames:cameraStatusBits:]', 
                       '-[VCVideoStreamTransmitter prependSPSPPS:dataPointer:]', 
                       '-[VCVideoStreamTransmitter reportingVideoStreamEvent:]', 
                       '-[VCVideoStreamTransmitter requestKeyFrameGeneration]', 
                       '-[VCVideoStreamTransmitter sendFrame:cameraStatusBits:]', 
                       '-[VCVideoStreamTransmitter setLastFrameTime:]', 
                       '-[VCVideoStreamTransmitter setLastKeyFrameSentTime:]', 
                       '-[VCVideoStreamTransmitter setLastRTPTimestamp:]', 
                       '-[VCVideoStreamTransmitter setTemporaryMaximumBitrate:]', 
                       '-[VCVideoStreamTransmitter sizeForVideoResolution:]', 
                       '-[VCVideoStreamTransmitter startVideo]', '-[VCVideoStreamTransmitter stopVideo]', 
                       '-[VCVideoStreamTransmitter transmitEncodedVideoFrame:size:timestamp:hostTime:cameraStatusBits:]', 
                       '-[VCVideoStreamTransmitter transmitVideoPackets:packetSizes:startPacket:packetCount:lastGroup:timestamp:hostTime:cameraStatusBits:bytesSent:]', 
                       '-[VCVirtualTTYDevice canProcessAudio]', '-[VCVirtualTTYDevice dealloc]', 
                       '-[VCVirtualTTYDevice delegate]', '-[VCVirtualTTYDevice deviceRole]', 
                       '-[VCVirtualTTYDevice initWithMode:]', '-[VCVirtualTTYDevice isValid]', 
                       '-[VCVirtualTTYDevice lock]', '-[VCVirtualTTYDevice onCaptureSound:numBytes:numSamples:timeStamp:timeStampDelta:bufferedSamples:hostTime:averagePower:voiceActivity:]', 
                       '-[VCVirtualTTYDevice onPlaySound:numBytes:numSamples:timeStamp:averagePower:]', 
                       '-[VCVirtualTTYDevice sendCharater:]', '-[VCVirtualTTYDevice setCanProcessAudio:]', 
                       '-[VCVirtualTTYDevice setDelegate:]', '-[VCVirtualTTYDevice setDeviceRole:]', 
                       '-[VCVirtualTTYDevice setIsValid:]', '-[VCVirtualTTYDevice setPause:]', 
                       '-[VCVirtualTTYDevice setStreamConfig:withError:]', 
                       '-[VCVirtualTTYDevice startVirtualTTYWithCompletionHandler:]', 
                       '-[VCVirtualTTYDevice start]', '-[VCVirtualTTYDevice stopAudioWithCompletionHandler:]', 
                       '-[VCVirtualTTYDevice stop]', '-[VCVirtualTTYDevice unlock]', 
                       '-[VCVoIPRelay audioFormat]', '-[VCVoIPRelay blockSizeSamples]', 
                       '-[VCVoIPRelay dealloc]', '-[VCVoIPRelay initWithCaptureBlock:renderBlock:]', 
                       '-[VCVoIPRelay startWithCompletionHandler:]', '-[VCVoIPRelay stopWithCompletionHandler:]', 
                       '-[VCVoIPRelayInternal audioFormat]', '-[VCVoIPRelayInternal blockSizeSamples]', 
                       '-[VCVoIPRelayInternal canProcessAudio]', '-[VCVoIPRelayInternal clientCaptureBlock]', 
                       '-[VCVoIPRelayInternal clientRenderBlock]', '-[VCVoIPRelayInternal dealloc]', 
                       '-[VCVoIPRelayInternal deviceRole]', '-[VCVoIPRelayInternal onCaptureSound:numBytes:numSamples:timeStamp:timeStampDelta:bufferedSamples:hostTime:averagePower:voiceActivity:]', 
                       '-[VCVoIPRelayInternal onPlaySound:numBytes:numSamples:timeStamp:averagePower:]', 
                       '-[VCVoIPRelayInternal setAudioFormat:]', '-[VCVoIPRelayInternal setBlockSizeSamples:]', 
                       '-[VCVoIPRelayInternal setCanProcessAudio:]', '-[VCVoIPRelayInternal setClientCaptureBlock:]', 
                       '-[VCVoIPRelayInternal setClientRenderBlock:]', 
                       '-[VCWCMClient connectionQueue]', '-[VCWCMClient connection]', 
                       '-[VCWCMClient dealloc]', '-[VCWCMClient init]', 
                       '-[VCWCMClient setWcmClientDelegate:]', '-[VCWCMClient startWCMClient]', 
                       '-[VCWCMClient stopWCMClient]', '-[VCWCMClient wcmClientDelegate]', 
                       '-[VCWeakObjectHolder dealloc]', '-[VCWeakObjectHolder initWithObject:]', 
                       '-[VCWeakObjectHolder init]', '-[VCWeakObjectHolder strong]', 
                       '-[VideoAttributes cameraSwitching]', '-[VideoAttributes camera]', 
                       '-[VideoAttributes contentsRect]', '-[VideoAttributes copyEncodedDictionary]', 
                       '-[VideoAttributes copyWithZone:]', '-[VideoAttributes decodeFromNSDictionary:]', 
                       '-[VideoAttributes description]', '-[VideoAttributes encodeWithCoder:]', 
                       '-[VideoAttributes initWithCameraStatusBits:aspectRatio:contentsRect:]', 
                       '-[VideoAttributes initWithCoder:]', '-[VideoAttributes initWithEncodedDictionary:]', 
                       '-[VideoAttributes init]', '-[VideoAttributes isEqualToVideoAttributes:]', 
                       '-[VideoAttributes orientation]', '-[VideoAttributes ratio]', 
                       '-[VideoAttributes setCamera:]', '-[VideoAttributes setCameraSwitching:]', 
                       '-[VideoAttributes setContentsRect:]', '-[VideoAttributes setOrientation:]', 
                       '-[VideoAttributes setRatio:]', '-[VideoAttributes setVideoSourceScreen:]', 
                       '-[VideoAttributes videoSourceScreen]', '-[VideoConference callMetadataForCallID:]', 
                       '-[VideoConference canProcessAudio]', '-[VideoConference cancelCallID:]', 
                       '-[VideoConference chatMode]', '-[VideoConference cleanupManager]', 
                       '-[VideoConference cleanupQueues]', '-[VideoConference conferenceCaptureRule]', 
                       '-[VideoConference conferenceOperatingMode]', '-[VideoConference conferenceVolume]', 
                       '-[VideoConference connectionBlobForParticipantID:callID:block:queue:caller:]', 
                       '-[VideoConference connectionBlobForParticipantID:callID:error:]', 
                       '-[VideoConference currentFocus]', '-[VideoConference dealloc]', 
                       '-[VideoConference delegate]', '-[VideoConference deviceRole]', 
                       '-[VideoConference didReceiveCaptions:remoteClient:]', 
                       '-[VideoConference disableVAD]', '-[VideoConference downstreamBandwidth]', 
                       '-[VideoConference forceNoICE:]', '-[VideoConference getIsAudioPaused:callID:error:]', 
                       '-[VideoConference getIsVideoPaused:callID:error:]', 
                       '-[VideoConference handleCellTechChange:cellularMaxPktLen:]', 
                       '-[VideoConference hasMic]', '-[VideoConference init]', 
                       '-[VideoConference initializeNewCallWithDeviceRole:]', 
                       '-[VideoConference inputMeterLevel]', '-[VideoConference inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:block:queue:caller:]', 
                       '-[VideoConference inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]', 
                       '-[VideoConference isFocus]', '-[VideoConference isGKVoiceChat]', 
                       '-[VideoConference isInputFrequencyMeteringEnabled]', 
                       '-[VideoConference isInputMeteringEnabled]', '-[VideoConference isMicrophoneMuted]', 
                       '-[VideoConference isOutputFrequencyMeteringEnabled]', 
                       '-[VideoConference isOutputMeteringEnabled]', '-[VideoConference isSpeakerPhoneEnabled]', 
                       '-[VideoConference isUsingSuppression]', '-[VideoConference isValid]', 
                       '-[VideoConference lastActiveCall]', '-[VideoConference localBitrateForCallID:]', 
                       '-[VideoConference localFrameHeight]', '-[VideoConference localFrameWidth]', 
                       '-[VideoConference localFramerateForCallID:]', '-[VideoConference localPacketLossRateForCallID:]', 
                       '-[VideoConference natTypeForCallSessions:]', '-[VideoConference natType]', 
                       '-[VideoConference networkQualityForCallID:]', '-[VideoConference newSessionWithDeviceRole:]', 
                       '-[VideoConference notifyDelegateOfLocalVariablesChange]', 
                       '-[VideoConference onCaptureSound:numBytes:numSamples:timeStamp:timeStampDelta:bufferedSamples:hostTime:averagePower:voiceActivity:]', 
                       '-[VideoConference onPlaySound:numBytes:numSamples:timeStamp:averagePower:]', 
                       '-[VideoConference outputMeterLevel]', '-[VideoConference packetLossRateForCallID:]', 
                       '-[VideoConference packetsPerBundle]', '-[VideoConference powerFloatToInt:]', 
                       '-[VideoConference powerIntToFloat:]', '-[VideoConference preferredCodec]', 
                       '-[VideoConference processRelayRequestResponse:responseDict:didOriginateRequest:]', 
                       '-[VideoConference processRelayUpdate:updateDict:didOriginateRequest:]', 
                       '-[VideoConference processRemoteIPChange:callID:]', 
                       '-[VideoConference qualityDelegate]', '-[VideoConference remoteBitrateForCallID:]', 
                       '-[VideoConference remoteCancelledCallID:]', '-[VideoConference remoteFrameSizeForCallID:]', 
                       '-[VideoConference remoteFramerateForCallID:]', 
                       '-[VideoConference remotePacketLossRateForCallID:]', 
                       '-[VideoConference requiresWifi]', '-[VideoConference roundTripTimeForCallID:]', 
                       '-[VideoConference sendARPLData:toCallID:]', '-[VideoConference sendData:toCallID:encrypted:]', 
                       '-[VideoConference setActive:]', '-[VideoConference setCallReport:withReport:]', 
                       '-[VideoConference setCallReportProtobuf:withProtobufData:forMetricID:]', 
                       '-[VideoConference setCanProcessAudio:]', '-[VideoConference setChatMode:]', 
                       '-[VideoConference setConferenceOperatingMode:]', 
                       '-[VideoConference setConferenceVolume:]', '-[VideoConference setCurrentFocus:]', 
                       '-[VideoConference setDelegate:]', '-[VideoConference setDisableVAD:]', 
                       '-[VideoConference setDownstreamBandwidth:]', '-[VideoConference setEnableSpeakerPhone:]', 
                       '-[VideoConference setHasMic:]', '-[VideoConference setInputFrequencyMeteringEnabled:]', 
                       '-[VideoConference setInputMeteringEnabled:]', '-[VideoConference setIsFocus:]', 
                       '-[VideoConference setIsGKVoiceChat:]', '-[VideoConference setIsUsingSuppression:]', 
                       '-[VideoConference setIsValid:]', '-[VideoConference setLastActiveCall:]', 
                       '-[VideoConference setMicrophoneMuted:]', '-[VideoConference setOutputFrequencyMeteringEnabled:]', 
                       '-[VideoConference setOutputMeteringEnabled:]', 
                       '-[VideoConference setPacketsPerBundle:]', '-[VideoConference setPauseAudio:callID:error:]', 
                       '-[VideoConference setPauseVideo:callID:error:]', 
                       '-[VideoConference setPeerCN:callID:]', '-[VideoConference setPeerProtocolVersion:forCallID:]', 
                       '-[VideoConference setPreferredCodec:]', '-[VideoConference setQualityDelegate:]', 
                       '-[VideoConference setRemoteVideoDestination:facing:]', 
                       '-[VideoConference setRequiresWifi:]', '-[VideoConference setSendAudio:forCallID:]', 
                       '-[VideoConference setSessionID:callID:]', '-[VideoConference setShouldPrioritizeParticipantIDForSIPInvite:]', 
                       '-[VideoConference setShouldTimeoutPackets:]', '-[VideoConference setSpeakingDelegate:]', 
                       '-[VideoConference setTalkingPeersLimit:]', '-[VideoConference setTransportType:]', 
                       '-[VideoConference setUpstreamBandwidth:]', '-[VideoConference setUseCompressedConnectionData:]', 
                       '-[VideoConference setUseViceroyBlobFormat:]', '-[VideoConference setupNATObserver]', 
                       '-[VideoConference shouldPrioritizeParticipantIDForSIPInvite]', 
                       '-[VideoConference shouldReinitializeCallWithDuration:forCallID:]', 
                       '-[VideoConference shouldSendAudioForCallID:]', 
                       '-[VideoConference shouldTimeoutPackets]', '-[VideoConference speakingDelegate]', 
                       '-[VideoConference startConnectionWithParticipantID:callID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:]', 
                       '-[VideoConference startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]', 
                       '-[VideoConference startConnectionWithParticipantID:callID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:]', 
                       '-[VideoConference statsForCallID:]', '-[VideoConference stopAllCalls:]', 
                       '-[VideoConference stopCallID:]', '-[VideoConference talkingPeersLimit]', 
                       '-[VideoConference transportType]', '-[VideoConference updateCapabilities:forCallID:]', 
                       '-[VideoConference updatedConnectedPeers:]', '-[VideoConference updatedMutedPeers:forParticipantID:]', 
                       '-[VideoConference upstreamBandwidth]', '-[VideoConference useCompressedConnectionData]', 
                       '-[VideoConference useViceroyBlobFormat]', '-[VideoConference vcAudioPowerLevelMonitor:isAudioBelowThreshold:]', 
                       '-[VideoConference warmupForCall]', '-[VideoConference(AudioProcessing) calculateMixingArrays:talkingMask:]', 
                       '-[VideoConference(AudioProcessing) calculateTalkingMaskAtTimeStamp:samples:numBytes:numSamples:]', 
                       '-[VideoConference(AudioProcessing) captureAsFocus:numBytes:numSamples:timeStamp:timeStampDelta:averagePower:]', 
                       '-[VideoConference(AudioProcessing) captureAsFocusClient:numBytes:numSamples:timeStamp:averagePower:]', 
                       '-[VideoConference(AudioProcessing) captureMeshMode:numBytes:numSamples:timeStamp:bufferedSamples:hostTime:]', 
                       '-[VideoConference(AudioProcessing) pruneQuietestPeers:talking:mask:meters:]', 
                       '-[VideoConference(AudioProcessing) pullDecodedAsFocus:timestamp:numBytes:numSamples:]', 
                       '-[VideoConference(AudioProcessing) pullDecodedAsFocusClient:timestamp:numBytes:numSamples:]', 
                       '-[VideoConference(AudioProcessing) pullDecodedMeshMode:timestamp:numBytes:numSamples:]', 
                       '-[VideoConference(AudioProcessing) recvSamplesForSession:samples:numBytes:numSamples:storeTimestamp:]', 
                       '-[VideoConference(AudioProcessing) updateMeter:forParticipant:atIndex:]', 
                       '-[VideoConference(AudioProcessing) updateMeters:]', 
                       '-[VideoConference(AudioProcessing) updateSpeaking:timeStamp:]', 
                       '-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]', 
                       '-[VideoConference(NATDelegate) triggerInterfaceChange]', 
                       '-[VideoConference(PrivateMethods) cancelCallID:error:]', 
                       '-[VideoConference(PrivateMethods) cleanupProc:]', 
                       '-[VideoConference(PrivateMethods) cleanupSession:didRemoteCancel:]', 
                       '-[VideoConference(PrivateMethods) cleanupSession:withDelay:]', 
                       '-[VideoConference(PrivateMethods) defaultCleanupSession:]', 
                       '-[VideoConference(PrivateMethods) markUnfinishedSessions]', 
                       '-[VideoConference(PrivateMethods) rdlock]', '-[VideoConference(PrivateMethods) setPauseAudio:]', 
                       '-[VideoConference(PrivateMethods) setPauseVideo:]', 
                       '-[VideoConference(PrivateMethods) stopCallID:didRemoteCancel:error:]', 
                       '-[VideoConference(PrivateMethods) threadSafeCleanupSession:]', 
                       '-[VideoConference(PrivateMethods) tryrdlock]', 
                       '-[VideoConference(PrivateMethods) unlock]', '-[VideoConference(PrivateMethods) wrlock]', 
                       '-[VideoConference(SIPDispatch) sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:]', 
                       '-[VideoConference(SessionDelegate) currentCameraID]', 
                       '-[VideoConference(SessionDelegate) didChangeLocalVariablesForSession:]', 
                       '-[VideoConference(SessionDelegate) didDetectBandwidth:upstreamBandwidth:downstreamBandwidth:]', 
                       '-[VideoConference(SessionDelegate) remoteAudioDidPause:callID:]', 
                       '-[VideoConference(SessionDelegate) remoteVideoDidPause:callID:]', 
                       '-[VideoConference(SessionDelegate) session:cancelRelayRequest:]', 
                       '-[VideoConference(SessionDelegate) session:changeVideoRulesToCaptureRule:encodeRule:featuresListString:]', 
                       '-[VideoConference(SessionDelegate) session:cleanUpWithDelay:error:]', 
                       '-[VideoConference(SessionDelegate) session:connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:callID:]', 
                       '-[VideoConference(SessionDelegate) session:didChangeRemoteScreenAttributes:]', 
                       '-[VideoConference(SessionDelegate) session:didChangeVideoRule:]', 
                       '-[VideoConference(SessionDelegate) session:didPauseAudio:error:]', 
                       '-[VideoConference(SessionDelegate) session:didPauseVideo:error:]', 
                       '-[VideoConference(SessionDelegate) session:didReceiveARPLData:fromCallID:]', 
                       '-[VideoConference(SessionDelegate) session:didReceiveData:messageType:withCallID:]', 
                       '-[VideoConference(SessionDelegate) session:didSeeThermalChange:]', 
                       '-[VideoConference(SessionDelegate) session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:]', 
                       '-[VideoConference(SessionDelegate) session:didStopVideoIO:error:]', 
                       '-[VideoConference(SessionDelegate) session:didStopWithError:]', 
                       '-[VideoConference(SessionDelegate) session:initiateRelayRequest:]', 
                       '-[VideoConference(SessionDelegate) session:localAudioEnabled:withCallID:error:]', 
                       '-[VideoConference(SessionDelegate) session:localIPChange:withCallID:]', 
                       '-[VideoConference(SessionDelegate) session:packMeters:withLength:]', 
                       '-[VideoConference(SessionDelegate) session:receivedNoPacketsForSeconds:]', 
                       '-[VideoConference(SessionDelegate) session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:]', 
                       '-[VideoConference(SessionDelegate) session:remoteAudioEnabled:withCallID:]', 
                       '-[VideoConference(SessionDelegate) session:remoteCallingModeChanged:withCallID:]', 
                       '-[VideoConference(SessionDelegate) session:remoteMediaStalled:]', 
                       '-[VideoConference(SessionDelegate) session:sendRelayResponse:]', 
                       '-[VideoConference(SessionDelegate) session:startVideoIO:captureRule:isUnpausing:]', 
                       '-[VideoConference(SessionDelegate) session:startVideoReceive:]', 
                       '-[VideoConference(SessionDelegate) session:startVideoSend:captureRule:isUnpausing:]', 
                       '-[VideoConference(SessionDelegate) session:stopVideoReceive:isPausing:]', 
                       '-[VideoConference(SessionDelegate) session:withCallID:networkHint:]', 
                       '-[VideoConference(SessionDelegate) session:withCallID:videoIsDegraded:isRemote:]', 
                       '-[VideoConference(SessionDelegate) setBWEOptions:UseNewBWEMode:FakeLargeFrameMode:ProbingSenderLog:]', 
                       '-[VideoConference(SessionDelegate) stopVideoSend:error:]', 
                       '-[VideoConference(SessionInfo) callIDForOpenSessionWithParticipantID:]', 
                       '-[VideoConference(SessionInfo) conferenceMatchesSourceDestinationInfo:]', 
                       '-[VideoConference(SessionInfo) hasSessionWaitingForSIPInvite]', 
                       '-[VideoConference(SessionInfo) loopbackSessionWaitingForSIPInvite]', 
                       '-[VideoConference(SessionInfo) matchesCallID:]', 
                       '-[VideoConference(SessionInfo) matchesOpenSessionForParticipantID:]', 
                       '-[VideoConference(SessionInfo) matchesParticipantID:]', 
                       '-[VideoConference(SessionInfo) openSessionForParticipant:]', 
                       '-[VideoConference(SessionInfo) sessionForIncomingParticipantID:]', 
                       '-[VideoConference(SessionInfo) sessionForParticipantID:]', 
                       '-[VideoConference(SessionInfo) sessionForSourceDestinationInfo:]', 
                       '-[VideoConference(SessionInfo) stateForCallID:]', 
                       '-[VideoConference(VideoProcessing) avConferencePreviewError:]', 
                       '-[VideoConference(VideoProcessing) avConferenceScreenCaptureError:]', 
                       '-[VideoConference(VideoProcessing) clientCaptureRule]', 
                       '-[VideoConference(VideoProcessing) initiateResolutionChangeToWidth:height:rate:]', 
                       '-[VideoConference(VideoProcessing) onCaptureFrame:frameTime:droppedFrames:cameraStatusBits:]', 
                       '-[VideoConference(VideoProcessing) setConferenceState:forCallID:]', 
                       '-[VideoConference(VideoProcessing) setConferenceVisualRectangle:forCallID:]', 
                       '-[VideoConference(VideoProcessing) shouldSendBlackFrame:callID:]', 
                       '-[VideoConferenceDefaults allocWithZone:]', '-[VideoConferenceDefaults audioRecordingEnabled]', 
                       '-[VideoConferenceDefaults autorelease]', '-[VideoConferenceDefaults bundleAudio]', 
                       '-[VideoConferenceDefaults canDecodeHD]', '-[VideoConferenceDefaults cannedReplayEnabled]', 
                       '-[VideoConferenceDefaults copyWithZone:]', '-[VideoConferenceDefaults disableVAD]', 
                       '-[VideoConferenceDefaults enable2vuyCapture]', 
                       '-[VideoConferenceDefaults enableBitstreamCapture]', 
                       '-[VideoConferenceDefaults enableRecvBitstreamDump]', 
                       '-[VideoConferenceDefaults enableTxBitstreamDump]', 
                       '-[VideoConferenceDefaults enableTxSourceYuvDump]', 
                       '-[VideoConferenceDefaults enableVPBLogging]', '-[VideoConferenceDefaults enableiRATSuggestion]', 
                       '-[VideoConferenceDefaults encodingScore]', '-[VideoConferenceDefaults extraPayloads]', 
                       '-[VideoConferenceDefaults forceAudioBitrate]', 
                       '-[VideoConferenceDefaults forceAudioPacketsPerBundle]', 
                       '-[VideoConferenceDefaults forceAudioPowerThreshold]', 
                       '-[VideoConferenceDefaults forceAudioPowerTimeInterval]', 
                       '-[VideoConferenceDefaults forceBitrate]', '-[VideoConferenceDefaults forceCaptureHeight]', 
                       '-[VideoConferenceDefaults forceCaptureWidth]', 
                       '-[VideoConferenceDefaults forceEncodeFramerate]', 
                       '-[VideoConferenceDefaults forceEncodeHeight]', 
                       '-[VideoConferenceDefaults forceEncodeWidth]', '-[VideoConferenceDefaults forceFramerate]', 
                       '-[VideoConferenceDefaults forceHWI]', '-[VideoConferenceDefaults forceIPv6]', 
                       '-[VideoConferenceDefaults forceRecvVideoPayload]', 
                       '-[VideoConferenceDefaults forceScreenHWI]', '-[VideoConferenceDefaults forceVideoPayload]', 
                       '-[VideoConferenceDefaults forceVideoStreamFramerate]', 
                       '-[VideoConferenceDefaults forceVideoStreamKeyFrameInterval]', 
                       '-[VideoConferenceDefaults forceVideoStreamResolution]', 
                       '-[VideoConferenceDefaults forceVideoStreamRxMaxBitrate]', 
                       '-[VideoConferenceDefaults forceVideoStreamRxMinBitrate]', 
                       '-[VideoConferenceDefaults forceVideoStreamTxMaxBitrate]', 
                       '-[VideoConferenceDefaults forceVideoStreamTxMinBitrate]', 
                       '-[VideoConferenceDefaults init]', '-[VideoConferenceDefaults max2GRate]', 
                       '-[VideoConferenceDefaults release]', '-[VideoConferenceDefaults retainCount]', 
                       '-[VideoConferenceDefaults retain]', '-[VideoConferenceDefaults shouldDisplayVideoInfoLayer]', 
                       '-[VideoConferenceDefaults videoStreamRateControlAlgorithm]', 
                       '-[VideoConferenceDefaults videoStreamRateControlDumpEnabled]', 
                       '-[VideoConferenceManager SIPHandle]', '-[VideoConferenceManager activeConference]', 
                       '-[VideoConferenceManager addVideoConference:]', 
                       '-[VideoConferenceManager assertNetworkAgent]', 
                       '-[VideoConferenceManager broadcastCellTechChange:cellularMaxPktLen:]', 
                       '-[VideoConferenceManager cleanupVTP]', '-[VideoConferenceManager conferenceForCallID:]', 
                       '-[VideoConferenceManager conferenceForParticipantID:]', 
                       '-[VideoConferenceManager conferenceForSourceDestinationInfo:]', 
                       '-[VideoConferenceManager conferenceWithMic]', '-[VideoConferenceManager createSIPWithPacketMultiplexMode:]', 
                       '-[VideoConferenceManager defaultNetworkAgent]', 
                       '-[VideoConferenceManager getClientUUID:]', '-[VideoConferenceManager hasVideoConference:]', 
                       '-[VideoConferenceManager init]', '-[VideoConferenceManager isSIPHandleValid:]', 
                       '-[VideoConferenceManager pauseVideoConferences:]', 
                       '-[VideoConferenceManager removeVideoConference:]', 
                       '-[VideoConferenceManager resultQueue]', '-[VideoConferenceManager setActiveConference:]', 
                       '-[VideoConferenceManager setConferenceWithMic:]', 
                       '-[VideoConferenceManager startSIPWithPacketMultiplexMode:transportType:]', 
                       '-[VideoConferenceManager startVTP]', '-[VideoConferenceManager stopSIPWithTransportType:]', 
                       '-[VideoConferenceManager stopVTP]', '-[VideoConferenceManager unassertNetworkAgent]', 
                       '-[VideoConferenceManager vcList]', '-[VideoConferenceManager videoConference:cancelRelayRequest:requestDict:]', 
                       '-[VideoConferenceManager videoConference:closeConnectionForCallID:]', 
                       '-[VideoConferenceManager videoConference:didChangeLocalVariablesForCallID:]', 
                       '-[VideoConferenceManager videoConference:didReceiveARPLData:fromCallID:]', 
                       '-[VideoConferenceManager videoConference:didReceiveData:forCallID:]', 
                       '-[VideoConferenceManager videoConference:didReceiveFirstRemoteFrameForCallID:]', 
                       '-[VideoConferenceManager videoConference:didRemoteScreenAttributesChange:forCallID:]', 
                       '-[VideoConferenceManager videoConference:didRemoteVideoAttributesChange:forCallID:]', 
                       '-[VideoConferenceManager videoConference:didStartSession:withCallID:error:]', 
                       '-[VideoConferenceManager videoConference:didStartSession:withCallID:withUserInfo:error:]', 
                       '-[VideoConferenceManager videoConference:didStopWithCallID:error:callMetadata:]', 
                       '-[VideoConferenceManager videoConference:inititiateRelayRequest:requestDict:]', 
                       '-[VideoConferenceManager videoConference:isRemoteAudioBelowThreshold:]', 
                       '-[VideoConferenceManager videoConference:localAudioEnabled:forCallID:error:]', 
                       '-[VideoConferenceManager videoConference:localIPChange:withCallID:]', 
                       '-[VideoConferenceManager videoConference:receivedNoRemotePacketsForTime:callID:]', 
                       '-[VideoConferenceManager videoConference:remoteAudioEnabled:forCallID:]', 
                       '-[VideoConferenceManager videoConference:remoteAudioPaused:callID:]', 
                       '-[VideoConferenceManager videoConference:remoteCallingModeChanged:forCallID:]', 
                       '-[VideoConferenceManager videoConference:remoteMediaStalled:callID:]', 
                       '-[VideoConferenceManager videoConference:remoteVideoPaused:callID:]', 
                       '-[VideoConferenceManager videoConference:sendRelayUpdate:updateDict:]', 
                       '-[VideoConferenceManager videoConference:updateInputFrequencyLevel:]', 
                       '-[VideoConferenceManager videoConference:updateInputMeterLevel:]', 
                       '-[VideoConferenceManager videoConference:updateOutputFrequencyLevel:]', 
                       '-[VideoConferenceManager videoConference:updateOutputMeterLevel:]', 
                       '-[VideoConferenceManager videoConference:videoQualityNotificationForCallID:isDegraded:isRemote:]', 
                       '-[VideoConferenceManager videoConference:withCallID:didPauseAudio:error:]', 
                       '-[VideoConferenceManager videoConference:withCallID:didPauseVideo:error:]', 
                       '-[VideoConferenceManager videoConference:withCallID:networkHint:]', 
                       '-[VideoConferenceManager vtpWrapper]', '-[VideoConferenceManager(VideoConference) registerBlocksForConference]', 
                       '-[VideoScaler convertAndScalePixelBuffer:toWidth:toHeight:withPixelFormat:usingPixelBufferPool:andStoreTo:]', 
                       '-[VideoScaler dealloc]', '-[VideoScaler init]', 
                       '-[VideoScaler rotatePixelBuffer:withPixelFormat:usingPixelBufferPool:andStoreTo:]', 
                       '-[WRMClient dealloc]', '-[WRMClient delegate]', 
                       '-[WRMClient dumpReport:]', '-[WRMClient initWithDelegate:]', 
                       '-[WRMClient init]', '-[WRMClient processNotificationList:]', 
                       '-[WRMClient releaseServiceConnection]', '-[WRMClient reportMetricsFaceTimeCalling:]', 
                       '-[WRMClient reportMetricsWifiCalling:]', '-[WRMClient requestNotificationFaceTimeCalling]', 
                       '-[WRMClient sendProcessInfoWithProcessID:]', '-[WRMClient sendReport:]', 
                       '-[WRMClient sendStatusUpdateFaceTimeCalling:]', 
                       '-[WRMClient sendStatusUpdateInfoFaceTimeCalling:]', 
                       '-[WRMClient sendSubscriptionInfoFaceTimeCalling]', 
                       '-[WRMClient sendUnsubscriptionInfoFaceTimeCalling]', 
                       '-[WRMClient setConfiguration:]', '-[WRMClient setDelegate:]', 
                       '-[WRMClient setupServiceConnection]', '-[WRMClient startWRMClientWithMode:]', 
                       '-[WRMClient stopWRMClient]', '-[XPCClientUser block]', 
                       '-[XPCClientUser dealloc]', '-[XPCClientUser eventLogLevel]', 
                       '-[XPCClientUser init]', '-[XPCClientUser queue]', 
                       '-[XPCClientUser setBlock:]', '-[XPCClientUser setEventLogLevel:]', 
                       '-[XPCClientUser setQueue:]', '-[XPCConnection connection]', 
                       '-[XPCConnection context]', '-[XPCConnection dealloc]', 
                       '-[XPCConnection description]', '-[XPCConnection init]', 
                       '-[XPCConnection isPersistent]', '-[XPCConnection pid]', 
                       '-[XPCConnection setConnection:]', '-[XPCConnection setContext:]', 
                       '-[XPCConnection setPersistent:]', '-[XPCConnection setPid:]', 
                       '-[XPCConnection setTokenData:]', '-[XPCConnection tokenData]', 
                       '-[XPCServerUser block]', '-[XPCServerUser dealloc]', 
                       '-[XPCServerUser eventLogLevel]', '-[XPCServerUser init]', 
                       '-[XPCServerUser queue]', '-[XPCServerUser setBlock:]', 
                       '-[XPCServerUser setEventLogLevel:]', '-[XPCServerUser setQueue:]', 
                       GCC_except_table0, GCC_except_table0, GCC_except_table0, 
                       GCC_except_table0, GCC_except_table0, GCC_except_table0, 
                       GCC_except_table1, GCC_except_table1, GCC_except_table1, 
                       GCC_except_table1, GCC_except_table10, GCC_except_table100, 
                       GCC_except_table11, GCC_except_table11, GCC_except_table11, 
                       GCC_except_table119, GCC_except_table12, GCC_except_table12, 
                       GCC_except_table12, GCC_except_table120, GCC_except_table124, 
                       GCC_except_table13, GCC_except_table13, GCC_except_table13, 
                       GCC_except_table132, GCC_except_table134, GCC_except_table14, 
                       GCC_except_table144, GCC_except_table145, GCC_except_table15, 
                       GCC_except_table154, GCC_except_table16, GCC_except_table17, 
                       GCC_except_table18, GCC_except_table2, GCC_except_table2, 
                       GCC_except_table2, GCC_except_table21, GCC_except_table21, 
                       GCC_except_table21, GCC_except_table22, GCC_except_table23, 
                       GCC_except_table23, GCC_except_table23, GCC_except_table26, 
                       GCC_except_table26, GCC_except_table28, GCC_except_table3, 
                       GCC_except_table3, GCC_except_table3, GCC_except_table30, 
                       GCC_except_table30, GCC_except_table328, GCC_except_table33, 
                       GCC_except_table33, GCC_except_table34, GCC_except_table35, 
                       GCC_except_table403, GCC_except_table42, GCC_except_table45, 
                       GCC_except_table45, GCC_except_table46, GCC_except_table5, 
                       GCC_except_table5, GCC_except_table522, GCC_except_table61, 
                       GCC_except_table62, GCC_except_table7, GCC_except_table74, 
                       GCC_except_table76, GCC_except_table78, GCC_except_table8, 
                       GCC_except_table8, GCC_except_table80, GCC_except_table82, 
                       GCC_except_table9, GCC_except_table9, GCC_except_table9, 
                       GCC_except_table94, GCC_except_table95, _AFRCAddBBDump, 
                       _AFRCAddOneLTRACK, _AFRCCalcRxEstimate, _AFRCCalcRxEstimate.g_in_rtp_counter, 
                       _AFRCCalcRxEstimate_New, _AFRCCalcRxEstimate_New.g_in_rtp_counter, 
                       _AFRCCancelFlush, _AFRCCloseHandle, _AFRCCreateHandle, 
                       _AFRCDuplicationCallback, _AFRCGetAudioPauseTime, 
                       _AFRCGetAudioTxInfo, _AFRCGetKeyFrameTimestamp, 
                       _AFRCGetLastEchoedMyTxTS, _AFRCGetProbeSeqProperties, 
                       _AFRCGetQualityIndication, _AFRCGetSenderRecvrModes, 
                       _AFRCGetSendersLogState, _AFRCGetStat, _AFRCGetTxInfo, 
                       _AFRCLogMQFlushedPackets, _AFRCLog_CloseLogs, _AFRCLog_OpenBBLog, 
                       _AFRCLog_OpenLogs, _AFRCLog_PrintBBNoteInfo, _AFRCLog_PrintCongestionFullInfo, 
                       _AFRCLog_PrintCongestionFullInfo.counter, _AFRCLog_PrintCongestionInfo, 
                       _AFRCLog_PrintKeyFrameInfo, _AFRCLog_TailFile, _AFRCMarkAdditionalFlushes, 
                       _AFRCMarkNetworkChange, _AFRCMarkResetCS, _AFRCMarkSpecialAudioFlush, 
                       _AFRCMarkSpecialVideoFlush, _AFRCPiggybackDataPacket, 
                       _AFRCProcessBasebandNotification, _AFRCProcessFeedbackPacket, 
                       _AFRCProcessWCMGetCallConfig, _AFRCProcessWCMSetCallConfig, 
                       _AFRCRecordKeyFrame, _AFRCRecordMaxBurstyLoss, _AFRCSetAudioBitRate, 
                       _AFRCSetAudioPaused, _AFRCSetAudioPayload, _AFRCSetAudioSilent, 
                       _AFRCSetBWECap, _AFRCSetBWEstMode, _AFRCSetConnectionNumber, 
                       _AFRCSetPLCalc, _AFRCSetTxCap, _AFRCSetVideoPaused, 
                       _AFRCSetWrmMetrics, _AFRCSetWrmNotification, _AFRCSetupDuplicationCallback, 
                       _AFRCSetupWRMCallbacks, _AFRCTrackLargeFrameState, 
                       _AFRCUpdateBBNote, _AFRCUpdateCellTech, _AFRCUpdateIntTxBytes, 
                       _AFRCUpdateOperatingMode, _AFRCWRMRequestNotificationCallback, 
                       _AFRCWRMStatusUpdateCallback, _AMRModeChangeNotificationCallback, 
                       _ARPLSessionCreate, _ARPLSessionRelease, _ARPL_Monitor_Functions, 
                       _ARPL_Monitor_State_Transition_Table, _ARPL_Recvfrom, 
                       _ARPL_Sendto, _AUIOCloseHandle, _AUIOCreateHandle, 
                       _AUIOGetAUNumber, _AUIOGetPreferredSettings, _AUIOReceiverIsReady, 
                       _AUIOReinitialize, _AUIOSetInputMeterEnabled, _AUIOSetMute, 
                       _AUIOSetOutputMeterEnabled, _AUIOSetRemoteCodecProperties, 
                       _AUIOSetSamplesPerFrame, _AUIOSetupFormats, _AUIOStart, 
                       _AUIOStop, _AVCPacketRelayDriverProc, _AVCPacketRelayDriverThreadAddFileDescriptorWithConnection, 
                       _AVCPacketRelayDriverThreadRemoveFileDescriptor, 
                       _AVCPacketRelayDriverThreadStart, _AVCPacketRelayDriverThreadStop, 
                       _AVConferenceAudioTierNetworkBitrate, _AVConferenceAudioTierPacketsPerBundle, 
                       _AVConferenceAudioTierPayload, _AVConferenceBackCaptureTime, 
                       _AVConferenceBlockServiceCallID, _AVConferenceBlockServiceConference, 
                       _AVConferenceBlockServiceConnectionBlob, _AVConferenceConnectionType, 
                       _AVConferenceConnectionTypeP2P, _AVConferenceConnectionTypeRelay, 
                       _AVConferenceConnectionTypeRelayP2PUpgrade, _AVConferenceFrontCaptureTime, 
                       _AVConferenceInviteDataCallInfoBlob, _AVConferenceInviteDataConnectionBlob, 
                       _AVConferenceInviteDataMediaBlob, _AVConferenceInviteDataSKEBlob, 
                       _AVConferenceLocalBitRate, _AVConferenceLocalFrameHeight, 
                       _AVConferenceLocalFrameRate, _AVConferenceLocalFrameWidth, 
                       _AVConferenceLocalPacketLossRate, _AVConferencePreviewOnCaptureFrame, 
                       _AVConferencePreviewScreenCaptureFrame, _AVConferencePreviewVideoCaptureEventCallback, 
                       _AVConferenceRemoteBitRate, _AVConferenceRemoteFrameHeight, 
                       _AVConferenceRemoteFrameRate, _AVConferenceRemoteFrameWidth, 
                       _AVConferenceRemotePacketLossRate, _AVConferenceRoundTripTime, 
                       _AVConferenceScreenCaptureEventCallback, _AVConferenceServerStart, 
                       _AVConferenceServiceErrorDomain, _AVConferenceSessionBitRate, 
                       _AVConferenceSessionConnectionType, _AVConferenceSessionDataNonce, 
                       _AVConferenceSessionLocalUsesCell, _AVConferenceSessionReceivedBytes, 
                       _AVConferenceSessionRemoteUsesCell, _AVConferenceSessionSentBytes, 
                       _AVConferenceVersionNumber, _AVConferenceVersionString, 
                       _ActiveProbing_FlushPendingPackets, _ActiveProbing_ProcessIncomingPacket, 
                       _ActiveProbing_Uninit, _ActiveProbing_UpdateRTPProbeSeqId, 
                       _AddFileToMarco, _AddOneVFDSETList, _AddOneVPList, 
                       _AddToCListRTP, _Alloc, _AppendBinaryBody, _AssembleFrame_H264, 
                       _AssignHeader, _AudioConverterInput, _AudioConverterInput, 
                       _AudioPacket_initNewPacket, _AvailableSampleRateChangeListenerCallback, 
                       _BWEUpdateFilterType, _BWEUpdateSenderRecvrEnabledStates, 
                       _BWEstCalcLargeFrameSize, _BWEstConfigureDefaults, 
                       _BWEstResetRecvrBWState, _BinaryGCD, _BitrateToQuality, 
                       _ByteToHex, _CMCaptureCloseHandle, _CMCaptureCopyColorInfo, 
                       _CMCaptureCreateHandle, _CMCaptureGetCamera, _CMCaptureGetFrameCounts, 
                       _CMCaptureGetPreviewState, _CMCaptureSetCamera, 
                       _CMCaptureSetCaptureOptions, _CMCaptureSetFrameRatePercentage, 
                       _CMCaptureSetTorchEnabled, _CMCaptureStartCapture, 
                       _CMCaptureStartPreview, _CMCaptureStop, _COMPUTILS_CompressWithGZip, 
                       _COMPUTILS_CompressWithZLib, _COMPUTILS_DecompressWithGZip, 
                       _COMPUTILS_DecompressWithZlib, _CPUCountPhysical, 
                       _CPUCountPhysical.result, _CStrToFourcc, _CalcBoostIncrease, 
                       _CalculateBandwidth, _CalculateBandwidthSimple, 
                       _CalculateBasebandRate, _CalculateVideoTimestamp, 
                       _CaptureBitstreamFile, _CellConditionChangeCallback, 
                       _CommNAT_Test, _CommReport, _CommTest, _CompressMsg, 
                       _ConstructAcceptHdr, _ConstructAllowEventsHdr, _ConstructAllowHdr, 
                       _ConstructCSeqHdr, _ConstructCallIDHdr, _ConstructContactHdr, 
                       _ConstructContentEncodingHdr, _ConstructContentLengthHdr, 
                       _ConstructContentTypeHdr, _ConstructEventHdr, _ConstructExpiresHdr, 
                       _ConstructFromHdr, _ConstructMaxForwardsHdr, _ConstructMinExpiresHdr, 
                       _ConstructReasonHdr, _ConstructReferToHdr, _ConstructSKESeqHdr, 
                       _ConstructSipMsg, _ConstructSubscriptionStateHdr, 
                       _ConstructToHdr, _ConstructUri, _ConstructUserAgentHdr, 
                       _ConstructViaHdr, _ConsumerThread, _CopyRemoteDisplayWithoutQuotes, 
                       _CopySipHeader, _CorrectSliceTypeForLTRP, _CountActive, 
                       _CreateAcceptHdr, _CreateAck, _CreateAlloc, _CreateAllowEventsHdr, 
                       _CreateAllowHdr, _CreateBinaryMessageInDialog, _CreateBye, 
                       _CreateCSeqHdr, _CreateCallIDHdr, _CreateCancel, 
                       _CreateContactHdr, _CreateContentEncodingHdr, _CreateContentLengthHdr, 
                       _CreateContentTypeHdr, _CreateExpiresHdr, _CreateFromHdr, 
                       _CreateGenericSIPMsg, _CreateGenericStatus, _CreateInvite, 
                       _CreateMaxForwardsHdr, _CreateMessageInDialog, _CreateMinExpiresHdr, 
                       _CreateReasonHdr, _CreateSKEMessageInDialog, _CreateSKESeqHdr, 
                       _CreateSocket, _CreateSocketAndBind, _CreateSocketForIDS, 
                       _CreateStatus, _CreateToHdr, _CreateUserAgentHdr, 
                       _CreateViaHdr, _Crossfade_Apply, _Crossfade_Finalize, 
                       _Crossfade_Initialize, _DEFAULT_TRANSPORT, _DLCloseHandle, 
                       _DLCloseHandleAll, _DLCountActiveDialogs, _DLCreateHandle, 
                       _DLFindActiveDialogs, _DLFindWithCallIDAndLock, 
                       _DLFindWithSipMsgAndLock, _DLGetAck, _DLGetCallID, 
                       _DLGetConfIndex, _DLGetData, _DLGetDoingKeyExchange, 
                       _DLGetMsg, _DLGetSIPPing, _DLGetState, _DLIncreaseLocalSeq, 
                       _DLIsFinishedCallback, _DLPutMsg, _DLSetAck, _DLSetConfIndex, 
                       _DLSetDoingKeyExchange, _DLSetMediaType, _DLSetState, 
                       _DLUnlock, _DLUpdate, _DTLS_Cleanup, _DTLS_Create, 
                       _DTLS_Handshake, _DTLS_IsConnected, _DTLS_Read, 
                       _DTLS_SocketRead, _DTLS_SocketWrite, _DTLS_UpdateHandshake, 
                       _DTLS_Write, _DTLS_iPhoneCA_der, _DTLS_iPhoneDeviceCA_der, 
                       _DTLS_rootCA_der, _Decode, _DecodeNilPacket, _DestroyAlloc, 
                       _DetectCongestion, _DirectCopy, _DoRateControl, 
                       _DumpFrameYuv, _DumpFrameYuvWithTimestamp, _DynamicAEInit, 
                       _DynamicStoreCallbackForWifiChanges, _EncCloseHandle, 
                       _EncCreateHandle, _EncEncodeFrame, _EncGenerateKeyFrameNow, 
                       _EncSendImgDesc, _EncSetBitRate, _EncSetThermalLevel, 
                       _Encode, _Enter_version2, _ExpandCallbackBuffer, 
                       _FileUtil_PrintBasicDesc, _FillGap, _FindActive, 
                       _FindConnectionResultByKey, _FindLocalIPPortForDstIPPort, 
                       _FindVFDByLocalIPPort, _FlushVideoPktsFromPktList, 
                       _Format_Float, _Format_Short, _FourccToCStr, _FourccToCStr.ix, 
                       _FourccToCStr.str, _FrameProc, _FreeAllFrames, _FreeFrame, 
                       _FreeSipMsg, _GCKVoiceChatOnCaptureSound, _GCKVoiceChatOnPlaySound, 
                       _GCKVoiceChatOnPlayVideo, _GKNATInterfaceInfoCommNATFlags, 
                       _GKNATInterfaceInfoCommNATFlagsCached, _GKNATInterfaceInfoInterfaceType, 
                       _GKNATInterfaceInfoSSLFlagsCached, _GKNATInterfaceInfoTCPFlagsCached, 
                       _GKNATObserverDynamicStoreCallback, _GKNATTypeDictionaryCarrierNATType, 
                       _GKNATTypeDictionaryInterfaceInfoDictionary, _GKNATTypeDictionaryNonCarrierNATType, 
                       _GKNATTypeDictionarySummaryNATType, _GKSCDXServerAddress, 
                       _GKSCallEvent_InitiateAcceptPush, _GKSCallEvent_InitiateCancelPush, 
                       _GKSCallEvent_InitiateInvitePush, _GKSCallEvent_InitiateRejectPush, 
                       _GKSCallEvent_ReceivedAcceptPush, _GKSCallEvent_ReceivedCancelPush, 
                       _GKSCallEvent_ReceivedInvitePush, _GKSCallEvent_ReceivedRejectPush, 
                       _GKSCommNATServerCohortAddress, _GKSCommNATServerCohortName, 
                       _GKSCommNATServerMain0Address, _GKSCommNATServerMain0Name, 
                       _GKSCommNATServerMain1Address, _GKSCommNATServerMain1Name, 
                       _GKSConnectionBlobMaxBytes, _GKSConnectivitySettingsUpdateName, 
                       _GKSConnectivitySettings_GetICETimeout, _GKSConnectivitySettings_GetNetworkConditionsTimeout, 
                       _GKSConnectivitySettings_GetNoRemotePacketsTimeout, 
                       _GKSDidStartParameter_CallID, _GKSDidStartParameter_ConnType, 
                       _GKSDidStartParameter_DidStart, _GKSDidStartParameter_Error, 
                       _GKSDidStartParameter_Event, _GKSDidStartParameter_localUseCell, 
                       _GKSDidStartParameter_remoteUseCell, _GKSErrorDetailedError, 
                       _GKSErrorReturnCode, _GKSICETimeout, _GKSKeepAliveTimeoutCarrierSpecific, 
                       _GKSLocalGamingDiscoveryHeartbeat, _GKSLocalGamingDiscoveryTimeout, 
                       _GKSMaxBitrate2G, _GKSMaxBitrate3G, _GKSMaxBitrateLTE, 
                       _GKSMaxRelayBitrate, _GKSMaxTCPRelayBitrate, _GKSNATCheckTimeout, 
                       _GKSNATObserver_AddCarrierFlag, _GKSNATObserver_AddInRangeFlag, 
                       _GKSNATObserver_CheckTCPAndSSL, _GKSNATObserver_FavorNonCarrier, 
                       _GKSNATObserver_IgnoreCache, _GKSNATObserver_NewCarrierType, 
                       _GKSNATObserver_NonCarrierOnly, _GKSNetworkConditionsTimeout, 
                       _GKSNoRemotePacketsTimeout, _GKSPreEmptiveRelayTimeout, 
                       _GKSRelayParameter_ClientData, _GKSRelayParameter_ConnectionID, 
                       _GKSRelayParameter_PeerAddrPointer, _GKSRelayParameter_PeerBlob, 
                       _GKSRelayParameter_PeerExternalAddr, _GKSRelayParameter_PeerID, 
                       _GKSRelayParameter_PeerNatType, _GKSRelayParameter_PeerRelayIP, 
                       _GKSRelayParameter_PeerRelayNatIP, _GKSRelayParameter_PeerRelayNatPort, 
                       _GKSRelayParameter_PeerRelayPort, _GKSRelayParameter_RemotePrimaryId, 
                       _GKSRelayParameter_SelfAddrPointer, _GKSRelayParameter_SelfBlob, 
                       _GKSRelayParameter_SelfExternalAddr, _GKSRelayParameter_SelfNatType, 
                       _GKSRelayParameter_SelfRelayIP, _GKSRelayParameter_SelfRelayNatIP, 
                       _GKSRelayParameter_SelfRelayNatPort, _GKSRelayParameter_SelfRelayPort, 
                       _GKSRelayParameter_Token, _GKSRelayParameter_TransactionID, 
                       _GKSRelayType, _GKSSSLCheckServerName, _GKSStartupTimeout, 
                       _GKSStaticNATTypeCarrierSpecific, _GKSTCPCheckServerName, 
                       _GKSVideoDegradedThreshold, _GKSVideoThrottlingTimeout, 
                       _GKSiRATRecommendationSupport, _GKVoiceChatServiceErrorDomain, 
                       _GenerateBranch, _GenerateUUID.oldi, _GenerateUUID.wClockSeq, 
                       _GetCellularMTU, _GetIntStatusCode, _GetNTPTime, 
                       _GetRealNumParity, _GetStatusCode, _GetStatusMsg, 
                       _GetTickCount, _HandleWCMEvent, _HandleWRMEvent, 
                       _HasMulticore, _HasMulticore.result, _InterfaceNameForIPPORT, 
                       _InterruptionListenerCallback, _IsValidAudioBitrateRange, 
                       _IsValidOFTMAC, _JBDump_CloseLog, _JBDump_GetTimestampString, 
                       _JBDump_OpenLog, _JLagProcessor_ComputeLag, _JLagProcessor_DetectSpike, 
                       _JLagProcessor_DetectSpike.spikePackets, _JLagProcessor_GetOWRD, 
                       _JLagProcessor_GetStatistics, _JLagProcessor_Initialize, 
                       _JLagProcessor_NewStream, _JLagProcessor_Process, 
                       _JLagProcessor_RecordOWRD, _JLagProcessor_UpdateAverages, 
                       _JPlayback_AdjustmentDisabled, _JPlayback_CrossFade, 
                       _JPlayback_CrossFade.fadeIn, _JPlayback_CrossFade.fadeOutConverging, 
                       _JPlayback_CrossFade.fadeOutDiverging, _JPlayback_CrossFade.fadeOutZeroCrossing, 
                       _JPlayback_DecodeSamples, _JPlayback_DecodeSamplesAndDetectSilence, 
                       _JPlayback_DecodeWarpWsola, _JPlayback_DiscardSamples, 
                       _JPlayback_FillSilenceBuffer, _JPlayback_Finalize, 
                       _JPlayback_GetAverageInterarrivalTimeForWindow, 
                       _JPlayback_GetAverageJitterSizeForWindow, _JPlayback_GetAverageLossRate, 
                       _JPlayback_GetFrameErasureRate, _JPlayback_GetLastAverageMissingPercentOverWindow, 
                       _JPlayback_GetLeftOverSamples, _JPlayback_GetPercentPacketsLateAndMissing, 
                       _JPlayback_GetPlaybackFormat, _JPlayback_GetSamples, 
                       _JPlayback_GetSilenceSamples, _JPlayback_GetStatistics, 
                       _JPlayback_GetTotalFrameErasureRate, _JPlayback_GetWrmMetrics, 
                       _JPlayback_HandleHoleDetection, _JPlayback_HandleQueueGrowth, 
                       _JPlayback_Initialize, _JPlayback_IsSilent, _JPlayback_IsUnderrunQueueBoostEnabled, 
                       _JPlayback_MaxInterArrivalTimeForWindow, _JPlayback_NewStream, 
                       _JPlayback_ResetReportingMetrics, _JPlayback_Sample_RampUp, 
                       _JPlayback_UpdateInterArrivalTime, _JPlayback_UpdateLosses, 
                       _JPlayback_WindowHead, _JPlayback_WsolaAdapt, _JPlayback_WsolaTail, 
                       _JTargetJBEstimator_AddCandidateSpikeToHistory, 
                       _JTargetJBEstimator_AddLagToHistory, _JTargetJBEstimator_ComputeTargetJBParams, 
                       _JTargetJBEstimator_DetectCandidateSpike, _JTargetJBEstimator_Finalize, 
                       _JTargetJBEstimator_GetMinJBSize, _JTargetJBEstimator_GetSharedSettings, 
                       _JTargetJBEstimator_GetSpikeInfo, _JTargetJBEstimator_GetStatistics, 
                       _JTargetJBEstimator_Initialize, _JTargetJBEstimator_NewStream, 
                       _JTargetJBEstimator_Process, _JTargetJBEstimator_ResetHistory, 
                       _JTargetJBEstimator_SetJitterBufferMode, _JTargetJBEstimator_SetNetworkType, 
                       _JitterPreloadQueue_AudioFrameAlloc, _JitterPreloadQueue_AudioFrameFree, 
                       _JitterPreloadQueue_AudioPacketAlloc, _JitterPreloadQueue_AudioPacketFree, 
                       _JitterPreloadQueue_Create, _JitterPreloadQueue_Dequeue, 
                       _JitterPreloadQueue_Destroy, _JitterPreloadQueue_Enqueue, 
                       _JitterPreloadQueue_Flush, _JitterQueue_Create, 
                       _JitterQueue_Destroy, _JitterQueue_DiscardExcess, 
                       _JitterQueue_GetUnderflowRate, _JitterQueue_HasDTXPacket, 
                       _JitterQueue_Insert, _JitterQueue_Pop, _JitterQueue_QueuedSamples, 
                       _JitterQueue_Reset, _JitterQueue_SetLastDecodedSeqNumber, 
                       _JitterQueue_SetMaxHoleSize, _Leave_version2, _ListenIDS, 
                       _ListenUDP, _LogProfileTimeOverLimit, _LogProfileTimeOverLimit, 
                       _LogProfileTimeOverLimit, _LoopbackTunnelReceiveProc, 
                       _MQCloseHandle, _MQCreateHandle, _MQDeleteAt, _MQGet, 
                       _MQPut, _MatchCallIDAndLock, _MatchSipMsgAndLock, 
                       _MediaCallback, _MediaQueueSendProc, _MediaQueue_AddPacket, 
                       _MediaQueue_BBFlushAcked, _MediaQueue_CleanupTxHistory, 
                       _MediaQueue_CloseHandle, _MediaQueue_CreateHandle, 
                       _MediaQueue_FindPacketInTxHistory, _MediaQueue_GetTimeRateChanged, 
                       _MediaQueue_GetTimeRefreshFrame, _MediaQueue_Malloc, 
                       _MediaQueue_RecordNewPacketWithSize, _MediaQueue_ResetRefreshFrameState, 
                       _MediaQueue_RetrieveAudioVideoRates, _MediaQueue_RexmitPacket, 
                       _MediaQueue_SendPacket, _MediaQueue_SetAFRCSendMode, 
                       _MediaQueue_SetActiveProbingLog, _MediaQueue_SetAudioFECLevel, 
                       _MediaQueue_SetAudioFraction, _MediaQueue_SetCellularAudioStallState, 
                       _MediaQueue_SetPLCalc, _MediaQueue_SetRedundantAudio, 
                       _MediaQueue_SetThrottlingAudioInterval, _MediaQueue_SetThrottlingIsIPv6, 
                       _MediaQueue_Start, _MediaQueue_ThrottlingFlushThrottlingQueue, 
                       _MediaQueue_UpdateAudioOnlyRateChange, _MediaQueue_UpdateSeqNumber, 
                       _MicroToNTP, _Middle32ToMilliSeconds, _MyCTServerConnectionCallback, 
                       _NAT64ResolverCallBack, _NTPToMicro, _NTPToMiddle32, 
                       _NetworkReceiveProc, _NilDecodeProc, _NilDecodeProc.tmpArry, 
                       _PacketThread_AllocatePacketBuffer, _PacketThread_Create, 
                       _PacketThread_Destroy, _PacketThread_FreePacketBuffer, 
                       _PacketThread_ReceiverIsReady, _PacketThread_Send, 
                       _PacketThread_Statistics, _ParseAcceptHdr, _ParseAllowEventsHdr, 
                       _ParseAllowHdr, _ParseCSeqHdr, _ParseCallIDHdr, 
                       _ParseContactHdr, _ParseContentEncodingHdr, _ParseContentLengthHdr, 
                       _ParseContentTypeHdr, _ParseEventHdr, _ParseExpiresHdr, 
                       _ParseFromHdr, _ParseHeader, _ParseMaxForwardsHdr, 
                       _ParseMessage, _ParseMinExpiresHdr, _ParseReasonHdr, 
                       _ParseReferToHdr, _ParseRequestLine, _ParseSKESeqHdr, 
                       _ParseSipUri, _ParseStatusLine, _ParseSubscriptionStateHdr, 
                       _ParseToHdr, _ParseUnsupported, _ParseUserAgentHdr, 
                       _ParseViaHdr, _ParseXCallIDHdr, _PassMessage, _PayloadProperties, 
                       _PrepareLastH264Fragment, _PrepareOFTCRC32, _PrepareOFTMAC, 
                       _ProbeRecvProc, _ProbeRecvProc2, _ProbeSendProc2, 
                       _ProcessErrorEvent, _ProcessFrame, _ProcessGetCallConfig, 
                       _ProcessOFTData, _ProcessRelayData, _ProcessSetCallConfig, 
                       _ProcessThrottledPktsWithTime, _ProcessVideoRTCP, 
                       _ProcessVideoRTP, _ProducerThread, _RSU_Decode, 
                       _RSU_Encode, _RSU_GetPacketLayout, _RSU_IsRecoverable, 
                       _RTCACMaxBitrate2G, _RTCACMaxBitrate3G, _RTCACMaxBitrateLTE, 
                       _RTCACMaxRelayBitrate, _RTCACMaxTCPRelayBitrate, 
                       _RTCPAddTMMB, _RTCPReceivedCallback, _RTCPReceivedCallback, 
                       _RTCPSetSendPLI, _RTCPSetSendTMMBR, _RTCSSMaxBitrate2G, 
                       _RTCSSMaxBitrate3G, _RTCSSMaxBitrateLTE, _RTPAddMappingForPayload, 
                       _RTPCheckRTCPSendIntervalElapsed, _RTPCloseHandle, 
                       _RTPCreateHandle, _RTPCreateSockets, _RTPCreateSocketsForIDS, 
                       _RTPCreateSocketsForIDSInternal, _RTPCreateSocketsRetryBind, 
                       _RTPFlushBaseband, _RTPFlushBaseband.s_iTransactionID, 
                       _RTPFlushBaseband_SpecialMQAudioTS, _RTPFreeRTCPPacket, 
                       _RTPGenerateSSRC, _RTPGetAFRCProbeSeqId, _RTPGetAFRCStat, 
                       _RTPGetAFRCTxInfo, _RTPGetAudioPauseTime, _RTPGetExternalPayload, 
                       _RTPGetInternalPayload, _RTPGetJitter, _RTPGetLastEchoedMyTxTS, 
                       _RTPGetLatestRTCPTimestamp, _RTPGetLocalSSRC, _RTPGetOWRD, 
                       _RTPGetPacketLossMetrics, _RTPGetPacketMultiplexMode, 
                       _RTPGetPacketSent, _RTPGetProbeSeqProperties, _RTPGetRTCPDescriptor, 
                       _RTPGetRTCPHasPendingPLI, _RTPGetReceiveStatus, 
                       _RTPGetStreamDirection, _RTPGetTimeRefreshFrame, 
                       _RTPIncrementPeerStats, _RTPInsertAFRCProbeSeqId, 
                       _RTPLogMQFlushedPackets, _RTPMapAddMappingForPayload, 
                       _RTPMapCreate, _RTPMapDestroy, _RTPMapGetExternalPayload, 
                       _RTPMapGetInternalPayload, _RTPMapPacketMultiplexModeToVTPMode, 
                       _RTPMapPrintMapping, _RTPMapResetMapping, _RTPMarkSpecialVideoFlush, 
                       _RTPNotifyAFRCRxEstimate, _RTPProcessH263Packet, 
                       _RTPProcessH264Packet, _RTPRecordFrameRate, _RTPRecordKeyFrame, 
                       _RTPRecvRTCP, _RTPRecvRTCPInternal, _RTPRecvRTP, 
                       _RTPResetConnectionStats, _RTPResetHandle, _RTPResetPayloadMapping, 
                       _RTPRexmitRTP, _RTPSendControlPacket, _RTPSendH263Packet, 
                       _RTPSendH264Packet, _RTPSendLTRACK, _RTPSendNetworkProbe, 
                       _RTPSendNetworkProbe2, _RTPSendRTCP, _RTPSendRTP, 
                       _RTPSetAFRCHandle, _RTPSetAFRCProbeSeqId, _RTPSetAFRCProcessingDelay, 
                       _RTPSetAFRCRecvMode, _RTPSetAFRCTxCap, _RTPSetAFRCVideoPaused, 
                       _RTPSetAudioReceiver, _RTPSetCName, _RTPSetCellularAudioStallState, 
                       _RTPSetCellularUniqueTag, _RTPSetDefaultCNAME, _RTPSetDestination, 
                       _RTPSetDestinationWithToken, _RTPSetMediaQueue, 
                       _RTPSetPacketMultiplexMode, _RTPSetRTCPEnabled, 
                       _RTPSetRTCPFB, _RTPSetRTCPReceivedCallback, _RTPSetRTCPSendInterval, 
                       _RTPSetRedundantAudio, _RTPSetRemoteSSRC, _RTPSetRxPayloadList, 
                       _RTPSetSockets, _RTPSetSourceRate, _RTPSetStreamDirection, 
                       _RTPSetThrottlingAudioInterval, _RTPSetTxPayloadList, 
                       _RTPSetWRMCallId, _RTPSetWRMInfo, _RTPSetWRMMetricConfig, 
                       _RTPSetWRMMetricsCallback, _RTPTrackLargeFrameState, 
                       _RTPUninitialize, _RTPUpdateAudioOnlyRateChange, 
                       _RTPUpdateIsIPv6, _RTP_SendTo, _RTTAdjustedTimeOut, 
                       _RampDownAudio, _RampDownTxRate, _ReadCodecConfigParams, 
                       _ReadFirstMBAndSliceType, _ReadFrameSliceHeader, 
                       _RealTimeStats_Init, _RecoverOneFECGroup, _RecvMessageUDP, 
                       _RecvRTP, _RecycleFlushedPkts, _RegisterG722Decoder, 
                       _RegisterG722Encoder, _Release, _ReleaseCVPixelBuffer, 
                       _RemoveCListForCallID, _ReplaceKeyword, _RequireEncoderResolutionChange, 
                       _RetrieveMBSliceTypeFromFrameInfoDict, _RetrieveResolutionFromFrameInfoDict, 
                       _SIPCallback, _SIPCancel, _SIPCancelProc, _SIPClientDictionaryCInterface_CopyObjectForKey, 
                       _SIPClientDictionaryCInterface_Create, _SIPClientDictionaryCInterface_Release, 
                       _SIPClientDictionaryCInterface_SetObjectForKey, 
                       _SIPCloseCall, _SIPCloseHandle, _SIPCompressCallback, 
                       _SIPConnectIPPort, _SIPCreateHandle, _SIPDecompressCallback, 
                       _SIPDoKeyExchange, _SIPGenerateCallID, _SIPGetRemoteInfo, 
                       _SIPHangup, _SIPHangupProc, _SIPHangupWithTimeout, 
                       _SIPKeyExchange, _SIPKeyExchangeProc, _SIPListenOnPhysicalInterface, 
                       _SIPListenOnVirtualInterface, _SIPMapPacketMultiplexModeToTransportMode, 
                       _SIPMessageProc, _SIPNewCallProc, _SIPReportSKError, 
                       _SIPSendMessage, _SIPSendMessageAll, _SIPSetAllowSameSourceDestination, 
                       _SIPSetCellConditionChangeHandler, _SIPSetDoKeyExchange, 
                       _SIPSetEnableCompression, _SIPSetMessageDelegateForCallID, 
                       _SIPSetPacketMultiplexMode, _SIPStartListen, _SIPStopListen, 
                       _SIPStopListenOnInterface, _SKE_FormMessageS, _SRTCPAddAuthenticationTag, 
                       _SRTCPDecrypt, _SRTCPEncrypt, _SRTCPVerifyAuthenticationTag, 
                       _SRTPAddAuthenticationTag, _SRTPCancelEncryption, 
                       _SRTPCleanUp, _SRTPCleanUpEncryption, _SRTPDecrypt, 
                       _SRTPEncrypt, _SRTPPrepareEncryption, _SRTPUseEncryption, 
                       _SRTPVerifyAuthenticationTag, _SRTPWaitUseEncryption, 
                       _SRTPWaitUseEncryptionRTP, _SVESQ, _SVESQ_Q15_Portable, 
                       _SchedulePkt, _SendAck, _SendOnePacketOnVFDList, 
                       _SendPacketsProc, _SendProbePacket, _SendRTP, _SendRelayHB, 
                       _SendReport, _SendRexmit, _SendTAStatus, _SendTAStatusGeneric, 
                       _SendTPStatus, _SendUDP, _SendUDPPacket, _SendUDPPacketForCList, 
                       _SetCellularAudioStallState_Internal, _SetVFDSASrc, 
                       _SoundDec_Create, _SoundDec_DataProc, _SoundDec_Decode, 
                       _SoundDec_Decode.speexScale, _SoundDec_Destroy, 
                       _SoundDec_FormatASBD, _SoundDec_GetMagicCookie, 
                       _SoundDec_Reset, _SoundDec_SetAMRPayloadFormat, 
                       _SoundDec_SetBitrate, _SoundDec_SetBitrateInternal, 
                       _SoundDec_SetDTX, _SoundDec_SetDTXPrimerSamples, 
                       _SoundDec_SetEnablePacketSizeLimitForVBR, _SoundDec_SetMagicCookie, 
                       _SoundDec_ShouldRampDownMissingPackets, _SoundPlayer_AlarmThread, 
                       _SoundPlayer_CallAlarms, _SoundPlayer_Create, _SoundPlayer_Destroy, 
                       _SoundPlayer_QueueAlarm, _StallModeTracePrint_, 
                       _SummerAdd, _SummerCloseHandle, _SummerCreateHandle, 
                       _SummerGreaterThan, _SummerIdentity, _SummerLengthPred, 
                       _SummerSumPred, _TACancel, _TACloseHandle, _TACreateHandle, 
                       _TAInviteClientProc, _TAInviteServerProc, _TAMsgCallback, 
                       _TANonInviteClientProc, _TANonInviteServerProc, 
                       _TASend, _TASetRTT, _TASetRetransmitTimeoutCap, 
                       _TAStart, _TPAddIPPortToCLIST, _TPAddTransaction, 
                       _TPCTServerConnectionCallback, _TPCancelRecvUDP, 
                       _TPCleanupARPLHandler, _TPCleanupBaseband, _TPCleanupBasebandNotifications, 
                       _TPCloseHandle, _TPConnectedCallback, _TPCreateHandle, 
                       _TPDiscardConnectionResult, _TPDiscardRelayBinding, 
                       _TPDiscardRelayBindingWithChannelNumber, _TPEnsureRecvProcStarted, 
                       _TPFlushBasebandQueue, _TPGetCellTech, _TPGetConnErrorCode, 
                       _TPGetConnectionData, _TPGetInterfaceStillExists, 
                       _TPGetLocalCellTech, _TPGetLoopbackIP, _TPGetLoopbackIP.ip, 
                       _TPGetLoopbackIP.ip.26, _TPGetNextBestCandidate, 
                       _TPGetRemoteCIDForDstIPPort, _TPGetRemoteICEVersion, 
                       _TPGetSignalStrength, _TPGetType, _TPListenOnPhysicalInterface, 
                       _TPListenVirtualInterface, _TPNewCandidatesCallback, 
                       _TPProcessICENomination, _TPProcessRemoteInterfaceChangeMessage, 
                       _TPRecvProc, _TPRecvUDPPacketWithTimeout, _TPRemoveIPPort, 
                       _TPRemovePreservedPortBindForCallID, _TPRemoveTransaction, 
                       _TPSend, _TPSendUDPDataPacket, _TPSendUDPPacket, 
                       _TPSendUDPPacketARPL, _TPSetARPLHandler, _TPSetAllowSameSourceDestination, 
                       _TPSetCellConditionChangeHandler, _TPSetDataPacketReceivedCallback, 
                       _TPSetForceIPv6, _TPSetForceRelay, _TPSetICEConnectionCallback, 
                       _TPSetICETimeout, _TPSetPacketMultiplexMode, _TPSetSKEState, 
                       _TPSetupBasebandNotifications, _TPSetupCTContext, 
                       _TPSetupOpenFaceTimeSecurity, _TPShouldCheckForExternalCandidate, 
                       _TPShouldNominateICECandidatePair, _TPStartConnectionCheck, 
                       _TPStopConnectivityCheck, _TPStopHeartbeat, _TPStopListen, 
                       _TPUpdateBaseband, _TPUpdateICERole, _TPUpdateInterfaceList, 
                       _TPUpdateQoS, _TPUpdateQualityIndictor, _TUGenericLogCallback, 
                       _TUMsgCallback, _TagMPWithOpportunisticBWEProbeSeq, 
                       _Throttling_AFRC_GetDefaults, _Throttling_AFRC_Init, 
                       _Throttling_AFRC_IsInThrottlingMode, _Throttling_AFRC_OverrideRxEstimate, 
                       _Throttling_AFRC_Uninit, _Throttling_MediaQueue_AddPacket_ScheduleAndActiveProbing, 
                       _Throttling_MediaQueue_FlushThrottlingQueue, _Throttling_MediaQueue_Init, 
                       _Throttling_MediaQueue_SetAudioInterval, _Throttling_MediaQueue_SetIsIPv6, 
                       _Throttling_MediaQueue_Uninit, _Throttling_RTP_SendRTP_SetThrottlingParams, 
                       _Throttling_VideoTransmitterUtil_ForceFirstProbePktSize, 
                       _Throttling_VideoTransmitter_CalcThrottlingRate, 
                       _Throttling_VideoTransmitter_ForceMinFirstProbePkt, 
                       _Throttling_VideoTransmitter_SetPerPktProbeSeqState, 
                       _TimeZero, _TimeZeroInit, _TranslateASBDToPayloadFormat, 
                       _TranslateVCPSliceTypeToGKS, _TransportMapPacketMultiplexModeToVTPMode, 
                       _UpdateAudioTxInfo, _UpdateBBAction, _UpdateBigFrameReporter, 
                       _UpdateCompressionMethodForMsg, _UpdateFECLevel, 
                       _UpdateRxEstimate, _UpdateRxEstimate_v1, _V2_cond, 
                       _V2_count, _V2_expire, _V2_file, _V2_line, _V2_lock, 
                       _V2_owner, _VADD, _VADD_Q15_Portable, _VCAudioManagerEventQueue_Create, 
                       _VCAudioManagerEventQueue_Dequeue, _VCAudioManagerEventQueue_Enqueue, 
                       _VCAudioManager_GetCurrentAudioInputDevice, _VCAudioManager_GetCurrentAudioOutputDevice, 
                       _VCAudioManager_GetMute, _VCAudioManager_ResetAudioSessionOutputPortOverride, 
                       _VCAudioManager_SetCurrentAudioInputDevice, _VCAudioManager_SetCurrentAudioOutputDevice, 
                       _VCAudioManager_SetMute, _VCAudioManager_SetSessionProperties, 
                       _VCAudioManager_StartAudioSession, _VCAudioManager_StopAudioSession, 
                       _VCAudioReceiver_CleanupDecoders, _VCAudioReceiver_CollectAWDMetrics, 
                       _VCAudioReceiver_CreateReceiver, _VCAudioReceiver_DiscardQueueExcess, 
                       _VCAudioReceiver_Finalize, _VCAudioReceiver_FlushQueues, 
                       _VCAudioReceiver_GetAverageInterarrivalTimeForWindow, 
                       _VCAudioReceiver_GetLatestAudioTimestamp, _VCAudioReceiver_GetOWRD, 
                       _VCAudioReceiver_GetPercentPacketsLateAndMissing, 
                       _VCAudioReceiver_InitializeDecoderSettingsForAudioPacket, 
                       _VCAudioReceiver_IsAMRDTXFrame, _VCAudioReceiver_Lock, 
                       _VCAudioReceiver_LogStats, _VCAudioReceiver_ParsePacket, 
                       _VCAudioReceiver_ProcessRTPPacket, _VCAudioReceiver_PullAudioSamples, 
                       _VCAudioReceiver_ReceiveProc, _VCAudioReceiver_RegisterAMRModeRequestCallback, 
                       _VCAudioReceiver_Reset, _VCAudioReceiver_ResetReceivedBytes, 
                       _VCAudioReceiver_SendEndCallReport, _VCAudioReceiver_SendStartCallReport, 
                       _VCAudioReceiver_SetJitterBufferMode, _VCAudioReceiver_SetMagicCookieForPayload, 
                       _VCAudioReceiver_SetupDecoders, _VCAudioReceiver_Start, 
                       _VCAudioReceiver_Stop, _VCAudioReceiver_UnregisterReportingTask, 
                       _VCAudioReceiver_UpdateAvgQSize, _VCAudioReceiver_UpdateCellTech, 
                       _VCAudioReceiver_UpdateWrmMetrics, _VCAudioRelayThread, 
                       _VCAudioTransmitter_UpdateWrmMetrics, _VCCPUCount, 
                       _VCCPUCount.result, _VCCallInfoBlobReadFrom, _VCCaptionsSegmentReadFrom, 
                       _VCCaptionsTranscriptionReadFrom, _VCClientRelayVTPReceiveProc, 
                       _VCConnectionIDSCellTechForRATType, _VCDataPacketReceivedCallback, 
                       _VCDispatchQueue_GetCustomRootQueue, _VCGetDeviceModelString, 
                       _VCGetSystemBuildVersionString, _VCMaxUDPPayloadSize, 
                       _VCMediaCallback, _VCMediaNegotiationBlobAudioSettingsReadFrom, 
                       _VCMediaNegotiationBlobBandwidthSettingsReadFrom, 
                       _VCMediaNegotiationBlobCaptionsSettingsReadFrom, 
                       _VCMediaNegotiationBlobReadFrom, _VCMediaNegotiationBlobVideoPayloadSettingsReadFrom, 
                       _VCMediaNegotiationBlobVideoRuleCollectionReadFrom, 
                       _VCMediaNegotiationBlobVideoSettingsReadFrom, _VCMemoryPool_Alloc, 
                       _VCMemoryPool_Create, _VCMemoryPool_Destroy, _VCMemoryPool_Free, 
                       _VCNAT64ReleaseCallBackContext, _VCNAT64ResolveNAT64Prefix, 
                       _VCNAT64ResolverCleanup, _VCNAT64ResolverDeregisterAll, 
                       _VCNAT64ResolverDeregisterFromInterface, _VCNAT64ResolverGetListenerIndexForContext, 
                       _VCNAT64ResolverGetPrefix, _VCNAT64ResolverGetSharedInstance, 
                       _VCNAT64ResolverIsBehindNat64, _VCNAT64ResolverIsNonzeroPrefix, 
                       _VCNAT64ResolverRegisterForPrefixUpdate, _VCRealTimeThread_ChangeState, 
                       _VCRealTimeThread_CreateStopSocket, _VCRealTimeThread_Finalize, 
                       _VCRealTimeThread_Initialize, _VCRealTimeThread_InternalStart, 
                       _VCRealTimeThread_InternalStop, _VCRealTimeThread_SetupNonDecayingThreadPriority, 
                       _VCRealTimeThread_Start, _VCRealTimeThread_Stop, 
                       _VCRealTimeThread_ThreadProc, _VCSDInfoConstructWithDatagramChannelToken, 
                       _VCSDInfoConstructWithIPPorts, _VCSDInfoConstructWithSocket, 
                       _VCSDInfoIsPacketFromKnownRemote, _VCSDInfoIsSrcDstInfoMatchedWithIP, 
                       _VCSDInfoToStringRepresentation, _VCSignalErrorAt, 
                       _VCTransportICEConnected, _VCTransportICENewCandidates, 
                       _VCTransportICERemoveIPPort, _VCTransportICEShouldNominate, 
                       _VCVideoStreamEncoderProc, _VRLogfileAlloc, _VRLogfileFree, 
                       _VRLogfileGetFilePointer, _VRLogfileGetTimestamp, 
                       _VRLogfilePrint, _VRLogfilePrintSync, _VRLogfilePrintWithTimestamp, 
                       _VSMUL, _VSMUL_Q15_Portable, _VTPCallback, _VTPRecvProc, 
                       _VTP_AddNAT64PrefixToIPv4Destination, _VTP_AddPktType, 
                       _VTP_BandwidthEstimationWithMediaPacket, _VTP_Bind, 
                       _VTP_BindNew, _VTP_Cleanup, _VTP_Close, _VTP_CloseOneVFDList, 
                       _VTP_CreateSourceDestinationInfoListWithVFD, _VTP_DemuxPacketsToVFDList, 
                       _VTP_DeregisterConnectionManagerWithCallID, _VTP_DetectNAT64Prefix, 
                       _VTP_GetSendRecvStats, _VTP_GetVFD, _VTP_Getsockname, 
                       _VTP_IFIndexToName, _VTP_Initialize, _VTP_NAT64PrefixResolvedCallback, 
                       _VTP_NotifyAFRCRxEstimate, _VTP_NotifyRemoteNoRemotePacket, 
                       _VTP_PassHsk, _VTP_PassPkt, _VTP_ProcessPacketType, 
                       _VTP_RecvAndProcessOnePacketFromSocket, _VTP_RecvAndProcessPacketsFromDatagramChannel, 
                       _VTP_RecvFromSocket, _VTP_Recvfrom, _VTP_RegisterConnectionManagerWithCallID, 
                       _VTP_ReleaseVFD, _VTP_RemovePktType, _VTP_ReportTransmittedBytes, 
                       _VTP_Select, _VTP_Select.zeros, _VTP_Send, _VTP_SendOnePacketWithDatagramChannelToken, 
                       _VTP_SendOnePacketWithIPPort, _VTP_SendOnePacketWithSocket, 
                       _VTP_SendWithSourceDestinationIP, _VTP_SendWithSourceDestinationInfo, 
                       _VTP_Sendto, _VTP_SetAFRC, _VTP_SetAFRCConnectionNumber, 
                       _VTP_SetAFRCRecvMode, _VTP_SetCallback, _VTP_SetCellularUniqueTag, 
                       _VTP_SetClientRelayVFD, _VTP_SetConnectionFlagsForPacket, 
                       _VTP_SetDTLS, _VTP_SetNetworkLogLevel, _VTP_SetPayloadList, 
                       _VTP_SetPktType, _VTP_SetRTPSrc, _VTP_SetRemoteSSRC, 
                       _VTP_SetSessionID, _VTP_SetSocketMode, _VTP_SetSourceDestinationWithIPPort, 
                       _VTP_SetSourceDestinationWithToken, _VTP_Setsockopt, 
                       _VTP_Socket, _VTP_SocketForIDSWithFileDescriptor, 
                       _VTP_SocketWithRealSocket, _VTP_UpdateReceivedBytes, 
                       _VTP_getConnectionManagerForCallID, _VTU_FindGOB.init, 
                       _VTU_FindGOB.post_zero, _VTU_FindGOB.pre_zero, _VTU_PrepareH264FrameData, 
                       _VTU_ReallocPktsInfo, _VTU_SplitVideoIntoPackets, 
                       _VideoConferenceDefaultsSingleton.onceToken, _VideoConferenceManager_CMSessionRef, 
                       _VideoPacketBuffer_AddPacket, _VideoPacketBuffer_Create, 
                       _VideoPacketBuffer_Destroy, _VideoPacketBuffer_GetNextFrame, 
                       _VideoPacketBuffer_Reset, _VideoPacketBuffer_SetFrameSize, 
                       _VideoPacketDump_CloseRTPLog, _VideoPacketDump_OpenRTPLog, 
                       _VideoPacketDump_RTPLog, _VideoPlayer_Create, _VideoPlayer_DecompClose, 
                       _VideoPlayer_Destroy, _VideoPlayer_FillImgDesc, 
                       _VideoPlayer_GetBufferPool, _VideoPlayer_GetFormatDescription, 
                       _VideoPlayer_IsFormatCompatible, _VideoPlayer_IsFormatCompatible_ImgDesc, 
                       _VideoPlayer_IsFormatCompatible_SPSPPS, _VideoPlayer_NewFormat, 
                       _VideoPlayer_NewFormat_ImgDesc, _VideoPlayer_NewFormat_InitDecoder, 
                       _VideoPlayer_NewFormat_SPSPPS, _VideoPlayer_ShowFrame, 
                       _VideoPlayer_VTDecompressionCallback, _VideoReceiver_CallAlarms, 
                       _VideoReceiver_CloseHandle, _VideoReceiver_CreateHandle, 
                       _VideoReceiver_DumpRecvSPSPPS, _VideoReceiver_GetBitrate, 
                       _VideoReceiver_GetFramerate, _VideoReceiver_GetParameterSet, 
                       _VideoReceiver_RecvProc, _VideoReceiver_SetVTHandle, 
                       _VideoReceiver_SetVTHandleAndStart, _VideoReceiver_ShowFrame, 
                       _VideoReceiver_VideoAlarm, _VideoReceiver_VideoAlarm.dLastShown, 
                       _VideoTransmitter_ACKLTRFrame, _VideoTransmitter_AddRexmitBytes, 
                       _VideoTransmitter_CloseHandle, _VideoTransmitter_CreateHandle, 
                       _VideoTransmitter_EncoderProc, _VideoTransmitter_EnqueueBuffer, 
                       _VideoTransmitter_GenerateKeyFrameNow, _VideoTransmitter_GetBitrate, 
                       _VideoTransmitter_GetFramerate, _VideoTransmitter_LogPacket, 
                       _VideoTransmitter_Pause, _VideoTransmitter_PrepareForResChange, 
                       _VideoTransmitter_SetAspectRatios, _VideoTransmitter_SetBitrate, 
                       _VideoTransmitter_SetCellTech, _VideoTransmitter_SetFECMode, 
                       _VideoTransmitter_SetRemoteSupportsDynamicContentUpdate, 
                       _VideoTransmitter_SetUseAFRC, _VideoTransmitter_SetVideoLossFraction, 
                       _VideoTransmitter_SetVisualRectangle, _VideoTransmitter_SetWindowState, 
                       _VideoTransmitter_Transmit, _VideoTransmitter_UpdateMTU, 
                       _VideoUtil_AddFakeLargeFrameData, _VideoUtil_AddImgDescToBitstream, 
                       _WRMGenerateReport, _WRMIncrementTime, _WRMInitialize, 
                       _WRMReportMetricsCallback, _WRMReportMetricsCallback, 
                       _WRMSetCallId, _WRMSetReportingCallback, _WRMSubmitReport, 
                       _WRMUninitialize, _WriteYuvFrame, _ZLibAndGZipCompress, 
                       _ZLibAndGZipDecompress, __DumpFrameBitstream, __DumpParameterSetsBitstream, 
                       __EncDumpBitStream, __VideoTransmitter_DequeueEncoderError, 
                       __VideoTransmitter_DispatchEncoderCallback, __VideoTransmitter_EncodeVideo, 
                       __VideoTransmitter_EnqueueEncoderError, __VideoTransmitter_GenerateKeyFrameNow, 
                       __VideoTransmitter_GetFramerate, __VideoTransmitter_ReadSampleAttachmentsArray, 
                       __VideoTransmitter_TransmitEncodedData, __Z15SRTPEncryptDataP11tagSRTPINFObtPhi, 
                       __Z15checkSendingSetPKvPv, __Z17ARPLSend_internalP5CARPLiPKvmiPK8sockaddrjijibb, 
                       __Z17ARPL_Monitor_InitP5CARPL, __Z17ARPL_Monitor_WaitP5CARPL, 
                       __Z19ARPL_Monitor_ThreadPv, __Z26associationSetElementEqualPKvS0_, 
                       __Z27retainAssociationSetElementPK13__CFAllocatorPKv, 
                       __Z28releaseAssociationSetElementPK13__CFAllocatorPKv, 
                       __Z29associationSetElementHashCodePKv, __Z5wsolaP9WSOLAInfoPfjS1_j, 
                       __ZL10CRC16Table, __ZL10getSRTPROCP11tagSRTPINFOtPj, 
                       __ZL11AUIOMicProcPvPjPK14AudioTimeStampjjP15AudioBufferList, 
                       __ZL11MakeCounterP11tagSRTPINFOPhjt, __ZL12AUIOSetupMicP7tagAUIOh, 
                       __ZL12AUIOSpkrProcPvPjPK14AudioTimeStampjjP15AudioBufferList, 
                       __ZL13RegisterCodecjPKcb, __ZL13SRTPInitCryptP11tagSRTPINFOPh, 
                       __ZL14MakeSessionKeybPKhiS0_jtjhPhd, __ZL16AUIOSetupSpeakerP7tagAUIOh, 
                       __ZL17WaitUseEncryptionP11tagSRTPINFOPd, __ZL19SendRenderedSamplesP7tagAUIOjidfh, 
                       __ZL21LogAbnormalTimestampsP7tagAUIOPK14AudioTimeStampjd, 
                       __ZL22AUIOPostinitializationP7tagAUIO, __ZL23LogProfileTimeOverLimitddPKcz, 
                       __ZL25SRTPUseEncryptionInternalP11tagSRTPINFOPhiS1_ibb, 
                       __ZL29SRTPGenerateAuthenticationTagP11tagSRTPINFObtPhiS1_i, 
                       __ZL29_AUIOSetRemoteCodecPropertiesP7tagAUIOjd, 
                       __ZL31_AUIOSetPropertiesAndInitializeP7tagAUIO27AudioStreamBasicDescriptioniP24VoiceIOFarEndVersionInfohjjdh, 
                       __ZL9HexToBytePhPKci, __ZN10PowerMeter13Process_Int16EPKsii, 
                       __ZN10PowerMeter13SetSampleRateEd, __ZN10PowerMeter19ScaleDecayConstantsEi, 
                       __ZN10PowerMeter9SavePeaksEiii, __ZN10PowerMeterC1Ev, 
                       __ZN12CARingBuffer10DeallocateEv, __ZN12CARingBuffer14ClipTimeBoundsERxS0_, 
                       __ZN12CARingBuffer5FetchEP15AudioBufferListjx, __ZN12CARingBuffer5StoreEPK15AudioBufferListjx, 
                       __ZN12CARingBuffer8AllocateEijj, __ZN12CARingBufferC1Ev, 
                       __ZN12CARingBufferD1Ev, __ZN21ARPLSendingSetElement6bufferEPhihhhP8sockaddrjiii, 
                       __ZN21ARPLSendingSetElement6removeEh, __ZN21ARPLSendingSetElement6searchEj, 
                       __ZN9ShiftBuff13appendSamplesEPfj, __ZN9WSOLAInfo10setTimeoutEd, 
                       __ZN9WSOLAInfo16isTimeoutExpiredEv, __ZN9WSOLAInfo23minRequiredInputSamplesEv, 
                       __ZN9WSOLAInfoC2Eiif, __ZN9WSOLAInfoD2Ev, __ZZ19RegisterG722DecoderE12gG722Decoder, 
                       __ZZ19RegisterG722EncoderE12gG722Encoder, __ZZL20GetAudioCodecFactoryPK25AudioComponentDescriptionPKcE9libHandle, 
                       '___100-[VCCallSession(VideoConferencing) onCaptureFrame:audioTS:audioHT:videoHT:droppedFrames:cameraBits:]_block_invoke', 
                       '___101-[VCVideoCaptureServer registerForVideoFramesFromSource:withClient:width:height:frameRate:unpausing:]_block_invoke', 
                       '___101-[VCVideoCaptureServer registerForVideoFramesFromSource:withClient:width:height:frameRate:unpausing:]_block_invoke.425', 
                       '___102-[VCAudioStream captureMeshMode:numBytes:numSamples:timeStamp:bufferedSamples:hostTime:voiceActivity:]_block_invoke', 
                       '___105-[AVConference inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:]_block_invoke', 
                       '___105-[AVConference inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:]_block_invoke_2', 
                       '___105-[VCTransportSessionLegacy connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:]_block_invoke', 
                       '___112-[VCTransport registerICEBlockForCallID:connectedBlock:newCandidatesBlock:newNominationBlock:removeIPPortBlock:]_block_invoke', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke.403', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke.416', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke.425', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke.443', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke.454', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_2', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_2.426', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_2.444', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_2.455', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_3', 
                       '___112-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_4', 
                       '___113-[VideoConference(SessionDelegate) session:connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:callID:]_block_invoke', 
                       '___113-[VideoConference(SessionDelegate) session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:]_block_invoke', 
                       '___113-[VideoConference(SessionDelegate) session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:]_block_invoke.985', 
                       '___114-[VCVideoStreamRateController doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageBitrate:]_block_invoke', 
                       '___117-[VCTransport iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]_block_invoke', 
                       '___123-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke', 
                       '___123-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke.629', 
                       '___123-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke.639', 
                       '___123-[VCTransportSessionLegacy getConnectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:queue:completionHandler:]_block_invoke', 
                       '___123-[VCTransportSessionLegacy getConnectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:queue:completionHandler:]_block_invoke_2', 
                       '___134-[VCVirtualTTYDevice onCaptureSound:numBytes:numSamples:timeStamp:timeStampDelta:bufferedSamples:hostTime:averagePower:voiceActivity:]_block_invoke', 
                       '___135-[VideoConference(SessionDelegate) session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:]_block_invoke', 
                       '___135-[VideoConference(SessionDelegate) session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:]_block_invoke.1046', 
                       '___135-[VideoConference(SessionDelegate) session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:]_block_invoke.1054', 
                       '___135-[VideoConference(SessionDelegate) session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:]_block_invoke_2', 
                       '___163-[VCAudioManager AUIOSetup:minSamplesPerFrame:allowAudioRecording:ignoreRefCount:operatingMode:deviceRole:remoteCodecType:remoteCodecSampleRate:completionHandler:]_block_invoke', 
                       '___163-[VCAudioManager AUIOSetup:minSamplesPerFrame:allowAudioRecording:ignoreRefCount:operatingMode:deviceRole:remoteCodecType:remoteCodecSampleRate:completionHandler:]_block_invoke.121', 
                       '___163-[VCAudioManager AUIOSetup:minSamplesPerFrame:allowAudioRecording:ignoreRefCount:operatingMode:deviceRole:remoteCodecType:remoteCodecSampleRate:completionHandler:]_block_invoke.126', 
                       '___203-[VCAudioManager startAudioIOWithFarEndVersionInfo:minSamplesPerFrame:internalFormat:allowAudioRecording:operatingMode:deviceRole:remoteBasebandCodecType:remoteBasebandCodecSampleRate:completionHandler:]_block_invoke', 
                       '___203-[VCAudioManager startAudioIOWithFarEndVersionInfo:minSamplesPerFrame:internalFormat:allowAudioRecording:operatingMode:deviceRole:remoteBasebandCodecType:remoteBasebandCodecSampleRate:completionHandler:]_block_invoke.176', 
                       '___203-[VCAudioManager startAudioIOWithFarEndVersionInfo:minSamplesPerFrame:internalFormat:allowAudioRecording:operatingMode:deviceRole:remoteBasebandCodecType:remoteBasebandCodecSampleRate:completionHandler:]_block_invoke_2', 
                       '___21-[VCAudioStream stop]_block_invoke', '___21-[VCAudioStream stop]_block_invoke_2', 
                       '___22-[AVCPacketRelay stop]_block_invoke', '___22-[VCAudioStream start]_block_invoke', 
                       '___22-[VCAudioStream start]_block_invoke.502', 
                       '___22-[VCAudioStream start]_block_invoke_2', '___22-[VCVideoStream start]_block_invoke', 
                       '___23-[AVCPacketRelay start]_block_invoke', '___24-[WRMClient sendReport:]_block_invoke', 
                       '___26-[VCAudioStream setPause:]_block_invoke', 
                       '___26-[VCAudioStream setPause:]_block_invoke.542', 
                       '___26-[VCAudioStream setPause:]_block_invoke_2', 
                       '___26-[VCAudioStream setPause:]_block_invoke_2.544', 
                       '___26-[VCTransportSession stop]_block_invoke', 
                       '___26-[VCTransportSession stop]_block_invoke_2', 
                       '___26-[VCVirtualTTYDevice stop]_block_invoke', 
                       '___26-[VCVirtualTTYDevice stop]_block_invoke_2', 
                       '___26-[WRMClient stopWRMClient]_block_invoke', 
                       '___27-[VCClientRelay startRelay]_block_invoke', 
                       '___27-[VCVirtualTTYDevice start]_block_invoke', 
                       '___27-[VCVirtualTTYDevice start]_block_invoke_2', 
                       '___28-[AVTelephonyInterface init]_block_invoke', 
                       '___28-[VCVideoCaptureServer init]_block_invoke', 
                       '___28-[VCWCMClient stopWCMClient]_block_invoke', 
                       '___29+[VCServerBag sharedInstance]_block_invoke', 
                       '___29-[AVConferenceXPCServer init]_block_invoke', 
                       '___29-[VCServerBag waitForBagLoad]_block_invoke', 
                       '___29-[VCServerBag waitForBagLoad]_block_invoke_2', 
                       '___29-[VCTransportSessionIDS stop]_block_invoke', 
                       '___29-[VCWCMClient startWCMClient]_block_invoke', 
                       '___29-[VCWCMClient startWCMClient]_block_invoke_2', 
                       '___30-[VCTransportSessionIDS start]_block_invoke', 
                       '___30-[VCTransportSessionIDS start]_block_invoke_2', 
                       '___31-[VCAudioManager setDirection:]_block_invoke', 
                       '___32-[TCPTunnelClient unbindChannel]_block_invoke', 
                       '___32-[VCScreenCapture _startCapture]_block_invoke', 
                       '___32-[VCTransportSessionLegacy stop]_block_invoke', 
                       '___32-[VideoConference warmupForCall]_block_invoke', 
                       '___32-[VideoConference warmupForCall]_block_invoke_2', 
                       '___33+[AVAudioClient stopAudioSession]_block_invoke', 
                       '___33+[VCDispatchQueue defaultManager]_block_invoke', 
                       '___33-[AVAudioDeviceList inputDevices]_block_invoke', 
                       '___33-[DTMFEventHandler stopDTMFEvent]_block_invoke', 
                       '___33-[VCTransportSessionLegacy start]_block_invoke', 
                       '___34+[CannedAVSync sharedCannedAVSync]_block_invoke', 
                       '___34-[AVAudioDeviceList outputDevices]_block_invoke', 
                       '___34-[AVConferencePreview stopPreview]_block_invoke', 
                       '___34-[CannedAudioInjector decodeAudio]_block_invoke', 
                       '___34-[VCAudioRelay startRelayIO:name:]_block_invoke', 
                       '___34-[VCCallSession setOperatingMode:]_block_invoke', 
                       '___34-[VCCallSession setOperatingMode:]_block_invoke.186', 
                       '___35+[VCCaptionsManager defaultManager]_block_invoke', 
                       '___35-[AVConferencePreview pausePreview]_block_invoke', 
                       '___35-[TCPTunnelClient sendAllocateMsg:]_block_invoke', 
                       '___35-[VCAudioManager addAudioIOClient:]_block_invoke', 
                       '___35-[VCSessionMessaging stopMessaging]_block_invoke', 
                       '___35-[VCVideoCaptureServer stopCapture]_block_invoke', 
                       '___35-[VCVideoCaptureServer stopPreview]_block_invoke', 
                       '___35-[VCVideoCaptureServer stopPreview]_block_invoke.584', 
                       '___35-[VCVideoCaptureServer stopPreview]_block_invoke_2', 
                       '___35-[VCVideoStreamReceiver startVideo]_block_invoke', 
                       '___35-[VideoConference setupNATObserver]_block_invoke', 
                       '___35-[WRMClient setupServiceConnection]_block_invoke', 
                       '___36+[AVAudioClient setMicrophoneMuted:]_block_invoke', 
                       '___36-[AVCPacketRelayIDSConnection start]_block_invoke', 
                       '___36-[AVCPacketRelayIDSConnection start]_block_invoke.134', 
                       '___36-[AVConference setRemoteVideoLayer:]_block_invoke', 
                       '___36-[TCPTunnelClient closeTunnelSocket]_block_invoke', 
                       '___36-[TCPTunnelClient processSocketRead]_block_invoke', 
                       '___36-[VCAudioStream checkPacketTimeouts]_block_invoke', 
                       '___36-[VCAudioStream checkPacketTimeouts]_block_invoke.220', 
                       '___36-[VCImageQueue setVideoDestination:]_block_invoke', 
                       '___36-[VCTransportSession setCallActive:]_block_invoke', 
                       '___36-[VCVideoCaptureServer pausePreview]_block_invoke', 
                       '___36-[VCVideoCaptureServer pausePreview]_block_invoke.569', 
                       '___36-[VCVideoCaptureServer pausePreview]_block_invoke_2', 
                       '___36-[VCVideoStream checkPacketTimeouts]_block_invoke', 
                       '___36-[VCVideoStream checkPacketTimeouts]_block_invoke.260', 
                       '___36-[VideoConferenceManager cleanupVTP]_block_invoke', 
                       '___36-[WRMClient startWRMClientWithMode:]_block_invoke', 
                       '___37-[AVConferencePreview didStopPreview]_block_invoke', 
                       '___37-[VCAudioManager setMicrophoneMuted:]_block_invoke', 
                       '___37-[VCAudioStream startPausedHeartbeat]_block_invoke', 
                       '___37-[VCCallSession rcvdFirstRemoteFrame]_block_invoke', 
                       '___37-[VCMediaStreamManager pauseStreams:]_block_invoke', 
                       '___37-[VCMediaStreamManager pauseStreams:]_block_invoke_2', 
                       '___37-[VCVideoStreamTransmitter stopVideo]_block_invoke', 
                       '___38+[VCMediaStreamManager defaultManager]_block_invoke', 
                       '___38+[VCRemoteVideoManager defaultManager]_block_invoke', 
                       '___38-[AVConferencePreview didGetSnapshot:]_block_invoke', 
                       '___38-[AVConferencePreview didPausePreview]_block_invoke', 
                       '___38-[AVConferencePreview didStartPreview]_block_invoke', 
                       '___38-[GKNATObserverInternal reportNATType]_block_invoke', 
                       '___38-[VCAudioManager removeAudioIOClient:]_block_invoke', 
                       '___38-[VCAudioManager setAudioSessionMode:]_block_invoke', 
                       '___38-[VCCallSession handleCellTechChange:]_block_invoke', 
                       '___38-[VCCallSession handleCellTechChange:]_block_invoke_2', 
                       '___38-[VCVideoStreamTransmitter startVideo]_block_invoke', 
                       '___38-[VCVideoStreamTransmitter startVideo]_block_invoke_2', 
                       '___38-[VideoConference setMicrophoneMuted:]_block_invoke', 
                       '___39-[AVConferencePreview isPreviewRunning]_block_invoke', 
                       '___39-[AVConferencePreview localVideoLayer:]_block_invoke', 
                       '___39-[AVConferenceXPCClient copyConnection]_block_invoke', 
                       '___39-[TCPTunnelClient processSocketReadSSL]_block_invoke', 
                       '___39-[TCPTunnelClient receivedControlData:]_block_invoke', 
                       '___39-[TCPTunnelClient receivedControlData:]_block_invoke.103', 
                       '___39-[TCPTunnelClient receivedControlData:]_block_invoke.113', 
                       '___39-[VCAudioManager setBlockSizeDispatch:]_block_invoke', 
                       '___39-[VCVideoStream cacheRemoteVideoFrame:]_block_invoke', 
                       '___39-[VCVideoStream startRtcpSendHeartBeat]_block_invoke', 
                       '___40-[AVConference setRemoteVideoBackLayer:]_block_invoke', 
                       '___40-[VCAudioRelay startPeriodicHealthPrint]_block_invoke', 
                       '___40-[VCConnectionManagerIDS addConnection:]_block_invoke', 
                       '___40-[VCConnectionManagerIDS addConnection:]_block_invoke_2', 
                       '___40-[VCTransportSession setReportingAgent:]_block_invoke', 
                       '___40-[VCTransportSessionIDS setDefaultLink:]_block_invoke', 
                       '___40-[VCVideoStream requestLastDecodedFrame]_block_invoke', 
                       '___41-[SDPMini(SDPComposing) composeFLSString]_block_invoke', 
                       '___41-[VCAudioManager setupAudioNotifications]_block_invoke', 
                       '___41-[VCAudioManager setupAudioNotifications]_block_invoke_2', 
                       '___41-[VCAudioManager stopAudioManagerClient:]_block_invoke', 
                       '___41-[VCConnectionManager setReportingAgent:]_block_invoke', 
                       '___41-[VCVoIPRelay stopWithCompletionHandler:]_block_invoke', 
                       '___42+[GKSConnectivitySettings getCachedIPPort]_block_invoke', 
                       '___42+[VCDatagramChannelManager sharedInstance]_block_invoke', 
                       '___42-[AVConference(Private) serverReconnected]_block_invoke', 
                       '___42-[AVConferencePreview didReceiveCommError]_block_invoke', 
                       '___42-[VCCallSession handleCellularMTUChanged:]_block_invoke', 
                       '___42-[VCCallSession(PrivateMethods) stopAFRC:]_block_invoke', 
                       '___42-[VCTransportSessionLegacy setupTransport]_block_invoke', 
                       '___42-[VCTransportSessionLegacy setupTransport]_block_invoke.604', 
                       '___42-[VCTransportSessionLegacy setupTransport]_block_invoke.611', 
                       '___42-[VCTransportSessionLegacy setupTransport]_block_invoke.620', 
                       '___42-[VCVideoStream sendLastRemoteVideoFrame:]_block_invoke', 
                       '___42-[VCVoIPRelay startWithCompletionHandler:]_block_invoke', 
                       '___43+[AVAudioClient setAudioSessionProperties:]_block_invoke', 
                       '___43-[AVConferencePreview localVideoAttributes]_block_invoke', 
                       '___43-[VCCallSession setPauseAudio:force:error:]_block_invoke', 
                       '___43-[VCCallSession setPauseAudio:force:error:]_block_invoke.870', 
                       '___43-[VCCallSession setPauseAudio:force:error:]_block_invoke.874', 
                       '___43-[VCCallSession setPauseVideo:force:error:]_block_invoke', 
                       '___43-[VCCallSession setPauseVideo:force:error:]_block_invoke_2', 
                       '___43-[VCConnectionManagerIDS removeConnection:]_block_invoke', 
                       '___43-[VCConnectionManagerLegacy addConnection:]_block_invoke', 
                       '___43-[VCConnectionManagerLegacy addConnection:]_block_invoke_2', 
                       '___43-[VCTransportSessionIDS discardConnection:]_block_invoke', 
                       '___43-[VCVideoCaptureServer copyCameraColorInfo]_block_invoke', 
                       '___43-[VideoConference setInputMeteringEnabled:]_block_invoke', 
                       '___44-[AVConference(Private) callStateForCallID:]_block_invoke', 
                       '___44-[AVConferenceXPCServer authorizedTokenData]_block_invoke', 
                       '___44-[SnapshotTimer checkinWithTimeout:forTask:]_block_invoke', 
                       '___44-[VCCallSession updateCachedConnectionState]_block_invoke', 
                       '___44-[VCConnectionManagerIDS updateCellularMTU:]_block_invoke', 
                       '___44-[VCVideoCaptureServer localVideoAttributes]_block_invoke', 
                       '___44-[VideoConference setOutputMeteringEnabled:]_block_invoke', 
                       '___45-[AVConferencePreview startPreviewUnpausing:]_block_invoke', 
                       '___45-[VCAudioStream reportRTCPPackets:withCount:]_block_invoke', 
                       '___45-[VCCallSession updateRemoteMediaStallState:]_block_invoke', 
                       '___45-[VCCallSession updateRemoteMediaStallState:]_block_invoke.456', 
                       '___45-[VCCallSession(PrivateMethods) enableAudio:]_block_invoke', 
                       '___45-[VCCallSession(PrivateMethods) stopAudioIO:]_block_invoke', 
                       '___45-[VCConnectionManager setDuplicationEnabled:]_block_invoke', 
                       '___45-[VCConnectionManager setDuplicationEnabled:]_block_invoke_2', 
                       '___45-[VCTransportSessionLegacy stopLoopbackProc:]_block_invoke', 
                       '___45-[VCTransportSessionLegacy stopLoopbackProc:]_block_invoke.539', 
                       '___45-[VCVideoStream reportRTCPPackets:withCount:]_block_invoke', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke.313', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke.321', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke.327', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke.336', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke.343', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke.353', 
                       '___46-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke_2', 
                       '___46-[VCSessionMessageTopic passMessage:sequence:]_block_invoke', 
                       '___46-[VCVideoCaptureServer sendSnapshotFromFrame:]_block_invoke', 
                       '___46-[VCVideoCaptureServer sendSnapshotFromFrame:]_block_invoke_2', 
                       '___46-[VCVideoCaptureServer startPreviewUnpausing:]_block_invoke', 
                       '___46-[VCVideoCaptureServer startPreviewUnpausing:]_block_invoke.553', 
                       '___46-[VCVideoCaptureServer startPreviewUnpausing:]_block_invoke_2', 
                       '___47-[AVConference setActiveRemoteVideoLayerFront:]_block_invoke', 
                       '___47-[AVConferencePreview endPIPToPreviewAnimation]_block_invoke', 
                       '___47-[AVConferencePreview endPreviewToPIPAnimation]_block_invoke', 
                       '___47-[AVConferencePreview setLocalVideoAttributes:]_block_invoke', 
                       '___47-[VCConnectionManagerLegacy updateCellularMTU:]_block_invoke', 
                       '___47-[VCMediaStreamSynchronizer updateSourceState:]_block_invoke', 
                       '___47-[VCTransportSessionIDS setConnectionSetupTime]_block_invoke', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.110', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.121', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.139', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.146', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.157', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.162', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.169', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.176', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.183', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.71', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.84', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke.91', 
                       '___47-[VCVideoCaptureServer registerBlocksForServer]_block_invoke_2', 
                       '___47-[VCVideoCaptureServer setFrameRatePercentage:]_block_invoke', 
                       '___48-[AVConference(Private) setCallState:forCallID:]_block_invoke', 
                       '___48-[AVConferencePreview cameraDidBecomeAvailable:]_block_invoke', 
                       '___48-[AVConferencePreview setLocalScreenAttributes:]_block_invoke', 
                       '___48-[AVConferencePreview setLocalVideoLayer:front:]_block_invoke', 
                       '___48-[AVConferencePreview setLocalVideoLayer:front:]_block_invoke_2', 
                       '___48-[AVConferenceXPCClient closeConnectionToServer]_block_invoke', 
                       '___48-[VCAudioStream stopAudioWithCompletionHandler:]_block_invoke', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke.132', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke.143', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke.165', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke.176', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke.270', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke.376', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke.382', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_10', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_11', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_12', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_13', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_14', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_2', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_2.182', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_2.279', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_3', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_3.285', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_4', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_4.294', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_5', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_5.303', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_6', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_6.312', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_7', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_8', 
                       '___48-[VCMediaStreamManager registerBlocksForService]_block_invoke_9', 
                       '___48-[VCRemoteVideoManager registerBlocksForService]_block_invoke', 
                       '___48-[VCRemoteVideoManager registerBlocksForService]_block_invoke.234', 
                       '___48-[VCRemoteVideoManager registerBlocksForService]_block_invoke_2', 
                       '___48-[VCTransportSessionLegacy initiateRelayRequest]_block_invoke', 
                       '___48-[VCTransportSessionLegacy initiateRelayRequest]_block_invoke_2', 
                       '___48-[VCVideoCaptureServer copyLocalVideoAttributes]_block_invoke', 
                       '___48-[VCVideoCaptureServer handleVideoCaptureEvent:]_block_invoke', 
                       '___48-[VCVideoCaptureServer handleVideoCaptureEvent:]_block_invoke_2', 
                       '___48-[VCVideoCaptureServer setLocalVideoAttributes:]_block_invoke', 
                       '___48-[VCVideoCaptureServer setLocalVideoAttributes:]_block_invoke.471', 
                       '___48-[VCVideoCaptureServer setLocalVideoAttributes:]_block_invoke_2', 
                       '___48-[VideoConferenceManager pauseVideoConferences:]_block_invoke', 
                       '___48-[VideoConferenceManager pauseVideoConferences:]_block_invoke_2', 
                       '___48-[WRMClient sendSubscriptionInfoFaceTimeCalling]_block_invoke', 
                       '___49-[AVConference initWithClientUUID:transportType:]_block_invoke', 
                       '___49-[AVConferencePreview beginPIPToPreviewAnimation]_block_invoke', 
                       '___49-[AVConferencePreview beginPreviewToPIPAnimation]_block_invoke', 
                       '___49-[AVConferenceXPCClient createConnectionToServer]_block_invoke', 
                       '___49-[AVConferenceXPCClient createConnectionToServer]_block_invoke.337', 
                       '___49-[AVConferenceXPCClient createConnectionToServer]_block_invoke_2', 
                       '___49-[AVConferenceXPCClient createConnectionToServer]_block_invoke_3', 
                       '___49-[GKInterfaceListener startRoutingChangeListener]_block_invoke', 
                       '___49-[VCAudioStream startAudioWithCompletionHandler:]_block_invoke', 
                       '___49-[VCTransportSessionLegacy networkStateDidChange]_block_invoke', 
                       '___49-[VCVideoCaptureServer handleScreenCaptureEvent:]_block_invoke', 
                       '___49-[VCVideoCaptureServer handleScreenCaptureEvent:]_block_invoke_2', 
                       '___49-[VCVideoCaptureServer setLocalScreenAttributes:]_block_invoke', 
                       '___49-[VCVideoCaptureServer setLocalScreenAttributes:]_block_invoke.497', 
                       '___49-[VCVideoCaptureServer setLocalScreenAttributes:]_block_invoke_2', 
                       '___49-[VCVideoStreamReceiver stopNetworkReceiveThread]_block_invoke', 
                       '___49-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke', 
                       '___49-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke_2', 
                       '___49-[VideoConference(PrivateMethods) setPauseVideo:]_block_invoke', 
                       '___49-[VideoConference(PrivateMethods) setPauseVideo:]_block_invoke_2', 
                       '___49-[WRMClient sendStatusUpdateInfoFaceTimeCalling:]_block_invoke', 
                       '___50-[VCAudioStream setupRTPWithIDSDestination:error:]_block_invoke', 
                       '___50-[VCCallSession initWithDeviceRole:transportType:]_block_invoke', 
                       '___50-[VCCallSession initWithDeviceRole:transportType:]_block_invoke.83', 
                       '___50-[VCCallSession(Messages) setupAudioPauseMessages]_block_invoke', 
                       '___50-[VCCallSession(Messages) setupVideoPauseMessages]_block_invoke', 
                       '___50-[VCCallSession(PrivateMethods) updateDeviceRole:]_block_invoke', 
                       '___50-[VCCallSession(PrivateMethods) updateDeviceRole:]_block_invoke.2498', 
                       '___50-[VCSessionMessaging initWithP2PID:remoteVersion:]_block_invoke', 
                       '___50-[VCTransportSession updateBasebandForConnection:]_block_invoke', 
                       '___50-[VCVideoCaptureServer reconnectClientLayerFront:]_block_invoke', 
                       '___50-[VCVideoStream setupRTPWithIDSDestination:error:]_block_invoke', 
                       '___50-[VCVideoStreamReceiver startNetworkReceiveThread]_block_invoke', 
                       '___50-[WRMClient sendUnsubscriptionInfoFaceTimeCalling]_block_invoke', 
                       '___51-[AVCPacketRelayIDSConnection sendData:size:error:]_block_invoke', 
                       '___51-[AVCRemoteVideoClient setActiveVideoLayerForMode:]_block_invoke', 
                       '___51-[VCCallSession(Messages) setupCallingModeMessages]_block_invoke', 
                       '___51-[VCRemoteVideoManager releaseQueueForStreamToken:]_block_invoke', 
                       '___51-[VCVideoCaptureServer handleAVCaptureError:error:]_block_invoke', 
                       '___51-[VCVideoCaptureServer handleAVCaptureError:error:]_block_invoke.232', 
                       '___51-[VCVideoCaptureServer handleAVCaptureError:error:]_block_invoke.239', 
                       '___51-[VideoConference initializeNewCallWithDeviceRole:]_block_invoke', 
                       '___51-[VideoConferenceManager stopSIPWithTransportType:]_block_invoke', 
                       '___52+[AVAudioClient resetAudioSessionOutputPortOverride]_block_invoke', 
                       '___52-[AVConferenceXPCServer sendMessageAsync:arguments:]_block_invoke', 
                       '___52-[DTMFEventHandler shouldTransmitDTMFWithTimestamp:]_block_invoke', 
                       '___52-[VCVideoCaptureServer setCaptureWidth:height:rate:]_block_invoke', 
                       '___53-[AVConferencePreview didChangeLocalVideoAttributes:]_block_invoke', 
                       '___53-[VCCallSession handlePendingPrimaryConnectionChange]_block_invoke', 
                       '___53-[VCCallSession(Messages) setupAudioPausedHBMessages]_block_invoke', 
                       '___53-[VCCallSession(Messages) setupPiPStateChangeMessage]_block_invoke', 
                       '___53-[VCCallSession(PrivateMethods) logConnectionSuccess]_block_invoke', 
                       '___53-[VCCallSession(PrivateMethods) startPausedHeartbeat]_block_invoke', 
                       '___53-[VCTransport registerDataReceivedHandler:forCallID:]_block_invoke', 
                       '___53-[VCTransportSession callEventHandlerWithEvent:info:]_block_invoke', 
                       '___53-[VCTransportSessionIDS connectionSetupPiggybackBlob]_block_invoke', 
                       '___53-[VCVideoStream vcVideoStreamReceiver:receivedTMMBR:]_block_invoke', 
                       '___53-[VCVirtualTTYDevice stopAudioWithCompletionHandler:]_block_invoke', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.152', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.165', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.180', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.194', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.210', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.224', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.238', 
                       '___54-[AVCRemoteVideoClient registerBlocksForNotifications]_block_invoke.248', 
                       '___54-[AVConferencePreview didChangeLocalScreenAttributes:]_block_invoke', 
                       '___54-[VCCallSession(Messages) setupCellTechChangeMessages]_block_invoke', 
                       '___54-[VCCallSession(PrivateMethods) sipConnectThreadProc:]_block_invoke', 
                       '___54-[VCCallSession(PrivateMethods) sipConnectThreadProc:]_block_invoke.2749', 
                       '___54-[VCMediaNegotiator setupVideoWithNegotiatedSettings:]_block_invoke', 
                       '___54-[VCVideoStreamRateController setRateControlInterval:]_block_invoke', 
                       '___55-[AVConferencePreview didReceiveErrorFromCamera:error:]_block_invoke', 
                       '___55-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]_block_invoke', 
                       '___55-[VCCallSession updateLastReceivedPacketWithTimestamp:]_block_invoke', 
                       '___55-[VCCallSession updateLastReceivedPacketWithTimestamp:]_block_invoke.482', 
                       '___55-[VCCallSession updateLastReceivedPacketWithTimestamp:]_block_invoke.490', 
                       '___55-[VCCallSession updateLastReceivedPacketWithTimestamp:]_block_invoke_2', 
                       '___55-[VCCallSession(Messages) setupAudioOnOffStateMessages]_block_invoke', 
                       '___55-[VCMediaNegotiator setupScreenWithNegotiatedSettings:]_block_invoke', 
                       '___55-[VCTransportSessionLegacy notifyDelegateToCancelRelay]_block_invoke', 
                       '___55-[VideoConference notifyDelegateOfLocalVariablesChange]_block_invoke', 
                       '___56+[AVAudioClient startAudioSessionWithCompletionHandler:]_block_invoke', 
                       '___56+[AVAudioClient startAudioSessionWithCompletionHandler:]_block_invoke_2', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.214', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.239', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.247', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.257', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.267', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.277', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.285', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.293', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.305', 
                       '___56-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke.315', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.206', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.234', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.242', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.252', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.262', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.270', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.278', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.290', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.301', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.311', 
                       '___56-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke.321', 
                       '___56-[TCPTunnelClient receivedSSLConnectionData:recordType:]_block_invoke', 
                       '___56-[VCAudioManager setRemoteBasebandCodecType:sampleRate:]_block_invoke', 
                       '___56-[VCAudioManager tearDownAudioIO:withCompletionHandler:]_block_invoke', 
                       '___56-[VCAudioManager tearDownAudioIO:withCompletionHandler:]_block_invoke_2', 
                       '___56-[VCCallSession notifyDelegateActiveConnectionDidChange]_block_invoke', 
                       '___56-[VCCallSession(PrivateMethods) updateNetworkCheckHint:]_block_invoke', 
                       '___56-[VCCaptionsManager registerCaptionsSource:streamToken:]_block_invoke', 
                       '___56-[VCConnectionManagerIDS updateConnectionForDuplication]_block_invoke', 
                       '___56-[VCRemoteVideoManager remoteMediaDidStall:streamToken:]_block_invoke', 
                       '___56-[VCRemoteVideoManager remoteVideoDidPause:streamToken:]_block_invoke', 
                       '___56-[VCTransportSessionLegacy handleNewCandidates:version:]_block_invoke', 
                       '___56-[VCVideoCaptureServer setLocalVideoDestination:facing:]_block_invoke', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1043', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1051', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1058', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1065', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1072', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1078', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1084', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1092', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1100', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1106', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1112', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1120', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1131', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1139', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1147', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1153', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1159', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1165', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1173', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1184', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1193', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1200', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1206', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1213', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1221', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1227', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1235', 
                       '___57-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke.1241', 
                       '___57-[TCPTunnelClient createDispatchTimer:withDetailedError:]_block_invoke', 
                       '___57-[VCCallSession(Messages) setupBasebandCodecInfoMessages]_block_invoke', 
                       '___57-[VCCallSession(PrivateMethods) allocLocalFeaturesString]_block_invoke', 
                       '___57-[VCTransportSessionIDS setConnectionSetupPiggybackBlob:]_block_invoke', 
                       '___57-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]_block_invoke', 
                       '___58-[TCPTunnelClient vcArg:sendRealTimeData:toParticipantID:]_block_invoke', 
                       '___58-[VCCallSession(PrivateMethods) chooseAudioNetworkBitrate]_block_invoke', 
                       '___58-[VCRemoteVideoManager remoteVideoDidDegrade:streamToken:]_block_invoke', 
                       '___58-[VCTransport iceRemoveIPPort:forCallID:isLocalInterface:]_block_invoke', 
                       '___58-[VCVideoCaptureServer setFrameRatePercentage:percentage:]_block_invoke', 
                       '___59+[VideoConferenceDefaults VideoConferenceDefaultsSingleton]_block_invoke', 
                       '___59-[VCCallSession(PrivateMethods) enableSessionHealthMonitor]_block_invoke', 
                       '___59-[VCVideoCaptureServer captureVideoWidth:height:frameRate:]_block_invoke', 
                       '___59-[VCVideoCaptureServer setCaptureWidth:height:rate:forced:]_block_invoke', 
                       '___59-[VCVirtualTTYDevice startVirtualTTYWithCompletionHandler:]_block_invoke', 
                       '___60-[AVConferenceXPCServer sendMessageAsync:arguments:context:]_block_invoke', 
                       '___60-[VCCallSession primaryConnectionDidChangeTo:oldConnection:]_block_invoke', 
                       '___60-[VCCallSession remoteCellTechStateUpdate:maxRemoteBitrate:]_block_invoke', 
                       '___60-[VCCallSession(PrivateMethods) setupCalleeSIPStartTimeout:]_block_invoke', 
                       '___60-[VCCallSession(PrivateMethods) setupCalleeSIPStartTimeout:]_block_invoke_2', 
                       '___61-[AVCVirtualTTYDevice registerBlocksForDelegateNotifications]_block_invoke', 
                       '___61-[AVCVirtualTTYDevice registerBlocksForDelegateNotifications]_block_invoke.86', 
                       '___61-[AVCVirtualTTYDevice registerBlocksForDelegateNotifications]_block_invoke.94', 
                       '___61-[AVConferencePreview didReceiveFirstPreviewFrameFromCamera:]_block_invoke', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.116', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.127', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.132', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.137', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.142', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.149', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.159', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.164', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.173', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke.189', 
                       '___61-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke_2', 
                       '___61-[AVConferenceXPCServer _xpc_start_listening_for_connections]_block_invoke', 
                       '___61-[DTMFEventHandler sendDTMFEvent:atTimestamp:withSampleRate:]_block_invoke', 
                       '___61-[VCCallSession(PrivateMethods) newSKEBlobWithRemoteSKEBlob:]_block_invoke', 
                       '___61-[VCCallSession(PrivateMethods) notifyDelegateSessionStarted]_block_invoke', 
                       '___61-[VCCallSession(PrivateMethods) useAudioPayload:withBitrate:]_block_invoke', 
                       '___61-[VCCaptionsManager unregisterCaptionsSourceWithStreamToken:]_block_invoke', 
                       '___61-[VCSessionMessageTopic sendMessage:withSequence:numRetries:]_block_invoke', 
                       '___61-[VCSessionMessageTopic sendMessage:withSequence:numRetries:]_block_invoke_2', 
                       '___61-[VCVideoCaptureServer localScreenRatioForScreenOrientation:]_block_invoke', 
                       '___61-[VideoConference(SessionDelegate) session:didStopWithError:]_block_invoke', 
                       '___62-[VCAudioManager stopAudioIOWithDeviceRole:completionHandler:]_block_invoke', 
                       '___62-[VCAudioManager stopAudioIOWithDeviceRole:completionHandler:]_block_invoke_2', 
                       '___62-[VCAudioManager stopAudioIOWithDeviceRole:completionHandler:]_block_invoke_3', 
                       '___62-[VCAudioManager stopRelayIOWithDeviceRole:completionHandler:]_block_invoke', 
                       '___62-[VCCallSession(Messages) setupHandoverCandidateChangeMessage]_block_invoke', 
                       '___62-[VCCallSession(PrivateMethods) getAllPayloadsForVideo:count:]_block_invoke', 
                       '___62-[VideoConference(SessionDelegate) session:sendRelayResponse:]_block_invoke', 
                       '___63-[AVConferencePreview localScreenAttributesForVideoAttributes:]_block_invoke', 
                       '___63-[VCAudioManager handleAudioInterruption:interruptionInfo:cmd:]_block_invoke', 
                       '___63-[VCCallSession schedulePrimaryConnectionChange:oldConnection:]_block_invoke', 
                       '___63-[VCCallSession(PrivateMethods) getAllPayloadsForScreen:count:]_block_invoke', 
                       '___63-[VCCallSession(PrivateMethods) setLocalIdentityForKeyExchange]_block_invoke', 
                       '___63-[VCConnectionManagerIDS updateCellularTech:forLocalInterface:]_block_invoke', 
                       '___63-[VCVideoCaptureServer changeCameraToPendingSettingsWithReset:]_block_invoke', 
                       '___63-[VCVideoCaptureServer localExpectedRatioForScreenOrientation:]_block_invoke', 
                       '___63-[VideoConference(SessionDelegate) remoteAudioDidPause:callID:]_block_invoke', 
                       '___63-[VideoConference(SessionDelegate) remoteVideoDidPause:callID:]_block_invoke', 
                       '___63-[VideoConference(SessionDelegate) session:cancelRelayRequest:]_block_invoke', 
                       '___63-[VideoConference(SessionDelegate) session:remoteMediaStalled:]_block_invoke', 
                       '___64-[VCCallSession updateVideoQualityStatus:bitrate:time:isRemote:]_block_invoke', 
                       '___64-[VCCallSession(VCCaptionsReceiverDelegate) didReceiveCaptions:]_block_invoke', 
                       '___64-[VCTransportSession flushBasebandQueueWithPayloads:flushCount:]_block_invoke', 
                       '___64-[VCVideoStream vcVideoStreamReceiver:downlinkQualityDidChange:]_block_invoke', 
                       '___64-[VideoConference(SessionDelegate) session:didPauseAudio:error:]_block_invoke', 
                       '___64-[VideoConference(SessionDelegate) session:didPauseVideo:error:]_block_invoke', 
                       '___65-[AVConferenceXPCServer appendContextToDictionary:forConnection:]_block_invoke', 
                       '___65-[VCCallSession(PrivateMethods) startAudioWithCompletionHandler:]_block_invoke', 
                       '___65-[VCCallSession(PrivateMethods) startAudioWithCompletionHandler:]_block_invoke_2', 
                       '___65-[VCRemoteVideoManager didReceiveFirstRemoteFrameForStreamToken:]_block_invoke', 
                       '___65-[VideoConference(SessionDelegate) session:initiateRelayRequest:]_block_invoke', 
                       '___66-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]_block_invoke', 
                       '___66-[VCConnectionManagerLegacy updateCellularTech:forLocalInterface:]_block_invoke', 
                       '___66-[VCMediaStreamSynchronizer calculatePlayoutTimeWithRTPTimestamp:]_block_invoke', 
                       '___66-[VCMediaStreamSynchronizer updateSourceNTPTime:withRTPTimeStamp:]_block_invoke', 
                       '___66-[VCVideoStreamRateController updateVideoStall:withStallDuration:]_block_invoke', 
                       '___66-[VideoConference(PrivateMethods) cleanupSession:didRemoteCancel:]_block_invoke', 
                       '___67-[VCAudioStream pullDecodedMeshMode:timestamp:numBytes:numSamples:]_block_invoke', 
                       '___67-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]_block_invoke', 
                       '___67-[VCConnectionManagerIDS setPreferredLocalInterfaceForDuplication:]_block_invoke', 
                       '___67-[VCMediaStreamSynchronizer updateSourcePlayoutSampleRTPTimestamp:]_block_invoke', 
                       '___67-[VCRemoteVideoManager remoteVideoAttributesDidChange:streamToken:]_block_invoke', 
                       '___67-[VCTransportSessionLegacy connectionCallback:isInitialConnection:]_block_invoke', 
                       '___67-[VCTransportSessionLegacy loopbackSocketTunnel:receivedData:from:]_block_invoke', 
                       '___67-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]_block_invoke', 
                       '___67-[VCTransportSessionLegacy receivedRealTimeData:fromParticipantID:]_block_invoke', 
                       '___67-[VideoConference(SessionDelegate) session:withCallID:networkHint:]_block_invoke', 
                       '___68-[AVConferenceXPCServer(XPCManagement) _xpc_add_connection_to_list:]_block_invoke', 
                       '___68-[VCAudioRelayIO createPacketThreadWithIOBufferDuration:name:error:]_block_invoke', 
                       '___68-[VCConnectionManagerIDS setPreferredRemoteInterfaceForDuplication:]_block_invoke', 
                       '___68-[VCRemoteVideoManager remoteScreenAttributesDidChange:streamToken:]_block_invoke', 
                       '___68-[VCVideoCaptureServer isClientRegisteredForVideoFrames:fromSource:]_block_invoke', 
                       '___68-[VCVideoStreamRateController setMaxTargetBitrate:minTargetBitrate:]_block_invoke', 
                       '___69-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke', 
                       '___69-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke.493', 
                       '___69-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke.512', 
                       '___69-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke.519', 
                       '___69-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke_2', 
                       '___69-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke_2.495', 
                       '___69-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke_3', 
                       '___69-[CameraConferenceSynchronizer changeCameraToCaptureSettings:forced:]_block_invoke', 
                       '___69-[DTMFEventHandler sendingDTMFEventWithTimeStamp:interval:RTPHandle:]_block_invoke', 
                       '___69-[VCAudioManager setupAudioRelayWithIO:deviceRole:completionHandler:]_block_invoke', 
                       '___69-[VCAudioManager setupAudioRelayWithIO:deviceRole:completionHandler:]_block_invoke_2', 
                       '___69-[VCCallSession(PrivateMethods) startMediaWithPreNegotiatedSettings:]_block_invoke', 
                       '___69-[VCCallSession(PrivateMethods) startMediaWithPreNegotiatedSettings:]_block_invoke.2149', 
                       '___69-[VCConnectionManager primaryConnectionChanged:oldPrimaryConnection:]_block_invoke', 
                       '___69-[VCTransport receivedDataPacket:length:forCallID:encrypted:OFTType:]_block_invoke', 
                       '___69-[VCTransportSessionLegacy setupPendingSecondaryRelayWithNewPrimary:]_block_invoke', 
                       '___69-[VideoConference processRelayUpdate:updateDict:didOriginateRequest:]_block_invoke', 
                       '___69-[VideoConference(SessionDelegate) session:localIPChange:withCallID:]_block_invoke', 
                       '___70-[VCCallSession(PrivateMethods) remotePauseDidChangeToState:forVideo:]_block_invoke', 
                       '___70-[VCTransportSessionLegacy setupSecondaryRelayForCall:callerRequired:]_block_invoke', 
                       '___70-[VCVideoCaptureServer deregisterForVideoFramesFromSource:withClient:]_block_invoke', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke.194', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke.56', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_10', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_10.264', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_11', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_11.272', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_12', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_12.280', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_13', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_13.286', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_14', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_14.294', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_15', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_15.300', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_16', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_17', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_18', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_19', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_2', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_2.200', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_20', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_21', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_22', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_23', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_24', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_25', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_26', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_27', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_28', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_29', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_3', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_3.206', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_30', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_31', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_32', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_33', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_34', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_35', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_36', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_37', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_38', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_39', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_4', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_4.212', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_40', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_41', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_42', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_43', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_44', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_45', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_46', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_47', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_48', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_5', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_5.228', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_6', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_6.236', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_7', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_7.242', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_8', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_8.250', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_9', 
                       '___70-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_9.256', 
                       '___71-[VCAudioManager startAudioSessionWithCompletionHandler:dispatchQueue:]_block_invoke', 
                       '___71-[VCConnectionManager updateReceivedExcessiveBytes:isMediaData:isIPv6:]_block_invoke', 
                       '___71-[VCMediaStreamSynchronizer updateDestinationNTPTime:withRTPTimeStamp:]_block_invoke', 
                       '___71-[VCTransport iceNewCandidatesForCallID:blob:size:newCandidateVersion:]_block_invoke', 
                       '___72-[VCDatagramChannelManager setupDatagramChannel:withToken:eventHandler:]_block_invoke', 
                       '___72-[VideoConference(SessionDelegate) session:receivedNoPacketsForSeconds:]_block_invoke', 
                       '___73-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connection_from_list:]_block_invoke', 
                       '___73-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connections_from_list]_block_invoke', 
                       '___73-[VCConnectionManagerLegacy removeConnectionWithIPPort:isLocalInterface:]_block_invoke', 
                       '___73-[VCVideoCaptureServer startCaptureWithWidth:height:frameRate:unpausing:]_block_invoke', 
                       '___74-[TCPTunnelClient vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:]_block_invoke', 
                       '___74-[TCPTunnelClient vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:]_block_invoke.77', 
                       '___74-[VCConnectionManager updateTransmittedExcessiveBytes:isMediaData:isIPv6:]_block_invoke', 
                       '___74-[VideoConference(SessionDelegate) session:didReceiveARPLData:fromCallID:]_block_invoke', 
                       '___74-[VideoConference(SessionDelegate) session:remoteAudioEnabled:withCallID:]_block_invoke', 
                       '___75-[VCCallSession(PrivateMethods) disconnectWithNoRemotePackets:timeoutUsed:]_block_invoke', 
                       '___75-[VCCallSession(PrivateMethods) handleDuplicationEnabled:activeConnection:]_block_invoke', 
                       '___75-[VCTransportSessionLegacy handleConnectionSetupDataChangeMessageDelivered]_block_invoke', 
                       '___76-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]_block_invoke', 
                       '___76-[VCCallSession(PrivateMethods) getAllCompatibleVideoPayloads:forMediaType:]_block_invoke', 
                       '___76-[VCCallSession(PrivateMethods) getAllCompatibleVideoPayloads:forMediaType:]_block_invoke.2385', 
                       '___76-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]_block_invoke', 
                       '___76-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]_block_invoke_2', 
                       '___76-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]_block_invoke_3', 
                       '___76-[VideoConference(SessionDelegate) session:didChangeRemoteScreenAttributes:]_block_invoke', 
                       '___77-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:]_block_invoke', 
                       '___77-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:]_block_invoke_2', 
                       '___77-[VCAudioManager internalSetupAudioRelayWithIO:deviceRole:completionHandler:]_block_invoke', 
                       '___77-[VCAudioManager internalSetupAudioRelayWithIO:deviceRole:completionHandler:]_block_invoke.576', 
                       '___77-[VCCallSession(PrivateMethods) processSIPMessage:msgOut:optional:confIndex:]_block_invoke', 
                       '___77-[VCVideoStreamRateController updateRTPReceiveWithTimestamp:sampleRate:time:]_block_invoke', 
                       '___78-[VCAudioManager cleanupAUIOSetupWithResult:completionHandler:ignoreRefCount:]_block_invoke', 
                       '___78-[VCAudioManager cleanupAUIOSetupWithResult:completionHandler:ignoreRefCount:]_block_invoke.192', 
                       '___79-[VCCallSession(Callbacks) sipCallback:callID:msgIn:msgOut:optional:confIndex:]_block_invoke', 
                       '___79-[VCCallSession(Callbacks) sipCallback:callID:msgIn:msgOut:optional:confIndex:]_block_invoke.1725', 
                       '___79-[VCVideoCaptureServer screenCaptureFrame:frameTime:droppedFrames:orientation:]_block_invoke', 
                       '___79-[VideoConference(SessionDelegate) session:localAudioEnabled:withCallID:error:]_block_invoke', 
                       '___80-[VCCallSession(PrivateMethods) notifyDelegateAndEndCall:didRemoteCancel:error:]_block_invoke', 
                       '___80-[VCCallSession(PrivateMethods) notifyDelegateAndEndCall:didRemoteCancel:error:]_block_invoke.1879', 
                       '___80-[VCCallSession(PrivateMethods) notifyDelegateAndEndCall:didRemoteCancel:error:]_block_invoke.1885', 
                       '___80-[VideoConference processRelayRequestResponse:responseDict:didOriginateRequest:]_block_invoke', 
                       '___80-[VideoConference(SessionDelegate) session:remoteCallingModeChanged:withCallID:]_block_invoke', 
                       '___80-[VideoConference(SessionDelegate) session:withCallID:videoIsDegraded:isRemote:]_block_invoke', 
                       '___81-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke', 
                       '___81-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke.183', 
                       '___81-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke.189', 
                       '___81-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke.195', 
                       '___81-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke_2', 
                       '___81-[VCCallSession(PrivateMethods) shutdownVoiceChatFromRemoteSIPSignal:withReason:]_block_invoke', 
                       '___81-[VCCallSession(PrivateMethods) shutdownVoiceChatFromRemoteSIPSignal:withReason:]_block_invoke.2734', 
                       '___81-[VCCallSession(PrivateMethods) shutdownVoiceChatFromRemoteSIPSignal:withReason:]_block_invoke.2740', 
                       '___82-[VideoConference(SessionDelegate) session:didReceiveData:messageType:withCallID:]_block_invoke', 
                       '___83-[VCTransportSessionLegacy setupInitialSecondaryRelayWithCallbackRelayFlag:callID:]_block_invoke', 
                       '___84-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]_block_invoke', 
                       '___84-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]_block_invoke.2921', 
                       '___84-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]_block_invoke_2', 
                       '___84-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]_block_invoke', 
                       '___84-[VCTransportSessionLegacy createSecondaryRelayDispatchTimer:callID:callerRequired:]_block_invoke', 
                       '___84-[VCTransportSessionLegacy createSecondaryRelayDispatchTimer:callID:callerRequired:]_block_invoke_2', 
                       '___86-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:sendRelayResponse:]_block_invoke', 
                       '___87-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:cancelRelayRequest:]_block_invoke', 
                       '___89-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:initiateRelayRequest:]_block_invoke', 
                       '___90-[VCCallSession setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:]_block_invoke', 
                       '___90-[VCMediaNegotiator negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:]_block_invoke', 
                       '___90-[VCTransport iceConnectedForCallID:result:didReceivePacket:useRelay:secretKey:skeResult:]_block_invoke', 
                       '___91-[VCCallSession(VCSecureDataChannelDelegate) vcSecureDataChannel:messageType:receivedData:]_block_invoke', 
                       '___92-[VCCallSession encodeAudio:numInputBytes:outputBytes:numOutputBytes:withPayload:isTalking:]_block_invoke', 
                       '___94-[VCVideoCaptureServer onCaptureFrame:frameTime:preview:droppedFrames:isSwitching:cameraType:]_block_invoke', 
                       '___94-[VCVideoCaptureServer onCaptureFrame:frameTime:preview:droppedFrames:isSwitching:cameraType:]_block_invoke.361', 
                       '___94-[VCVideoCaptureServer onCaptureFrame:frameTime:preview:droppedFrames:isSwitching:cameraType:]_block_invoke.368', 
                       '___94-[VCVideoCaptureServer onCaptureFrame:frameTime:preview:droppedFrames:isSwitching:cameraType:]_block_invoke.381', 
                       '___94-[VCVideoCaptureServer onCaptureFrame:frameTime:preview:droppedFrames:isSwitching:cameraType:]_block_invoke.388', 
                       '___98-[VCRemoteVideoManager connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:streamToken:]_block_invoke', 
                       ___AFRCCreateHandle_block_invoke, ___AUIOStart_block_invoke, 
                       ___AUIOStart_block_invoke_2, ___Block_byref_object_copy_, 
                       ___Block_byref_object_copy_, ___Block_byref_object_copy_, 
                       ___Block_byref_object_copy_, ___Block_byref_object_copy_, 
                       ___Block_byref_object_copy_, ___Block_byref_object_copy_, 
                       ___Block_byref_object_copy_, ___Block_byref_object_dispose_, 
                       ___Block_byref_object_dispose_, ___Block_byref_object_dispose_, 
                       ___Block_byref_object_dispose_, ___Block_byref_object_dispose_, 
                       ___Block_byref_object_dispose_, ___Block_byref_object_dispose_, 
                       ___Block_byref_object_dispose_, ___ConsumerThread_block_invoke, 
                       ___ProcessGetCallConfig_block_invoke, ___RecvMessageUDP_block_invoke, 
                       ___RecvMessageUDP_block_invoke.109, ___TPCellularConditionChangeCallback_block_invoke, 
                       ___TPConnectedCallback_block_invoke, ___TPNewCandidatesCallback_block_invoke, 
                       ___TPRemoveIPPort_block_invoke, ___TPSetICEConnectionCallback_block_invoke, 
                       ___TPSetupCTContext_block_invoke, ___TPShouldNominateICECandidatePair_block_invoke, 
                       ___VCAudioReceiver_Finalize_block_invoke, ___VCAudioReceiver_RegisterReportingTask_block_invoke, 
                       ___VCNAT64ResolveNAT64Prefix_block_invoke, ___VCNAT64ResolveNAT64Prefix_block_invoke_2, 
                       ___VRLogfileFree_block_invoke, ___VRLogfilePrintWithTimestamp_block_invoke, 
                       ___VRLogfilePrint_block_invoke, ___VTP_SendOnePacketWithDatagramChannelToken_block_invoke, 
                       ___VTP_SetIDSReadHandler_block_invoke, ___VideoReceiver_CreateHandle_block_invoke, 
                       ___VideoTransmitter_CreateHandle_block_invoke, ___VideoTransmitter_CreateHandle_block_invoke_2, 
                       ___VideoTransmitter_CreateHandle_block_invoke_3, 
                       ___WriteYuvFrame_block_invoke, ____VideoTransmitter_DispatchEncoderCallback_block_invoke, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp, 
                       ___block_descriptor_tmp, ___block_descriptor_tmp.100, 
                       ___block_descriptor_tmp.1004, ___block_descriptor_tmp.1009, 
                       ___block_descriptor_tmp.101, ___block_descriptor_tmp.101, 
                       ___block_descriptor_tmp.1016, ___block_descriptor_tmp.102, 
                       ___block_descriptor_tmp.102, ___block_descriptor_tmp.103, 
                       ___block_descriptor_tmp.103, ___block_descriptor_tmp.1031, 
                       ___block_descriptor_tmp.104, ___block_descriptor_tmp.1041, 
                       ___block_descriptor_tmp.1045, ___block_descriptor_tmp.1049, 
                       ___block_descriptor_tmp.1053, ___block_descriptor_tmp.1055, 
                       ___block_descriptor_tmp.1056, ___block_descriptor_tmp.106, 
                       ___block_descriptor_tmp.106, ___block_descriptor_tmp.1061, 
                       ___block_descriptor_tmp.1063, ___block_descriptor_tmp.1064, 
                       ___block_descriptor_tmp.107, ___block_descriptor_tmp.107, 
                       ___block_descriptor_tmp.107, ___block_descriptor_tmp.1070, 
                       ___block_descriptor_tmp.1076, ___block_descriptor_tmp.1078, 
                       ___block_descriptor_tmp.108, ___block_descriptor_tmp.1082, 
                       ___block_descriptor_tmp.1083, ___block_descriptor_tmp.1090, 
                       ___block_descriptor_tmp.1098, ___block_descriptor_tmp.1104, 
                       ___block_descriptor_tmp.111, ___block_descriptor_tmp.1110, 
                       ___block_descriptor_tmp.1118, ___block_descriptor_tmp.1119, 
                       ___block_descriptor_tmp.112, ___block_descriptor_tmp.112, 
                       ___block_descriptor_tmp.1124, ___block_descriptor_tmp.1129, 
                       ___block_descriptor_tmp.1129, ___block_descriptor_tmp.113, 
                       ___block_descriptor_tmp.113, ___block_descriptor_tmp.113, 
                       ___block_descriptor_tmp.1137, ___block_descriptor_tmp.1137, 
                       ___block_descriptor_tmp.1143, ___block_descriptor_tmp.1145, 
                       ___block_descriptor_tmp.115, ___block_descriptor_tmp.1150, 
                       ___block_descriptor_tmp.1151, ___block_descriptor_tmp.1155, 
                       ___block_descriptor_tmp.1157, ___block_descriptor_tmp.1158, 
                       ___block_descriptor_tmp.1163, ___block_descriptor_tmp.1163, 
                       ___block_descriptor_tmp.1168, ___block_descriptor_tmp.117, 
                       ___block_descriptor_tmp.1171, ___block_descriptor_tmp.1173, 
                       ___block_descriptor_tmp.1182, ___block_descriptor_tmp.119, 
                       ___block_descriptor_tmp.119, ___block_descriptor_tmp.1191, 
                       ___block_descriptor_tmp.1198, ___block_descriptor_tmp.120, 
                       ___block_descriptor_tmp.120, ___block_descriptor_tmp.120, 
                       ___block_descriptor_tmp.1204, ___block_descriptor_tmp.121, 
                       ___block_descriptor_tmp.1211, ___block_descriptor_tmp.1219, 
                       ___block_descriptor_tmp.122, ___block_descriptor_tmp.1225, 
                       ___block_descriptor_tmp.123, ___block_descriptor_tmp.1233, 
                       ___block_descriptor_tmp.1239, ___block_descriptor_tmp.124, 
                       ___block_descriptor_tmp.1245, ___block_descriptor_tmp.125, 
                       ___block_descriptor_tmp.125, ___block_descriptor_tmp.1251, 
                       ___block_descriptor_tmp.1259, ___block_descriptor_tmp.1266, 
                       ___block_descriptor_tmp.128, ___block_descriptor_tmp.129, 
                       ___block_descriptor_tmp.129, ___block_descriptor_tmp.129, 
                       ___block_descriptor_tmp.13, ___block_descriptor_tmp.130, 
                       ___block_descriptor_tmp.130, ___block_descriptor_tmp.131, 
                       ___block_descriptor_tmp.132, ___block_descriptor_tmp.1326, 
                       ___block_descriptor_tmp.133, ___block_descriptor_tmp.134, 
                       ___block_descriptor_tmp.135, ___block_descriptor_tmp.137, 
                       ___block_descriptor_tmp.137, ___block_descriptor_tmp.139, 
                       ___block_descriptor_tmp.140, ___block_descriptor_tmp.141, 
                       ___block_descriptor_tmp.143, ___block_descriptor_tmp.143, 
                       ___block_descriptor_tmp.144, ___block_descriptor_tmp.146, 
                       ___block_descriptor_tmp.147, ___block_descriptor_tmp.147, 
                       ___block_descriptor_tmp.147, ___block_descriptor_tmp.148, 
                       ___block_descriptor_tmp.149, ___block_descriptor_tmp.151, 
                       ___block_descriptor_tmp.153, ___block_descriptor_tmp.155, 
                       ___block_descriptor_tmp.155, ___block_descriptor_tmp.156, 
                       ___block_descriptor_tmp.157, ___block_descriptor_tmp.158, 
                       ___block_descriptor_tmp.158, ___block_descriptor_tmp.159, 
                       ___block_descriptor_tmp.159, ___block_descriptor_tmp.16, 
                       ___block_descriptor_tmp.160, ___block_descriptor_tmp.160, 
                       ___block_descriptor_tmp.160, ___block_descriptor_tmp.1610, 
                       ___block_descriptor_tmp.162, ___block_descriptor_tmp.162, 
                       ___block_descriptor_tmp.163, ___block_descriptor_tmp.163, 
                       ___block_descriptor_tmp.164, ___block_descriptor_tmp.164, 
                       ___block_descriptor_tmp.1667, ___block_descriptor_tmp.167, 
                       ___block_descriptor_tmp.167, ___block_descriptor_tmp.167, 
                       ___block_descriptor_tmp.169, ___block_descriptor_tmp.171, 
                       ___block_descriptor_tmp.172, ___block_descriptor_tmp.1722, 
                       ___block_descriptor_tmp.1728, ___block_descriptor_tmp.173, 
                       ___block_descriptor_tmp.174, ___block_descriptor_tmp.174, 
                       ___block_descriptor_tmp.175, ___block_descriptor_tmp.176, 
                       ___block_descriptor_tmp.176, ___block_descriptor_tmp.177, 
                       ___block_descriptor_tmp.177, ___block_descriptor_tmp.178, 
                       ___block_descriptor_tmp.179, ___block_descriptor_tmp.181, 
                       ___block_descriptor_tmp.181, ___block_descriptor_tmp.1810, 
                       ___block_descriptor_tmp.183, ___block_descriptor_tmp.1832, 
                       ___block_descriptor_tmp.184, ___block_descriptor_tmp.185, 
                       ___block_descriptor_tmp.185, ___block_descriptor_tmp.187, 
                       ___block_descriptor_tmp.187, ___block_descriptor_tmp.1878, 
                       ___block_descriptor_tmp.188, ___block_descriptor_tmp.188, 
                       ___block_descriptor_tmp.188, ___block_descriptor_tmp.1884, 
                       ___block_descriptor_tmp.189, ___block_descriptor_tmp.1892, 
                       ___block_descriptor_tmp.19, ___block_descriptor_tmp.190, 
                       ___block_descriptor_tmp.190, ___block_descriptor_tmp.192, 
                       ___block_descriptor_tmp.192, ___block_descriptor_tmp.192, 
                       ___block_descriptor_tmp.1929, ___block_descriptor_tmp.194, 
                       ___block_descriptor_tmp.1944, ___block_descriptor_tmp.195, 
                       ___block_descriptor_tmp.195, ___block_descriptor_tmp.1964, 
                       ___block_descriptor_tmp.197, ___block_descriptor_tmp.1972, 
                       ___block_descriptor_tmp.1975, ___block_descriptor_tmp.198, 
                       ___block_descriptor_tmp.199, ___block_descriptor_tmp.200, 
                       ___block_descriptor_tmp.201, ___block_descriptor_tmp.202, 
                       ___block_descriptor_tmp.203, ___block_descriptor_tmp.203, 
                       ___block_descriptor_tmp.204, ___block_descriptor_tmp.204, 
                       ___block_descriptor_tmp.206, ___block_descriptor_tmp.206, 
                       ___block_descriptor_tmp.207, ___block_descriptor_tmp.208, 
                       ___block_descriptor_tmp.208, ___block_descriptor_tmp.209, 
                       ___block_descriptor_tmp.209, ___block_descriptor_tmp.21, 
                       ___block_descriptor_tmp.21, ___block_descriptor_tmp.211, 
                       ___block_descriptor_tmp.212, ___block_descriptor_tmp.214, 
                       ___block_descriptor_tmp.2148, ___block_descriptor_tmp.2152, 
                       ___block_descriptor_tmp.216, ___block_descriptor_tmp.217, 
                       ___block_descriptor_tmp.220, ___block_descriptor_tmp.2211, 
                       ___block_descriptor_tmp.2215, ___block_descriptor_tmp.222, 
                       ___block_descriptor_tmp.222, ___block_descriptor_tmp.222, 
                       ___block_descriptor_tmp.223, ___block_descriptor_tmp.224, 
                       ___block_descriptor_tmp.225, ___block_descriptor_tmp.225, 
                       ___block_descriptor_tmp.228, ___block_descriptor_tmp.228, 
                       ___block_descriptor_tmp.229, ___block_descriptor_tmp.23, 
                       ___block_descriptor_tmp.230, ___block_descriptor_tmp.231, 
                       ___block_descriptor_tmp.232, ___block_descriptor_tmp.232, 
                       ___block_descriptor_tmp.233, ___block_descriptor_tmp.233, 
                       ___block_descriptor_tmp.235, ___block_descriptor_tmp.236, 
                       ___block_descriptor_tmp.236, ___block_descriptor_tmp.236, 
                       ___block_descriptor_tmp.236, ___block_descriptor_tmp.237, 
                       ___block_descriptor_tmp.238, ___block_descriptor_tmp.238, 
                       ___block_descriptor_tmp.2382, ___block_descriptor_tmp.2387, 
                       ___block_descriptor_tmp.239, ___block_descriptor_tmp.24, 
                       ___block_descriptor_tmp.24, ___block_descriptor_tmp.240, 
                       ___block_descriptor_tmp.240, ___block_descriptor_tmp.240, 
                       ___block_descriptor_tmp.2418, ___block_descriptor_tmp.242, 
                       ___block_descriptor_tmp.243, ___block_descriptor_tmp.243, 
                       ___block_descriptor_tmp.244, ___block_descriptor_tmp.245, 
                       ___block_descriptor_tmp.246, ___block_descriptor_tmp.246, 
                       ___block_descriptor_tmp.246, ___block_descriptor_tmp.2466, 
                       ___block_descriptor_tmp.247, ___block_descriptor_tmp.247, 
                       ___block_descriptor_tmp.2471, ___block_descriptor_tmp.2479, 
                       ___block_descriptor_tmp.2484, ___block_descriptor_tmp.2497, 
                       ___block_descriptor_tmp.25, ___block_descriptor_tmp.25, 
                       ___block_descriptor_tmp.25, ___block_descriptor_tmp.250, 
                       ___block_descriptor_tmp.250, ___block_descriptor_tmp.250, 
                       ___block_descriptor_tmp.2502, ___block_descriptor_tmp.252, 
                       ___block_descriptor_tmp.253, ___block_descriptor_tmp.253, 
                       ___block_descriptor_tmp.254, ___block_descriptor_tmp.255, 
                       ___block_descriptor_tmp.256, ___block_descriptor_tmp.2564, 
                       ___block_descriptor_tmp.257, ___block_descriptor_tmp.2574, 
                       ___block_descriptor_tmp.260, ___block_descriptor_tmp.261, 
                       ___block_descriptor_tmp.265, ___block_descriptor_tmp.265, 
                       ___block_descriptor_tmp.267, ___block_descriptor_tmp.267, 
                       ___block_descriptor_tmp.268, ___block_descriptor_tmp.268, 
                       ___block_descriptor_tmp.268, ___block_descriptor_tmp.2685, 
                       ___block_descriptor_tmp.27, ___block_descriptor_tmp.271, 
                       ___block_descriptor_tmp.272, ___block_descriptor_tmp.272, 
                       ___block_descriptor_tmp.2729, ___block_descriptor_tmp.2737, 
                       ___block_descriptor_tmp.274, ___block_descriptor_tmp.2743, 
                       ___block_descriptor_tmp.2748, ___block_descriptor_tmp.275, 
                       ___block_descriptor_tmp.2752, ___block_descriptor_tmp.276, 
                       ___block_descriptor_tmp.276, ___block_descriptor_tmp.2763, 
                       ___block_descriptor_tmp.277, ___block_descriptor_tmp.2771, 
                       ___block_descriptor_tmp.279, ___block_descriptor_tmp.2794, 
                       ___block_descriptor_tmp.28, ___block_descriptor_tmp.28, 
                       ___block_descriptor_tmp.28, ___block_descriptor_tmp.28, 
                       ___block_descriptor_tmp.282, ___block_descriptor_tmp.282, 
                       ___block_descriptor_tmp.283, ___block_descriptor_tmp.283, 
                       ___block_descriptor_tmp.2830, ___block_descriptor_tmp.285, 
                       ___block_descriptor_tmp.286, ___block_descriptor_tmp.287, 
                       ___block_descriptor_tmp.287, ___block_descriptor_tmp.2872, 
                       ___block_descriptor_tmp.288, ___block_descriptor_tmp.2880, 
                       ___block_descriptor_tmp.289, ___block_descriptor_tmp.29, 
                       ___block_descriptor_tmp.2903, ___block_descriptor_tmp.291, 
                       ___block_descriptor_tmp.291, ___block_descriptor_tmp.291, 
                       ___block_descriptor_tmp.2911, ___block_descriptor_tmp.292, 
                       ___block_descriptor_tmp.2924, ___block_descriptor_tmp.2929, 
                       ___block_descriptor_tmp.295, ___block_descriptor_tmp.297, 
                       ___block_descriptor_tmp.297, ___block_descriptor_tmp.299, 
                       ___block_descriptor_tmp.30, ___block_descriptor_tmp.300, 
                       ___block_descriptor_tmp.3010, ___block_descriptor_tmp.3015, 
                       ___block_descriptor_tmp.3018, ___block_descriptor_tmp.302, 
                       ___block_descriptor_tmp.302, ___block_descriptor_tmp.3029, 
                       ___block_descriptor_tmp.303, ___block_descriptor_tmp.3034, 
                       ___block_descriptor_tmp.3041, ___block_descriptor_tmp.305, 
                       ___block_descriptor_tmp.3053, ___block_descriptor_tmp.3056, 
                       ___block_descriptor_tmp.306, ___block_descriptor_tmp.3061, 
                       ___block_descriptor_tmp.307, ___block_descriptor_tmp.3075, 
                       ___block_descriptor_tmp.3080, ___block_descriptor_tmp.3085, 
                       ___block_descriptor_tmp.309, ___block_descriptor_tmp.309, 
                       ___block_descriptor_tmp.31, ___block_descriptor_tmp.31, 
                       ___block_descriptor_tmp.310, ___block_descriptor_tmp.311, 
                       ___block_descriptor_tmp.313, ___block_descriptor_tmp.317, 
                       ___block_descriptor_tmp.317, ___block_descriptor_tmp.318, 
                       ___block_descriptor_tmp.319, ___block_descriptor_tmp.320, 
                       ___block_descriptor_tmp.322, ___block_descriptor_tmp.322, 
                       ___block_descriptor_tmp.322, ___block_descriptor_tmp.323, 
                       ___block_descriptor_tmp.323, ___block_descriptor_tmp.326, 
                       ___block_descriptor_tmp.328, ___block_descriptor_tmp.329, 
                       ___block_descriptor_tmp.331, ___block_descriptor_tmp.332, 
                       ___block_descriptor_tmp.334, ___block_descriptor_tmp.336, 
                       ___block_descriptor_tmp.338, ___block_descriptor_tmp.34, 
                       ___block_descriptor_tmp.34, ___block_descriptor_tmp.34, 
                       ___block_descriptor_tmp.340, ___block_descriptor_tmp.340, 
                       ___block_descriptor_tmp.344, ___block_descriptor_tmp.345, 
                       ___block_descriptor_tmp.345, ___block_descriptor_tmp.346, 
                       ___block_descriptor_tmp.348, ___block_descriptor_tmp.35, 
                       ___block_descriptor_tmp.351, ___block_descriptor_tmp.352, 
                       ___block_descriptor_tmp.352, ___block_descriptor_tmp.354, 
                       ___block_descriptor_tmp.356, ___block_descriptor_tmp.356, 
                       ___block_descriptor_tmp.357, ___block_descriptor_tmp.359, 
                       ___block_descriptor_tmp.36, ___block_descriptor_tmp.36, 
                       ___block_descriptor_tmp.360, ___block_descriptor_tmp.361, 
                       ___block_descriptor_tmp.361, ___block_descriptor_tmp.362, 
                       ___block_descriptor_tmp.364, ___block_descriptor_tmp.366, 
                       ___block_descriptor_tmp.366, ___block_descriptor_tmp.366, 
                       ___block_descriptor_tmp.367, ___block_descriptor_tmp.369, 
                       ___block_descriptor_tmp.37, ___block_descriptor_tmp.370, 
                       ___block_descriptor_tmp.371, ___block_descriptor_tmp.372, 
                       ___block_descriptor_tmp.373, ___block_descriptor_tmp.374, 
                       ___block_descriptor_tmp.377, ___block_descriptor_tmp.378, 
                       ___block_descriptor_tmp.38, ___block_descriptor_tmp.380, 
                       ___block_descriptor_tmp.381, ___block_descriptor_tmp.382, 
                       ___block_descriptor_tmp.385, ___block_descriptor_tmp.385, 
                       ___block_descriptor_tmp.386, ___block_descriptor_tmp.392, 
                       ___block_descriptor_tmp.392, ___block_descriptor_tmp.395, 
                       ___block_descriptor_tmp.397, ___block_descriptor_tmp.397, 
                       ___block_descriptor_tmp.399, ___block_descriptor_tmp.400, 
                       ___block_descriptor_tmp.405, ___block_descriptor_tmp.406, 
                       ___block_descriptor_tmp.406, ___block_descriptor_tmp.408, 
                       ___block_descriptor_tmp.409, ___block_descriptor_tmp.41, 
                       ___block_descriptor_tmp.41, ___block_descriptor_tmp.410, 
                       ___block_descriptor_tmp.412, ___block_descriptor_tmp.413, 
                       ___block_descriptor_tmp.413, ___block_descriptor_tmp.413, 
                       ___block_descriptor_tmp.416, ___block_descriptor_tmp.417, 
                       ___block_descriptor_tmp.42, ___block_descriptor_tmp.42, 
                       ___block_descriptor_tmp.420, ___block_descriptor_tmp.422, 
                       ___block_descriptor_tmp.422, ___block_descriptor_tmp.424, 
                       ___block_descriptor_tmp.428, ___block_descriptor_tmp.43, 
                       ___block_descriptor_tmp.433, ___block_descriptor_tmp.435, 
                       ___block_descriptor_tmp.436, ___block_descriptor_tmp.440, 
                       ___block_descriptor_tmp.441, ___block_descriptor_tmp.442, 
                       ___block_descriptor_tmp.444, ___block_descriptor_tmp.446, 
                       ___block_descriptor_tmp.447, ___block_descriptor_tmp.449, 
                       ___block_descriptor_tmp.449, ___block_descriptor_tmp.45, 
                       ___block_descriptor_tmp.45, ___block_descriptor_tmp.451, 
                       ___block_descriptor_tmp.452, ___block_descriptor_tmp.454, 
                       ___block_descriptor_tmp.454, ___block_descriptor_tmp.457, 
                       ___block_descriptor_tmp.458, ___block_descriptor_tmp.459, 
                       ___block_descriptor_tmp.459, ___block_descriptor_tmp.46, 
                       ___block_descriptor_tmp.46, ___block_descriptor_tmp.460, 
                       ___block_descriptor_tmp.461, ___block_descriptor_tmp.464, 
                       ___block_descriptor_tmp.469, ___block_descriptor_tmp.47, 
                       ___block_descriptor_tmp.47, ___block_descriptor_tmp.47, 
                       ___block_descriptor_tmp.47, ___block_descriptor_tmp.47, 
                       ___block_descriptor_tmp.470, ___block_descriptor_tmp.474, 
                       ___block_descriptor_tmp.474, ___block_descriptor_tmp.475, 
                       ___block_descriptor_tmp.476, ___block_descriptor_tmp.476, 
                       ___block_descriptor_tmp.477, ___block_descriptor_tmp.48, 
                       ___block_descriptor_tmp.480, ___block_descriptor_tmp.484, 
                       ___block_descriptor_tmp.485, ___block_descriptor_tmp.487, 
                       ___block_descriptor_tmp.489, ___block_descriptor_tmp.49, 
                       ___block_descriptor_tmp.49, ___block_descriptor_tmp.49, 
                       ___block_descriptor_tmp.490, ___block_descriptor_tmp.495, 
                       ___block_descriptor_tmp.497, ___block_descriptor_tmp.499, 
                       ___block_descriptor_tmp.499, ___block_descriptor_tmp.501, 
                       ___block_descriptor_tmp.501, ___block_descriptor_tmp.502, 
                       ___block_descriptor_tmp.502, ___block_descriptor_tmp.504, 
                       ___block_descriptor_tmp.507, ___block_descriptor_tmp.507, 
                       ___block_descriptor_tmp.507, ___block_descriptor_tmp.509, 
                       ___block_descriptor_tmp.51, ___block_descriptor_tmp.510, 
                       ___block_descriptor_tmp.510, ___block_descriptor_tmp.511, 
                       ___block_descriptor_tmp.512, ___block_descriptor_tmp.515, 
                       ___block_descriptor_tmp.516, ___block_descriptor_tmp.519, 
                       ___block_descriptor_tmp.52, ___block_descriptor_tmp.520, 
                       ___block_descriptor_tmp.521, ___block_descriptor_tmp.522, 
                       ___block_descriptor_tmp.524, ___block_descriptor_tmp.524, 
                       ___block_descriptor_tmp.525, ___block_descriptor_tmp.525, 
                       ___block_descriptor_tmp.53, ___block_descriptor_tmp.53, 
                       ___block_descriptor_tmp.532, ___block_descriptor_tmp.534, 
                       ___block_descriptor_tmp.534, ___block_descriptor_tmp.534, 
                       ___block_descriptor_tmp.537, ___block_descriptor_tmp.54, 
                       ___block_descriptor_tmp.54, ___block_descriptor_tmp.54, 
                       ___block_descriptor_tmp.540, ___block_descriptor_tmp.542, 
                       ___block_descriptor_tmp.546, ___block_descriptor_tmp.549, 
                       ___block_descriptor_tmp.55, ___block_descriptor_tmp.552, 
                       ___block_descriptor_tmp.552, ___block_descriptor_tmp.552, 
                       ___block_descriptor_tmp.552, ___block_descriptor_tmp.555, 
                       ___block_descriptor_tmp.556, ___block_descriptor_tmp.56, 
                       ___block_descriptor_tmp.560, ___block_descriptor_tmp.560, 
                       ___block_descriptor_tmp.560, ___block_descriptor_tmp.561, 
                       ___block_descriptor_tmp.565, ___block_descriptor_tmp.567, 
                       ___block_descriptor_tmp.568, ___block_descriptor_tmp.568, 
                       ___block_descriptor_tmp.569, ___block_descriptor_tmp.57, 
                       ___block_descriptor_tmp.57, ___block_descriptor_tmp.571, 
                       ___block_descriptor_tmp.571, ___block_descriptor_tmp.573, 
                       ___block_descriptor_tmp.574, ___block_descriptor_tmp.577, 
                       ___block_descriptor_tmp.58, ___block_descriptor_tmp.581, 
                       ___block_descriptor_tmp.583, ___block_descriptor_tmp.586, 
                       ___block_descriptor_tmp.59, ___block_descriptor_tmp.59, 
                       ___block_descriptor_tmp.59, ___block_descriptor_tmp.590, 
                       ___block_descriptor_tmp.592, ___block_descriptor_tmp.60, 
                       ___block_descriptor_tmp.601, ___block_descriptor_tmp.602, 
                       ___block_descriptor_tmp.603, ___block_descriptor_tmp.607, 
                       ___block_descriptor_tmp.61, ___block_descriptor_tmp.61, 
                       ___block_descriptor_tmp.610, ___block_descriptor_tmp.610, 
                       ___block_descriptor_tmp.617, ___block_descriptor_tmp.619, 
                       ___block_descriptor_tmp.62, ___block_descriptor_tmp.62, 
                       ___block_descriptor_tmp.620, ___block_descriptor_tmp.624, 
                       ___block_descriptor_tmp.626, ___block_descriptor_tmp.626, 
                       ___block_descriptor_tmp.63, ___block_descriptor_tmp.63, 
                       ___block_descriptor_tmp.63, ___block_descriptor_tmp.630, 
                       ___block_descriptor_tmp.634, ___block_descriptor_tmp.64, 
                       ___block_descriptor_tmp.64, ___block_descriptor_tmp.64, 
                       ___block_descriptor_tmp.64, ___block_descriptor_tmp.663, 
                       ___block_descriptor_tmp.67, ___block_descriptor_tmp.69, 
                       ___block_descriptor_tmp.69, ___block_descriptor_tmp.70, 
                       ___block_descriptor_tmp.73, ___block_descriptor_tmp.76, 
                       ___block_descriptor_tmp.76, ___block_descriptor_tmp.76, 
                       ___block_descriptor_tmp.78, ___block_descriptor_tmp.8, 
                       ___block_descriptor_tmp.80, ___block_descriptor_tmp.80, 
                       ___block_descriptor_tmp.82, ___block_descriptor_tmp.83, 
                       ___block_descriptor_tmp.85, ___block_descriptor_tmp.86, 
                       ___block_descriptor_tmp.861, ___block_descriptor_tmp.873, 
                       ___block_descriptor_tmp.88, ___block_descriptor_tmp.88, 
                       ___block_descriptor_tmp.881, ___block_descriptor_tmp.89, 
                       ___block_descriptor_tmp.90, ___block_descriptor_tmp.908, 
                       ___block_descriptor_tmp.91, ___block_descriptor_tmp.911, 
                       ___block_descriptor_tmp.916, ___block_descriptor_tmp.92, 
                       ___block_descriptor_tmp.92, ___block_descriptor_tmp.927, 
                       ___block_descriptor_tmp.928, ___block_descriptor_tmp.930, 
                       ___block_descriptor_tmp.933, ___block_descriptor_tmp.936, 
                       ___block_descriptor_tmp.94, ___block_descriptor_tmp.949, 
                       ___block_descriptor_tmp.95, ___block_descriptor_tmp.95, 
                       ___block_descriptor_tmp.95, ___block_descriptor_tmp.956, 
                       ___block_descriptor_tmp.961, ___block_descriptor_tmp.966, 
                       ___block_descriptor_tmp.97, ___block_descriptor_tmp.973, 
                       ___block_descriptor_tmp.98, ___block_descriptor_tmp.99, 
                       ___block_descriptor_tmp.99, ___block_descriptor_tmp.992, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global, 
                       ___block_literal_global, ___block_literal_global.100, 
                       ___block_literal_global.103, ___block_literal_global.107, 
                       ___block_literal_global.112, ___block_literal_global.121, 
                       ___block_literal_global.121, ___block_literal_global.132, 
                       ___block_literal_global.133, ___block_literal_global.135, 
                       ___block_literal_global.140, ___block_literal_global.147, 
                       ___block_literal_global.148, ___block_literal_global.156, 
                       ___block_literal_global.163, ___block_literal_global.168, 
                       ___block_literal_global.180, ___block_literal_global.186, 
                       ___block_literal_global.191, ___block_literal_global.196, 
                       ___block_literal_global.198, ___block_literal_global.199, 
                       ___block_literal_global.204, ___block_literal_global.210, 
                       ___block_literal_global.226, ___block_literal_global.234, 
                       ___block_literal_global.240, ___block_literal_global.244, 
                       ___block_literal_global.248, ___block_literal_global.254, 
                       ___block_literal_global.262, ___block_literal_global.268, 
                       ___block_literal_global.277, ___block_literal_global.278, 
                       ___block_literal_global.283, ___block_literal_global.284, 
                       ___block_literal_global.292, ___block_literal_global.292, 
                       ___block_literal_global.298, ___block_literal_global.301, 
                       ___block_literal_global.306, ___block_literal_global.310, 
                       ___block_literal_global.311, ___block_literal_global.318, 
                       ___block_literal_global.319, ___block_literal_global.323, 
                       ___block_literal_global.329, ___block_literal_global.332, 
                       ___block_literal_global.337, ___block_literal_global.339, 
                       ___block_literal_global.345, ___block_literal_global.346, 
                       ___block_literal_global.352, ___block_literal_global.353, 
                       ___block_literal_global.358, ___block_literal_global.360, 
                       ___block_literal_global.363, ___block_literal_global.367, 
                       ___block_literal_global.367, ___block_literal_global.372, 
                       ___block_literal_global.379, ___block_literal_global.386, 
                       ___block_literal_global.386, ___block_literal_global.393, 
                       ___block_literal_global.398, ___block_literal_global.407, 
                       ___block_literal_global.414, ___block_literal_global.421, 
                       ___block_literal_global.429, ___block_literal_global.436, 
                       ___block_literal_global.443, ___block_literal_global.450, 
                       ___block_literal_global.455, ___block_literal_global.460, 
                       ___block_literal_global.465, ___block_literal_global.477, 
                       ___block_literal_global.486, ___block_literal_global.491, 
                       ___block_literal_global.498, ___block_literal_global.503, 
                       ___block_literal_global.510, ___block_literal_global.517, 
                       ___block_literal_global.526, ___block_literal_global.533, 
                       ___block_literal_global.556, ___block_literal_global.572, 
                       ___block_literal_global.587, ___block_literal_global.59, 
                       ___block_literal_global.74, ___block_literal_global.86, 
                       ___block_literal_global.93, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_, ___copy_helper_block_, 
                       ___copy_helper_block_, ___copy_helper_block_.100, 
                       ___copy_helper_block_.1002, ___copy_helper_block_.1007, 
                       ___copy_helper_block_.101, ___copy_helper_block_.101, 
                       ___copy_helper_block_.1014, ___copy_helper_block_.102, 
                       ___copy_helper_block_.1029, ___copy_helper_block_.1039, 
                       ___copy_helper_block_.104, ___copy_helper_block_.1043, 
                       ___copy_helper_block_.1047, ___copy_helper_block_.1051, 
                       ___copy_helper_block_.1053, ___copy_helper_block_.1054, 
                       ___copy_helper_block_.1059, ___copy_helper_block_.106, 
                       ___copy_helper_block_.1061, ___copy_helper_block_.1062, 
                       ___copy_helper_block_.1068, ___copy_helper_block_.1074, 
                       ___copy_helper_block_.1076, ___copy_helper_block_.1080, 
                       ___copy_helper_block_.1081, ___copy_helper_block_.1088, 
                       ___copy_helper_block_.109, ___copy_helper_block_.1096, 
                       ___copy_helper_block_.11, ___copy_helper_block_.110, 
                       ___copy_helper_block_.110, ___copy_helper_block_.1102, 
                       ___copy_helper_block_.1108, ___copy_helper_block_.111, 
                       ___copy_helper_block_.111, ___copy_helper_block_.1116, 
                       ___copy_helper_block_.1117, ___copy_helper_block_.1122, 
                       ___copy_helper_block_.1127, ___copy_helper_block_.1127, 
                       ___copy_helper_block_.113, ___copy_helper_block_.1135, 
                       ___copy_helper_block_.1135, ___copy_helper_block_.1141, 
                       ___copy_helper_block_.1143, ___copy_helper_block_.1148, 
                       ___copy_helper_block_.1149, ___copy_helper_block_.115, 
                       ___copy_helper_block_.1153, ___copy_helper_block_.1155, 
                       ___copy_helper_block_.1156, ___copy_helper_block_.1161, 
                       ___copy_helper_block_.1161, ___copy_helper_block_.1166, 
                       ___copy_helper_block_.1169, ___copy_helper_block_.117, 
                       ___copy_helper_block_.1171, ___copy_helper_block_.118, 
                       ___copy_helper_block_.1180, ___copy_helper_block_.1189, 
                       ___copy_helper_block_.1196, ___copy_helper_block_.120, 
                       ___copy_helper_block_.1202, ___copy_helper_block_.1209, 
                       ___copy_helper_block_.121, ___copy_helper_block_.1217, 
                       ___copy_helper_block_.122, ___copy_helper_block_.1223, 
                       ___copy_helper_block_.123, ___copy_helper_block_.1231, 
                       ___copy_helper_block_.1237, ___copy_helper_block_.1243, 
                       ___copy_helper_block_.1249, ___copy_helper_block_.125, 
                       ___copy_helper_block_.1257, ___copy_helper_block_.1264, 
                       ___copy_helper_block_.127, ___copy_helper_block_.127, 
                       ___copy_helper_block_.128, ___copy_helper_block_.128, 
                       ___copy_helper_block_.131, ___copy_helper_block_.1324, 
                       ___copy_helper_block_.133, ___copy_helper_block_.135, 
                       ___copy_helper_block_.135, ___copy_helper_block_.138, 
                       ___copy_helper_block_.139, ___copy_helper_block_.14, 
                       ___copy_helper_block_.141, ___copy_helper_block_.142, 
                       ___copy_helper_block_.145, ___copy_helper_block_.145, 
                       ___copy_helper_block_.145, ___copy_helper_block_.147, 
                       ___copy_helper_block_.149, ___copy_helper_block_.151, 
                       ___copy_helper_block_.153, ___copy_helper_block_.153, 
                       ___copy_helper_block_.155, ___copy_helper_block_.156, 
                       ___copy_helper_block_.156, ___copy_helper_block_.157, 
                       ___copy_helper_block_.158, ___copy_helper_block_.158, 
                       ___copy_helper_block_.160, ___copy_helper_block_.1608, 
                       ___copy_helper_block_.161, ___copy_helper_block_.161, 
                       ___copy_helper_block_.162, ___copy_helper_block_.162, 
                       ___copy_helper_block_.165, ___copy_helper_block_.1665, 
                       ___copy_helper_block_.167, ___copy_helper_block_.169, 
                       ___copy_helper_block_.17, ___copy_helper_block_.170, 
                       ___copy_helper_block_.170, ___copy_helper_block_.172, 
                       ___copy_helper_block_.172, ___copy_helper_block_.1720, 
                       ___copy_helper_block_.1726, ___copy_helper_block_.173, 
                       ___copy_helper_block_.173, ___copy_helper_block_.174, 
                       ___copy_helper_block_.175, ___copy_helper_block_.176, 
                       ___copy_helper_block_.179, ___copy_helper_block_.179, 
                       ___copy_helper_block_.18, ___copy_helper_block_.1807, 
                       ___copy_helper_block_.182, ___copy_helper_block_.183, 
                       ___copy_helper_block_.1830, ___copy_helper_block_.185, 
                       ___copy_helper_block_.185, ___copy_helper_block_.186, 
                       ___copy_helper_block_.186, ___copy_helper_block_.186, 
                       ___copy_helper_block_.187, ___copy_helper_block_.1876, 
                       ___copy_helper_block_.188, ___copy_helper_block_.1882, 
                       ___copy_helper_block_.1890, ___copy_helper_block_.19, 
                       ___copy_helper_block_.190, ___copy_helper_block_.190, 
                       ___copy_helper_block_.190, ___copy_helper_block_.192, 
                       ___copy_helper_block_.1927, ___copy_helper_block_.193, 
                       ___copy_helper_block_.1942, ___copy_helper_block_.1962, 
                       ___copy_helper_block_.197, ___copy_helper_block_.1970, 
                       ___copy_helper_block_.1973, ___copy_helper_block_.198, 
                       ___copy_helper_block_.199, ___copy_helper_block_.201, 
                       ___copy_helper_block_.202, ___copy_helper_block_.202, 
                       ___copy_helper_block_.204, ___copy_helper_block_.206, 
                       ___copy_helper_block_.206, ___copy_helper_block_.207, 
                       ___copy_helper_block_.209, ___copy_helper_block_.210, 
                       ___copy_helper_block_.212, ___copy_helper_block_.213, 
                       ___copy_helper_block_.2146, ___copy_helper_block_.215, 
                       ___copy_helper_block_.2150, ___copy_helper_block_.218, 
                       ___copy_helper_block_.22, ___copy_helper_block_.22, 
                       ___copy_helper_block_.220, ___copy_helper_block_.220, 
                       ___copy_helper_block_.220, ___copy_helper_block_.221, 
                       ___copy_helper_block_.222, ___copy_helper_block_.223, 
                       ___copy_helper_block_.225, ___copy_helper_block_.226, 
                       ___copy_helper_block_.227, ___copy_helper_block_.227, 
                       ___copy_helper_block_.229, ___copy_helper_block_.23, 
                       ___copy_helper_block_.23, ___copy_helper_block_.230, 
                       ___copy_helper_block_.230, ___copy_helper_block_.231, 
                       ___copy_helper_block_.233, ___copy_helper_block_.233, 
                       ___copy_helper_block_.234, ___copy_helper_block_.234, 
                       ___copy_helper_block_.234, ___copy_helper_block_.235, 
                       ___copy_helper_block_.236, ___copy_helper_block_.236, 
                       ___copy_helper_block_.238, ___copy_helper_block_.238, 
                       ___copy_helper_block_.238, ___copy_helper_block_.2380, 
                       ___copy_helper_block_.240, ___copy_helper_block_.241, 
                       ___copy_helper_block_.2416, ___copy_helper_block_.242, 
                       ___copy_helper_block_.243, ___copy_helper_block_.244, 
                       ___copy_helper_block_.244, ___copy_helper_block_.244, 
                       ___copy_helper_block_.245, ___copy_helper_block_.2463, 
                       ___copy_helper_block_.2469, ___copy_helper_block_.2477, 
                       ___copy_helper_block_.248, ___copy_helper_block_.248, 
                       ___copy_helper_block_.248, ___copy_helper_block_.2482, 
                       ___copy_helper_block_.2495, ___copy_helper_block_.25, 
                       ___copy_helper_block_.250, ___copy_helper_block_.2500, 
                       ___copy_helper_block_.251, ___copy_helper_block_.252, 
                       ___copy_helper_block_.253, ___copy_helper_block_.254, 
                       ___copy_helper_block_.255, ___copy_helper_block_.2562, 
                       ___copy_helper_block_.2572, ___copy_helper_block_.258, 
                       ___copy_helper_block_.26, ___copy_helper_block_.26, 
                       ___copy_helper_block_.26, ___copy_helper_block_.263, 
                       ___copy_helper_block_.263, ___copy_helper_block_.265, 
                       ___copy_helper_block_.266, ___copy_helper_block_.266, 
                       ___copy_helper_block_.266, ___copy_helper_block_.269, 
                       ___copy_helper_block_.27, ___copy_helper_block_.270, 
                       ___copy_helper_block_.270, ___copy_helper_block_.272, 
                       ___copy_helper_block_.2727, ___copy_helper_block_.273, 
                       ___copy_helper_block_.2735, ___copy_helper_block_.274, 
                       ___copy_helper_block_.2741, ___copy_helper_block_.2746, 
                       ___copy_helper_block_.2750, ___copy_helper_block_.2761, 
                       ___copy_helper_block_.2769, ___copy_helper_block_.277, 
                       ___copy_helper_block_.2792, ___copy_helper_block_.28, 
                       ___copy_helper_block_.280, ___copy_helper_block_.281, 
                       ___copy_helper_block_.2827, ___copy_helper_block_.283, 
                       ___copy_helper_block_.284, ___copy_helper_block_.285, 
                       ___copy_helper_block_.285, ___copy_helper_block_.286, 
                       ___copy_helper_block_.287, ___copy_helper_block_.2870, 
                       ___copy_helper_block_.2878, ___copy_helper_block_.289, 
                       ___copy_helper_block_.290, ___copy_helper_block_.2901, 
                       ___copy_helper_block_.2909, ___copy_helper_block_.2922, 
                       ___copy_helper_block_.2927, ___copy_helper_block_.293, 
                       ___copy_helper_block_.295, ___copy_helper_block_.297, 
                       ___copy_helper_block_.300, ___copy_helper_block_.300, 
                       ___copy_helper_block_.3007, ___copy_helper_block_.301, 
                       ___copy_helper_block_.3013, ___copy_helper_block_.3016, 
                       ___copy_helper_block_.3027, ___copy_helper_block_.3032, 
                       ___copy_helper_block_.3039, ___copy_helper_block_.304, 
                       ___copy_helper_block_.305, ___copy_helper_block_.3051, 
                       ___copy_helper_block_.3054, ___copy_helper_block_.3059, 
                       ___copy_helper_block_.307, ___copy_helper_block_.3073, 
                       ___copy_helper_block_.3078, ___copy_helper_block_.3083, 
                       ___copy_helper_block_.309, ___copy_helper_block_.31, 
                       ___copy_helper_block_.311, ___copy_helper_block_.315, 
                       ___copy_helper_block_.317, ___copy_helper_block_.318, 
                       ___copy_helper_block_.32, ___copy_helper_block_.32, 
                       ___copy_helper_block_.320, ___copy_helper_block_.320, 
                       ___copy_helper_block_.321, ___copy_helper_block_.324, 
                       ___copy_helper_block_.327, ___copy_helper_block_.33, 
                       ___copy_helper_block_.33, ___copy_helper_block_.330, 
                       ___copy_helper_block_.332, ___copy_helper_block_.338, 
                       ___copy_helper_block_.338, ___copy_helper_block_.342, 
                       ___copy_helper_block_.344, ___copy_helper_block_.346, 
                       ___copy_helper_block_.35, ___copy_helper_block_.350, 
                       ___copy_helper_block_.352, ___copy_helper_block_.354, 
                       ___copy_helper_block_.358, ___copy_helper_block_.359, 
                       ___copy_helper_block_.359, ___copy_helper_block_.36, 
                       ___copy_helper_block_.361, ___copy_helper_block_.364, 
                       ___copy_helper_block_.365, ___copy_helper_block_.367, 
                       ___copy_helper_block_.368, ___copy_helper_block_.370, 
                       ___copy_helper_block_.371, ___copy_helper_block_.372, 
                       ___copy_helper_block_.374, ___copy_helper_block_.378, 
                       ___copy_helper_block_.378, ___copy_helper_block_.380, 
                       ___copy_helper_block_.384, ___copy_helper_block_.39, 
                       ___copy_helper_block_.39, ___copy_helper_block_.39, 
                       ___copy_helper_block_.390, ___copy_helper_block_.393, 
                       ___copy_helper_block_.395, ___copy_helper_block_.397, 
                       ___copy_helper_block_.398, ___copy_helper_block_.40, 
                       ___copy_helper_block_.403, ___copy_helper_block_.404, 
                       ___copy_helper_block_.406, ___copy_helper_block_.407, 
                       ___copy_helper_block_.408, ___copy_helper_block_.409, 
                       ___copy_helper_block_.41, ___copy_helper_block_.410, 
                       ___copy_helper_block_.411, ___copy_helper_block_.414, 
                       ___copy_helper_block_.415, ___copy_helper_block_.419, 
                       ___copy_helper_block_.420, ___copy_helper_block_.422, 
                       ___copy_helper_block_.43, ___copy_helper_block_.43, 
                       ___copy_helper_block_.431, ___copy_helper_block_.434, 
                       ___copy_helper_block_.437, ___copy_helper_block_.439, 
                       ___copy_helper_block_.44, ___copy_helper_block_.442, 
                       ___copy_helper_block_.444, ___copy_helper_block_.445, 
                       ___copy_helper_block_.447, ___copy_helper_block_.448, 
                       ___copy_helper_block_.45, ___copy_helper_block_.45, 
                       ___copy_helper_block_.45, ___copy_helper_block_.450, 
                       ___copy_helper_block_.452, ___copy_helper_block_.455, 
                       ___copy_helper_block_.456, ___copy_helper_block_.457, 
                       ___copy_helper_block_.458, ___copy_helper_block_.459, 
                       ___copy_helper_block_.46, ___copy_helper_block_.467, 
                       ___copy_helper_block_.468, ___copy_helper_block_.47, 
                       ___copy_helper_block_.47, ___copy_helper_block_.47, 
                       ___copy_helper_block_.472, ___copy_helper_block_.472, 
                       ___copy_helper_block_.473, ___copy_helper_block_.474, 
                       ___copy_helper_block_.475, ___copy_helper_block_.478, 
                       ___copy_helper_block_.482, ___copy_helper_block_.485, 
                       ___copy_helper_block_.487, ___copy_helper_block_.49, 
                       ___copy_helper_block_.493, ___copy_helper_block_.496, 
                       ___copy_helper_block_.497, ___copy_helper_block_.499, 
                       ___copy_helper_block_.499, ___copy_helper_block_.50, 
                       ___copy_helper_block_.500, ___copy_helper_block_.502, 
                       ___copy_helper_block_.505, ___copy_helper_block_.505, 
                       ___copy_helper_block_.505, ___copy_helper_block_.508, 
                       ___copy_helper_block_.508, ___copy_helper_block_.509, 
                       ___copy_helper_block_.51, ___copy_helper_block_.51, 
                       ___copy_helper_block_.510, ___copy_helper_block_.513, 
                       ___copy_helper_block_.517, ___copy_helper_block_.518, 
                       ___copy_helper_block_.519, ___copy_helper_block_.52, 
                       ___copy_helper_block_.52, ___copy_helper_block_.520, 
                       ___copy_helper_block_.522, ___copy_helper_block_.522, 
                       ___copy_helper_block_.523, ___copy_helper_block_.53, 
                       ___copy_helper_block_.532, ___copy_helper_block_.532, 
                       ___copy_helper_block_.532, ___copy_helper_block_.535, 
                       ___copy_helper_block_.538, ___copy_helper_block_.54, 
                       ___copy_helper_block_.540, ___copy_helper_block_.544, 
                       ___copy_helper_block_.547, ___copy_helper_block_.55, 
                       ___copy_helper_block_.55, ___copy_helper_block_.550, 
                       ___copy_helper_block_.550, ___copy_helper_block_.550, 
                       ___copy_helper_block_.550, ___copy_helper_block_.554, 
                       ___copy_helper_block_.558, ___copy_helper_block_.558, 
                       ___copy_helper_block_.558, ___copy_helper_block_.559, 
                       ___copy_helper_block_.563, ___copy_helper_block_.565, 
                       ___copy_helper_block_.566, ___copy_helper_block_.566, 
                       ___copy_helper_block_.566, ___copy_helper_block_.569, 
                       ___copy_helper_block_.57, ___copy_helper_block_.57, 
                       ___copy_helper_block_.57, ___copy_helper_block_.571, 
                       ___copy_helper_block_.572, ___copy_helper_block_.575, 
                       ___copy_helper_block_.579, ___copy_helper_block_.58, 
                       ___copy_helper_block_.581, ___copy_helper_block_.588, 
                       ___copy_helper_block_.59, ___copy_helper_block_.59, 
                       ___copy_helper_block_.590, ___copy_helper_block_.599, 
                       ___copy_helper_block_.6, ___copy_helper_block_.60, 
                       ___copy_helper_block_.60, ___copy_helper_block_.60, 
                       ___copy_helper_block_.600, ___copy_helper_block_.600, 
                       ___copy_helper_block_.605, ___copy_helper_block_.607, 
                       ___copy_helper_block_.608, ___copy_helper_block_.61, 
                       ___copy_helper_block_.61, ___copy_helper_block_.615, 
                       ___copy_helper_block_.616, ___copy_helper_block_.618, 
                       ___copy_helper_block_.62, ___copy_helper_block_.62, 
                       ___copy_helper_block_.622, ___copy_helper_block_.623, 
                       ___copy_helper_block_.623, ___copy_helper_block_.628, 
                       ___copy_helper_block_.632, ___copy_helper_block_.65, 
                       ___copy_helper_block_.66, ___copy_helper_block_.660, 
                       ___copy_helper_block_.74, ___copy_helper_block_.74, 
                       ___copy_helper_block_.74, ___copy_helper_block_.76, 
                       ___copy_helper_block_.78, ___copy_helper_block_.78, 
                       ___copy_helper_block_.80, ___copy_helper_block_.81, 
                       ___copy_helper_block_.84, ___copy_helper_block_.858, 
                       ___copy_helper_block_.86, ___copy_helper_block_.86, 
                       ___copy_helper_block_.87, ___copy_helper_block_.871, 
                       ___copy_helper_block_.879, ___copy_helper_block_.88, 
                       ___copy_helper_block_.89, ___copy_helper_block_.90, 
                       ___copy_helper_block_.906, ___copy_helper_block_.909, 
                       ___copy_helper_block_.914, ___copy_helper_block_.924, 
                       ___copy_helper_block_.926, ___copy_helper_block_.928, 
                       ___copy_helper_block_.93, ___copy_helper_block_.93, 
                       ___copy_helper_block_.93, ___copy_helper_block_.931, 
                       ___copy_helper_block_.934, ___copy_helper_block_.947, 
                       ___copy_helper_block_.95, ___copy_helper_block_.954, 
                       ___copy_helper_block_.959, ___copy_helper_block_.96, 
                       ___copy_helper_block_.964, ___copy_helper_block_.97, 
                       ___copy_helper_block_.971, ___copy_helper_block_.98, 
                       ___copy_helper_block_.99, ___copy_helper_block_.99, 
                       ___copy_helper_block_.990, ___deriveFullFilename_block_invoke, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_, 
                       ___destroy_helper_block_, ___destroy_helper_block_.100, 
                       ___destroy_helper_block_.100, ___destroy_helper_block_.1003, 
                       ___destroy_helper_block_.1008, ___destroy_helper_block_.101, 
                       ___destroy_helper_block_.1015, ___destroy_helper_block_.102, 
                       ___destroy_helper_block_.102, ___destroy_helper_block_.103, 
                       ___destroy_helper_block_.1030, ___destroy_helper_block_.1040, 
                       ___destroy_helper_block_.1044, ___destroy_helper_block_.1048, 
                       ___destroy_helper_block_.105, ___destroy_helper_block_.1052, 
                       ___destroy_helper_block_.1054, ___destroy_helper_block_.1055, 
                       ___destroy_helper_block_.1060, ___destroy_helper_block_.1062, 
                       ___destroy_helper_block_.1063, ___destroy_helper_block_.1069, 
                       ___destroy_helper_block_.107, ___destroy_helper_block_.1075, 
                       ___destroy_helper_block_.1077, ___destroy_helper_block_.1081, 
                       ___destroy_helper_block_.1082, ___destroy_helper_block_.1089, 
                       ___destroy_helper_block_.1097, ___destroy_helper_block_.110, 
                       ___destroy_helper_block_.1103, ___destroy_helper_block_.1109, 
                       ___destroy_helper_block_.111, ___destroy_helper_block_.111, 
                       ___destroy_helper_block_.1117, ___destroy_helper_block_.1118, 
                       ___destroy_helper_block_.112, ___destroy_helper_block_.112, 
                       ___destroy_helper_block_.1123, ___destroy_helper_block_.1128, 
                       ___destroy_helper_block_.1128, ___destroy_helper_block_.1136, 
                       ___destroy_helper_block_.1136, ___destroy_helper_block_.114, 
                       ___destroy_helper_block_.1142, ___destroy_helper_block_.1144, 
                       ___destroy_helper_block_.1149, ___destroy_helper_block_.1150, 
                       ___destroy_helper_block_.1154, ___destroy_helper_block_.1156, 
                       ___destroy_helper_block_.1157, ___destroy_helper_block_.116, 
                       ___destroy_helper_block_.1162, ___destroy_helper_block_.1162, 
                       ___destroy_helper_block_.1167, ___destroy_helper_block_.1170, 
                       ___destroy_helper_block_.1172, ___destroy_helper_block_.118, 
                       ___destroy_helper_block_.1181, ___destroy_helper_block_.119, 
                       ___destroy_helper_block_.1190, ___destroy_helper_block_.1197, 
                       ___destroy_helper_block_.12, ___destroy_helper_block_.1203, 
                       ___destroy_helper_block_.121, ___destroy_helper_block_.1210, 
                       ___destroy_helper_block_.1218, ___destroy_helper_block_.122, 
                       ___destroy_helper_block_.1224, ___destroy_helper_block_.123, 
                       ___destroy_helper_block_.1232, ___destroy_helper_block_.1238, 
                       ___destroy_helper_block_.124, ___destroy_helper_block_.1244, 
                       ___destroy_helper_block_.1250, ___destroy_helper_block_.1258, 
                       ___destroy_helper_block_.126, ___destroy_helper_block_.1265, 
                       ___destroy_helper_block_.128, ___destroy_helper_block_.128, 
                       ___destroy_helper_block_.129, ___destroy_helper_block_.129, 
                       ___destroy_helper_block_.132, ___destroy_helper_block_.1325, 
                       ___destroy_helper_block_.134, ___destroy_helper_block_.136, 
                       ___destroy_helper_block_.136, ___destroy_helper_block_.139, 
                       ___destroy_helper_block_.140, ___destroy_helper_block_.142, 
                       ___destroy_helper_block_.143, ___destroy_helper_block_.146, 
                       ___destroy_helper_block_.146, ___destroy_helper_block_.146, 
                       ___destroy_helper_block_.148, ___destroy_helper_block_.15, 
                       ___destroy_helper_block_.150, ___destroy_helper_block_.152, 
                       ___destroy_helper_block_.154, ___destroy_helper_block_.154, 
                       ___destroy_helper_block_.156, ___destroy_helper_block_.157, 
                       ___destroy_helper_block_.157, ___destroy_helper_block_.158, 
                       ___destroy_helper_block_.159, ___destroy_helper_block_.159, 
                       ___destroy_helper_block_.1609, ___destroy_helper_block_.161, 
                       ___destroy_helper_block_.162, ___destroy_helper_block_.162, 
                       ___destroy_helper_block_.163, ___destroy_helper_block_.163, 
                       ___destroy_helper_block_.166, ___destroy_helper_block_.1666, 
                       ___destroy_helper_block_.168, ___destroy_helper_block_.170, 
                       ___destroy_helper_block_.171, ___destroy_helper_block_.171, 
                       ___destroy_helper_block_.1721, ___destroy_helper_block_.1727, 
                       ___destroy_helper_block_.173, ___destroy_helper_block_.173, 
                       ___destroy_helper_block_.174, ___destroy_helper_block_.174, 
                       ___destroy_helper_block_.175, ___destroy_helper_block_.176, 
                       ___destroy_helper_block_.177, ___destroy_helper_block_.18, 
                       ___destroy_helper_block_.180, ___destroy_helper_block_.180, 
                       ___destroy_helper_block_.1808, ___destroy_helper_block_.183, 
                       ___destroy_helper_block_.1831, ___destroy_helper_block_.184, 
                       ___destroy_helper_block_.186, ___destroy_helper_block_.186, 
                       ___destroy_helper_block_.187, ___destroy_helper_block_.187, 
                       ___destroy_helper_block_.187, ___destroy_helper_block_.1877, 
                       ___destroy_helper_block_.188, ___destroy_helper_block_.1883, 
                       ___destroy_helper_block_.189, ___destroy_helper_block_.1891, 
                       ___destroy_helper_block_.19, ___destroy_helper_block_.191, 
                       ___destroy_helper_block_.191, ___destroy_helper_block_.191, 
                       ___destroy_helper_block_.1928, ___destroy_helper_block_.193, 
                       ___destroy_helper_block_.194, ___destroy_helper_block_.1943, 
                       ___destroy_helper_block_.1963, ___destroy_helper_block_.1971, 
                       ___destroy_helper_block_.1974, ___destroy_helper_block_.198, 
                       ___destroy_helper_block_.199, ___destroy_helper_block_.20, 
                       ___destroy_helper_block_.200, ___destroy_helper_block_.202, 
                       ___destroy_helper_block_.203, ___destroy_helper_block_.203, 
                       ___destroy_helper_block_.205, ___destroy_helper_block_.207, 
                       ___destroy_helper_block_.207, ___destroy_helper_block_.208, 
                       ___destroy_helper_block_.210, ___destroy_helper_block_.211, 
                       ___destroy_helper_block_.213, ___destroy_helper_block_.214, 
                       ___destroy_helper_block_.2147, ___destroy_helper_block_.2151, 
                       ___destroy_helper_block_.216, ___destroy_helper_block_.219, 
                       ___destroy_helper_block_.221, ___destroy_helper_block_.221, 
                       ___destroy_helper_block_.221, ___destroy_helper_block_.222, 
                       ___destroy_helper_block_.223, ___destroy_helper_block_.224, 
                       ___destroy_helper_block_.226, ___destroy_helper_block_.227, 
                       ___destroy_helper_block_.228, ___destroy_helper_block_.228, 
                       ___destroy_helper_block_.23, ___destroy_helper_block_.23, 
                       ___destroy_helper_block_.230, ___destroy_helper_block_.231, 
                       ___destroy_helper_block_.231, ___destroy_helper_block_.232, 
                       ___destroy_helper_block_.234, ___destroy_helper_block_.234, 
                       ___destroy_helper_block_.235, ___destroy_helper_block_.235, 
                       ___destroy_helper_block_.235, ___destroy_helper_block_.236, 
                       ___destroy_helper_block_.237, ___destroy_helper_block_.237, 
                       ___destroy_helper_block_.2381, ___destroy_helper_block_.239, 
                       ___destroy_helper_block_.239, ___destroy_helper_block_.239, 
                       ___destroy_helper_block_.24, ___destroy_helper_block_.24, 
                       ___destroy_helper_block_.241, ___destroy_helper_block_.2417, 
                       ___destroy_helper_block_.242, ___destroy_helper_block_.243, 
                       ___destroy_helper_block_.244, ___destroy_helper_block_.245, 
                       ___destroy_helper_block_.245, ___destroy_helper_block_.245, 
                       ___destroy_helper_block_.246, ___destroy_helper_block_.2464, 
                       ___destroy_helper_block_.2470, ___destroy_helper_block_.2478, 
                       ___destroy_helper_block_.2483, ___destroy_helper_block_.249, 
                       ___destroy_helper_block_.249, ___destroy_helper_block_.249, 
                       ___destroy_helper_block_.2496, ___destroy_helper_block_.2501, 
                       ___destroy_helper_block_.251, ___destroy_helper_block_.252, 
                       ___destroy_helper_block_.253, ___destroy_helper_block_.254, 
                       ___destroy_helper_block_.255, ___destroy_helper_block_.256, 
                       ___destroy_helper_block_.2563, ___destroy_helper_block_.2573, 
                       ___destroy_helper_block_.259, ___destroy_helper_block_.26, 
                       ___destroy_helper_block_.264, ___destroy_helper_block_.264, 
                       ___destroy_helper_block_.266, ___destroy_helper_block_.267, 
                       ___destroy_helper_block_.267, ___destroy_helper_block_.267, 
                       ___destroy_helper_block_.27, ___destroy_helper_block_.27, 
                       ___destroy_helper_block_.27, ___destroy_helper_block_.270, 
                       ___destroy_helper_block_.271, ___destroy_helper_block_.271, 
                       ___destroy_helper_block_.2728, ___destroy_helper_block_.273, 
                       ___destroy_helper_block_.2736, ___destroy_helper_block_.274, 
                       ___destroy_helper_block_.2742, ___destroy_helper_block_.2747, 
                       ___destroy_helper_block_.275, ___destroy_helper_block_.2751, 
                       ___destroy_helper_block_.2762, ___destroy_helper_block_.2770, 
                       ___destroy_helper_block_.278, ___destroy_helper_block_.2793, 
                       ___destroy_helper_block_.28, ___destroy_helper_block_.281, 
                       ___destroy_helper_block_.282, ___destroy_helper_block_.2828, 
                       ___destroy_helper_block_.284, ___destroy_helper_block_.285, 
                       ___destroy_helper_block_.286, ___destroy_helper_block_.286, 
                       ___destroy_helper_block_.287, ___destroy_helper_block_.2871, 
                       ___destroy_helper_block_.2879, ___destroy_helper_block_.288, 
                       ___destroy_helper_block_.29, ___destroy_helper_block_.290, 
                       ___destroy_helper_block_.2902, ___destroy_helper_block_.291, 
                       ___destroy_helper_block_.2910, ___destroy_helper_block_.2923, 
                       ___destroy_helper_block_.2928, ___destroy_helper_block_.294, 
                       ___destroy_helper_block_.296, ___destroy_helper_block_.298, 
                       ___destroy_helper_block_.3008, ___destroy_helper_block_.301, 
                       ___destroy_helper_block_.301, ___destroy_helper_block_.3014, 
                       ___destroy_helper_block_.3017, ___destroy_helper_block_.302, 
                       ___destroy_helper_block_.3028, ___destroy_helper_block_.3033, 
                       ___destroy_helper_block_.3040, ___destroy_helper_block_.305, 
                       ___destroy_helper_block_.3052, ___destroy_helper_block_.3055, 
                       ___destroy_helper_block_.306, ___destroy_helper_block_.3060, 
                       ___destroy_helper_block_.3074, ___destroy_helper_block_.3079, 
                       ___destroy_helper_block_.308, ___destroy_helper_block_.3084, 
                       ___destroy_helper_block_.310, ___destroy_helper_block_.312, 
                       ___destroy_helper_block_.316, ___destroy_helper_block_.318, 
                       ___destroy_helper_block_.319, ___destroy_helper_block_.32, 
                       ___destroy_helper_block_.321, ___destroy_helper_block_.321, 
                       ___destroy_helper_block_.322, ___destroy_helper_block_.325, 
                       ___destroy_helper_block_.328, ___destroy_helper_block_.33, 
                       ___destroy_helper_block_.33, ___destroy_helper_block_.331, 
                       ___destroy_helper_block_.333, ___destroy_helper_block_.339, 
                       ___destroy_helper_block_.339, ___destroy_helper_block_.34, 
                       ___destroy_helper_block_.34, ___destroy_helper_block_.343, 
                       ___destroy_helper_block_.345, ___destroy_helper_block_.347, 
                       ___destroy_helper_block_.351, ___destroy_helper_block_.353, 
                       ___destroy_helper_block_.355, ___destroy_helper_block_.359, 
                       ___destroy_helper_block_.36, ___destroy_helper_block_.360, 
                       ___destroy_helper_block_.360, ___destroy_helper_block_.362, 
                       ___destroy_helper_block_.365, ___destroy_helper_block_.366, 
                       ___destroy_helper_block_.368, ___destroy_helper_block_.369, 
                       ___destroy_helper_block_.37, ___destroy_helper_block_.371, 
                       ___destroy_helper_block_.372, ___destroy_helper_block_.373, 
                       ___destroy_helper_block_.375, ___destroy_helper_block_.379, 
                       ___destroy_helper_block_.379, ___destroy_helper_block_.381, 
                       ___destroy_helper_block_.385, ___destroy_helper_block_.391, 
                       ___destroy_helper_block_.394, ___destroy_helper_block_.396, 
                       ___destroy_helper_block_.398, ___destroy_helper_block_.399, 
                       ___destroy_helper_block_.40, ___destroy_helper_block_.40, 
                       ___destroy_helper_block_.40, ___destroy_helper_block_.404, 
                       ___destroy_helper_block_.405, ___destroy_helper_block_.407, 
                       ___destroy_helper_block_.408, ___destroy_helper_block_.409, 
                       ___destroy_helper_block_.41, ___destroy_helper_block_.410, 
                       ___destroy_helper_block_.411, ___destroy_helper_block_.412, 
                       ___destroy_helper_block_.415, ___destroy_helper_block_.416, 
                       ___destroy_helper_block_.42, ___destroy_helper_block_.420, 
                       ___destroy_helper_block_.421, ___destroy_helper_block_.423, 
                       ___destroy_helper_block_.432, ___destroy_helper_block_.435, 
                       ___destroy_helper_block_.438, ___destroy_helper_block_.44, 
                       ___destroy_helper_block_.44, ___destroy_helper_block_.440, 
                       ___destroy_helper_block_.443, ___destroy_helper_block_.445, 
                       ___destroy_helper_block_.446, ___destroy_helper_block_.448, 
                       ___destroy_helper_block_.449, ___destroy_helper_block_.45, 
                       ___destroy_helper_block_.451, ___destroy_helper_block_.453, 
                       ___destroy_helper_block_.456, ___destroy_helper_block_.457, 
                       ___destroy_helper_block_.458, ___destroy_helper_block_.459, 
                       ___destroy_helper_block_.46, ___destroy_helper_block_.46, 
                       ___destroy_helper_block_.46, ___destroy_helper_block_.460, 
                       ___destroy_helper_block_.468, ___destroy_helper_block_.469, 
                       ___destroy_helper_block_.47, ___destroy_helper_block_.473, 
                       ___destroy_helper_block_.473, ___destroy_helper_block_.474, 
                       ___destroy_helper_block_.475, ___destroy_helper_block_.476, 
                       ___destroy_helper_block_.479, ___destroy_helper_block_.48, 
                       ___destroy_helper_block_.48, ___destroy_helper_block_.48, 
                       ___destroy_helper_block_.483, ___destroy_helper_block_.486, 
                       ___destroy_helper_block_.488, ___destroy_helper_block_.494, 
                       ___destroy_helper_block_.497, ___destroy_helper_block_.498, 
                       ___destroy_helper_block_.50, ___destroy_helper_block_.500, 
                       ___destroy_helper_block_.500, ___destroy_helper_block_.501, 
                       ___destroy_helper_block_.503, ___destroy_helper_block_.506, 
                       ___destroy_helper_block_.506, ___destroy_helper_block_.506, 
                       ___destroy_helper_block_.509, ___destroy_helper_block_.509, 
                       ___destroy_helper_block_.51, ___destroy_helper_block_.510, 
                       ___destroy_helper_block_.511, ___destroy_helper_block_.514, 
                       ___destroy_helper_block_.518, ___destroy_helper_block_.519, 
                       ___destroy_helper_block_.52, ___destroy_helper_block_.52, 
                       ___destroy_helper_block_.520, ___destroy_helper_block_.521, 
                       ___destroy_helper_block_.523, ___destroy_helper_block_.523, 
                       ___destroy_helper_block_.524, ___destroy_helper_block_.53, 
                       ___destroy_helper_block_.53, ___destroy_helper_block_.533, 
                       ___destroy_helper_block_.533, ___destroy_helper_block_.533, 
                       ___destroy_helper_block_.536, ___destroy_helper_block_.539, 
                       ___destroy_helper_block_.54, ___destroy_helper_block_.541, 
                       ___destroy_helper_block_.545, ___destroy_helper_block_.548, 
                       ___destroy_helper_block_.55, ___destroy_helper_block_.551, 
                       ___destroy_helper_block_.551, ___destroy_helper_block_.551, 
                       ___destroy_helper_block_.551, ___destroy_helper_block_.555, 
                       ___destroy_helper_block_.559, ___destroy_helper_block_.559, 
                       ___destroy_helper_block_.559, ___destroy_helper_block_.56, 
                       ___destroy_helper_block_.56, ___destroy_helper_block_.560, 
                       ___destroy_helper_block_.564, ___destroy_helper_block_.566, 
                       ___destroy_helper_block_.567, ___destroy_helper_block_.567, 
                       ___destroy_helper_block_.567, ___destroy_helper_block_.570, 
                       ___destroy_helper_block_.572, ___destroy_helper_block_.573, 
                       ___destroy_helper_block_.576, ___destroy_helper_block_.58, 
                       ___destroy_helper_block_.58, ___destroy_helper_block_.58, 
                       ___destroy_helper_block_.580, ___destroy_helper_block_.582, 
                       ___destroy_helper_block_.589, ___destroy_helper_block_.59, 
                       ___destroy_helper_block_.591, ___destroy_helper_block_.60, 
                       ___destroy_helper_block_.60, ___destroy_helper_block_.600, 
                       ___destroy_helper_block_.601, ___destroy_helper_block_.601, 
                       ___destroy_helper_block_.606, ___destroy_helper_block_.608, 
                       ___destroy_helper_block_.609, ___destroy_helper_block_.61, 
                       ___destroy_helper_block_.61, ___destroy_helper_block_.61, 
                       ___destroy_helper_block_.616, ___destroy_helper_block_.617, 
                       ___destroy_helper_block_.619, ___destroy_helper_block_.62, 
                       ___destroy_helper_block_.62, ___destroy_helper_block_.623, 
                       ___destroy_helper_block_.624, ___destroy_helper_block_.624, 
                       ___destroy_helper_block_.629, ___destroy_helper_block_.63, 
                       ___destroy_helper_block_.63, ___destroy_helper_block_.633, 
                       ___destroy_helper_block_.66, ___destroy_helper_block_.661, 
                       ___destroy_helper_block_.67, ___destroy_helper_block_.7, 
                       ___destroy_helper_block_.75, ___destroy_helper_block_.75, 
                       ___destroy_helper_block_.75, ___destroy_helper_block_.77, 
                       ___destroy_helper_block_.79, ___destroy_helper_block_.79, 
                       ___destroy_helper_block_.81, ___destroy_helper_block_.82, 
                       ___destroy_helper_block_.85, ___destroy_helper_block_.859, 
                       ___destroy_helper_block_.87, ___destroy_helper_block_.87, 
                       ___destroy_helper_block_.872, ___destroy_helper_block_.88, 
                       ___destroy_helper_block_.880, ___destroy_helper_block_.89, 
                       ___destroy_helper_block_.90, ___destroy_helper_block_.907, 
                       ___destroy_helper_block_.91, ___destroy_helper_block_.910, 
                       ___destroy_helper_block_.915, ___destroy_helper_block_.925, 
                       ___destroy_helper_block_.927, ___destroy_helper_block_.929, 
                       ___destroy_helper_block_.932, ___destroy_helper_block_.935, 
                       ___destroy_helper_block_.94, ___destroy_helper_block_.94, 
                       ___destroy_helper_block_.94, ___destroy_helper_block_.948, 
                       ___destroy_helper_block_.955, ___destroy_helper_block_.96, 
                       ___destroy_helper_block_.960, ___destroy_helper_block_.965, 
                       ___destroy_helper_block_.97, ___destroy_helper_block_.972, 
                       ___destroy_helper_block_.98, ___destroy_helper_block_.99, 
                       ___destroy_helper_block_.991, ___listenerProc_block_invoke, 
                       ___nanosecondsToAbsoluteTime_block_invoke, ___nanosecondsToAbsoluteTime_block_invoke, 
                       ___openLogDump_block_invoke, __avConferencePreviewSingleton, 
                       __block_invoke_2.ipPortStr, __hardwareConfigiPad, 
                       __hardwareConfigiPhone, __hardwareConfigiPod, __sharedInstance, 
                       __vcDispatchQueue, __vcRemoteVideoManager, __vcStreamManagerManager, 
                       __vcVideoCaptureServerSingleton, __xpcClientSingleton, 
                       __xpcServerSingleton, _addCellInterfaceForImageDimensions, 
                       _addWifiInterfaceForImageDimensions, _applyMicrophonePreferences, 
                       _associationSetCallBacks, _audioRecordingEnabled.hasChecked, 
                       _audioRecordingEnabled.isAudioRecordingEnabled, 
                       _audioSessionIsStarted, _audioSessionRef, _cSSLClientDone, 
                       _cSSLClientHello, _cSSLClientHello, _cachedNATTypeDictionary, 
                       _cannedReplayEnabled.hasChecked, _cannedReplayEnabled.isCannedReplayEnabled, 
                       _cfDictionaryGetFloat, _checkForLinkIssues, _clientAudioSessionQ, 
                       _cmCaptureStop, _codecTypeToVideoPayload, _comm_send, 
                       _compareByPref, _conduitDestroyContext, _conduitPushFrame, 
                       _createDefaultLogDumpPath, _createDirectory, _createSampleBufferWithPixelBuffer, 
                       _createSampleBufferWithPixelBuffer, _createSelectedInputDictWithPolarPattern, 
                       _createSubImageAttributeDictionary, _createTCPSocket, 
                       _createTempFile, _createVideoFormatDescription, 
                       _decoderFrameCallback, _defaultManager._VCAudioManager, 
                       _defaultManager._vcCaptionsManager, _defaultManager.onceToken, 
                       _defaultManager.onceToken, _defaultManager.onceToken, 
                       _defaultManager.onceToken, _defaultVideoConferenceManager._VideoConferenceManager, 
                       _deriveFullFilename, _deriveFullFilename.createLogPathOnce, 
                       _deriveFullFilename.default_dump_log_path, _deriveFullFilename.path_exists, 
                       _drainOldPackets, _dropWaitingPkts, _dtls, _dtls.ip, 
                       _encoderFrameCallback, _extractAvcCFromFormatDescriptionForLog, 
                       _fuzz_packet, _gAlphaTable, _gGenPoly, _gGenPolyDegree, 
                       _gIndexTable, _gVCTransportInstance, _g_CellDecodingFormat1136x640, 
                       _g_CellDecodingFormat1334x750, _g_CellDecodingFormat1920x1080, 
                       _g_CellDecodingFormatiPad, _g_CellEncodingFormat1136x640, 
                       _g_CellEncodingFormat1334x750, _g_CellEncodingFormat1920x1080, 
                       _g_CellEncodingFormatiPadAVE, _g_CellEncodingFormatiPadVXE, 
                       _g_DecodingFormats1, _g_DecodingFormats2, _g_DecodingFormats3, 
                       _g_DecodingFormats4, _g_DriverHandle, _g_DriverHandleMutex, 
                       _g_EncodingFormats1, _g_EncodingFormats2, _g_SIPICERetryParams, 
                       _g_SIPICERetryParams_block_invoke.ip, _g_Settings, 
                       _g_WifiDecodingFormat1136x640, _g_WifiDecodingFormat1334x750, 
                       _g_WifiDecodingFormat1920x1080, _g_WifiDecodingFormatiPad, 
                       _g_WifiEncodingFormat1136x640AVE, _g_WifiEncodingFormat1136x640VXE, 
                       _g_WifiEncodingFormat1334x750AVE, _g_WifiEncodingFormat1920x1080AVE, 
                       _g_WifiEncodingFormatiPadAVE, _g_WifiEncodingFormatiPadVXE, 
                       _g_aCompactHeaders, _g_aCompressions, _g_aHeaders, 
                       _g_ac_audioTiers, _g_adwTxRateTiers, _g_aiBandwidth, 
                       _g_aiStatusCodes, _g_apszEvents, _g_apszMethods, 
                       _g_apszReasons, _g_apszStMode, _g_apszStatusMsgs, 
                       _g_apszSubStates, _g_arrayPacketRTT, _g_arrayPacketRecvTime, 
                       _g_arrayPacketSize, _g_bSpecialAllocForHeapInspection, 
                       _g_bThrottlingProbeSeqLog, _g_bThrottlingRecvLog, 
                       _g_bThrottlingSendLog, _g_cachedCommNATServer, _g_fReportFirstCounter, 
                       _g_fpStallModeDump, _g_ft_audioTiers, _g_hActualTPHandle, 
                       _g_hVTP, _g_iBWEstLogLevel, _g_iHandleRefCount, 
                       _g_iPacketIndex, _g_payloadInfo, _g_playbackMode, 
                       _g_xGKSConnectivitySettings, _g_xTPHandle, _g_x_hvtp, 
                       _generateStreamToken.streamToken, _getBuiltInMicPortDictionaryFromSelectableInputsArray, 
                       _getDataSourcesFromPortDictionary, _getMaxImageDimensions, 
                       _getOptimalMicPolarPatternFromDataSource, _getPacketSize, 
                       _gksVCPParseConfigurationRecordAndCreateParameterSets, 
                       _gksVCPParseParameterSetsAndCreateConfigurationRecord, 
                       _h264bridge_se_pull, _h264bridge_ue_pull, _h264bridge_ue_pulllong, 
                       _handlePreemptionNotification, _hmacsha1, _hwrandom, 
                       _imageAttrForAnswer, _isConnectionStable, _kAVCKeyRTCPSocket, 
                       _kAVCKeyRTPLocalSSRC, _kAVCKeyRTPSocket, _kAVCKeySharedSocket, 
                       _kAVCKeySourcePort, _kAVCKeySupportedAudioCodecs, 
                       _kAVCKeySupportedCodecs, _kAVCKeySupportedVideoDecodingCodecs, 
                       _kAVCKeySupportedVideoDecodingResolutions, _kAVCKeySupportedVideoEncodingCodecs, 
                       _kAVCKeySupportedVideoEncodingResolutions, _kAVCKeyVideoStreamDownlinkIsOperatingAtMaxBitrate, 
                       _kAVCKeyVideoStreamDownlinkIsOperatingAtMinBitrate, 
                       _kAVCKeyVideoStreamDownlinkOperatingBitrate, _kAVCKeyVideoStreamDownlinkOptimalBitrate, 
                       _kAVCKeyVideoStreamUplinkOperatingBitrate, _kCannedReplayFramePixelBufferFormat, 
                       _kH264SampleAspectRatioIndicators, _kVCTransportSessionBasebandQueueFlushCriterion, 
                       _kVCTransportSessionBasebandQueueFlushPayloadType, 
                       _kVCTransportSessionBasebandQueueFlushPayloadTypeFieldOffset, 
                       _kVCTransportSessionBasebandQueueFlushTimestamp, 
                       _kVCTransportSessionBasebandQueueFlushTransactionID, 
                       _kVCTransportSessionEventInfoActiveConnection, _kVCTransportSessionEventInfoIsDuplicationEnabled, 
                       _kVCTransportSessionEventInfoIsFirstLink, _kVCTransportSessionEventInfoNewLink, 
                       _kVCTransportSessionEventInfoNewPrimary, _kVCTransportSessionEventInfoOldPrimary, 
                       _kVCTransportSessionLegacyOptionNonCellularCandidateTimeout, 
                       _listenerProc, _listenerProcNotificationHandler, 
                       _listenerProcNotificationHandler.retryCount, _micro, 
                       _micro.did_init, _micro.rate, _nanosecondsToAbsoluteTime.conversionRatio, 
                       _nanosecondsToAbsoluteTime.conversionRatio, _nanosecondsToAbsoluteTime.onceToken, 
                       _nanosecondsToAbsoluteTime.onceToken, _needUpdateRemoteCandidateList, 
                       _octave2IndexTable6, '_onPlayVideo:frameTime:cameraStatusBits:.lastLocalPortrait', 
                       '_onPlayVideo:frameTime:cameraStatusBits:.lastRemotePortrait', 
                       _openLogDump, _printCADebugInfoWithDelay, _processAudioPktForCellularQueuing_new, 
                       _pushOutQueuedAudioPkts, _rangeCheck, _ratiosForCurrentBucket, 
                       _readAVCCAndEncodeH264SPSPPS, _readAVCCAndGetDecoderParams, 
                       _readSPSAndGetDecoderParams, _readSPSPPSAndCreateAVCC, 
                       _recreateFormatDescription, _relayHeaderOffset, 
                       _reportingStatusCodeForConnectionType, _sContext, 
                       _scaling_list, _secureDataMessageTypeForOFTType, 
                       _setIntValue, _setNonDecayingThreadPriority, '_setVTPIP:.ip', 
                       _setupLiveSource, _setupLiveSource.__pAXSVisualAlertEnabled, 
                       '_setupLoopbackWithConnectionType:.ip', _setupNATObserver.onceToken, 
                       _sharedAudioSessionRefCondVar, _sharedAudioSessionRefCondVar._audioSessionRefCondVar, 
                       _sharedCannedAVSync.sDispatchOnceToken, _sharedCannedAVSync.sSharedCannedAVSync, 
                       _sharedInstance._hardwareSettings, _sharedInstance._videoRulesCollection, 
                       _sharedInstance._videoRulesCollections, _sharedInstance.bag, 
                       _sharedInstance.onceToken, _sharedInstance.onceToken, 
                       _sharedInstance.sharedDatagramChannelManager, _sharedInstance.sharedInstance, 
                       _sharedInstanceLock, _sharedResolver, '_tierForNetworkBitrate:duplication:.tierTable', 
                       '_tierForNetworkBitrate:duplication:.tierTable.86', 
                       _updateNetworkQualityGraph.previousQuality, _videoDataBecameReady, 
                       _videoRulesForFormatList, _vtEncCallback, _waitForBagLoad.onceToken, 
                       _warmupForCall.sDispatchOnceVPInit, _windowModeState, 
                       _wsola_adapt, _wsola_info_create, _wsola_info_destroy, 
                       _wsola_tail_size, _wsola_window_tail ]
    weak-def-symbols: [ __ZN25ARPLAssociationSetElement10can_bufferEh, 
                        __ZN12arpl_control12CalcChecksumEPhit, __ZN13ARPLDataQueue8add_tailEP17ARPLDataQueueNode, 
                        __ZN13ARPLDataQueueC2Ev, __ZN13ARPLDataQueueD2Ev, 
                        __ZN17ARPLDataQueueNodeC2Ev, __ZN21ARPLReceiveSetElementD0Ev, 
                        __ZN21ARPLReceiveSetElementD1Ev, __ZN21ARPLSendingSetElementD0Ev, 
                        __ZN21ARPLSendingSetElementD1Ev, __ZN25ARPLAssociationSetElement10update_rtoEi, 
                        __ZN25ARPLAssociationSetElementC2EP5CARPL, __ZN25ARPLAssociationSetElementD0Ev, 
                        __ZN25ARPLAssociationSetElementD1Ev, __ZN25ARPLAssociationSetElementD2Ev, 
                        __ZN5CARPL17current_timestampEv, __ZN5CARPL17receiveSetElementEj, 
                        __ZN5CARPL17sendingSetElementEj, __ZN5CARPLC2Ev, 
                        __ZN5CARPLD2Ev, __ZTI14ARPLSetElement, __ZTI21ARPLReceiveSetElement, 
                        __ZTI21ARPLSendingSetElement, __ZTI25ARPLAssociationSetElement, 
                        __ZTS14ARPLSetElement, __ZTS21ARPLReceiveSetElement, 
                        __ZTS21ARPLSendingSetElement, __ZTS25ARPLAssociationSetElement, 
                        __ZTV21ARPLReceiveSetElement, __ZTV21ARPLSendingSetElement, 
                        __ZTV25ARPLAssociationSetElement, ___clang_call_terminate ]
    objc-classes:    [ _AVAudioClient, _AVAudioDevice, _AVAudioDeviceList, 
                       _AVCAudioStream, _AVCAudioStreamConfig, _AVCCaptionsClient, 
                       _AVCCaptionsConfig, _AVCCaptionsResult, _AVCCaptionsToken, 
                       _AVCMediaStreamConfig, _AVCNetworkAddress, _AVCPacketFilter, 
                       _AVCPacketFilterRTP, _AVCPacketRelay, _AVCPacketRelayConnection, 
                       _AVCPacketRelayDriver, _AVCPacketRelayIDSConnection, 
                       _AVCPacketRelaySocketConnection, _AVCRTCPPacket, 
                       _AVCRTCPReceiverReport, _AVCRTCPSenderReport, _AVCRTCPSourceDescription, 
                       _AVCRemoteVideoClient, _AVCVideoStream, _AVCVideoStreamConfig, 
                       _AVCVirtualTTYDevice, _AVConference, _AVConferenceCallState, 
                       _AVConferencePreview, _AVConferenceXPCClient, _AVConferenceXPCServer, 
                       _AVInternalDeviceList, _AVPingTest, _AVTelephonyInterface, 
                       _CMVideoCapture, _CMVideoCaptureCameraTorchManager, 
                       _CameraConferenceSynchronizer, _CannedAVSync, _CannedAudioInjector, 
                       _CannedEncodedVideoCapture, _CannedRawVideoCapture, 
                       _CannedVideoCapture, _DTMFEventHandler, _FFTMeter, 
                       _GKInterfaceListener, _GKNATObserver, _GKNATObserverInternal, 
                       _GKNATObserver_SCContext, _GKRingBuffer, _GKSConnectivitySettings, 
                       _GKVoiceChatError, _HandleWrapper, _ICEResultQuery, 
                       _ICEResultWaitQueue, _IPPortWrapper, _IPv6PrefixWrapper, 
                       _LogDumpUtility, _LoopbackSocketTunnel, _SDPMediaLine, 
                       _SDPMini, _SDPParser, _SIPClientDataDictionary, 
                       _SnapshotTimer, _TCPBufferPool, _TCPTunnelClient, 
                       _VCAudioManager, _VCAudioManagerClient, _VCAudioPayload, 
                       _VCAudioPowerLevelMonitor, _VCAudioRelay, _VCAudioRelayIO, 
                       _VCAudioRule, _VCAudioRuleCollection, _VCAudioStream, 
                       _VCAudioTier, _VCAudioTierPicker, _VCAudioTransmitter, 
                       _VCBitrateArbiter, _VCBitrateRule, _VCCallInfo, 
                       _VCCallInfoBlob, _VCCallLinkCongestionDetector, 
                       _VCCallSession, _VCCapabilities, _VCCaptionsClientContext, 
                       _VCCaptionsManager, _VCCaptionsManagerStreamTokenClientList, 
                       _VCCaptionsReceiver, _VCCaptionsSegment, _VCCaptionsTranscription, 
                       _VCClientRelay, _VCConnectionIDS, _VCConnectionLegacy, 
                       _VCConnectionManager, _VCConnectionManagerIDS, _VCConnectionManagerLegacy, 
                       _VCDatagramChannelManager, _VCDispatchQueue, _VCHardwareSettings, 
                       _VCHardwareSettingsEmbedded, _VCImageAttributeRules, 
                       _VCImageQueue, _VCMediaNegotiationBlob, _VCMediaNegotiationBlobAudioSettings, 
                       _VCMediaNegotiationBlobBandwidthSettings, _VCMediaNegotiationBlobCaptionsSettings, 
                       _VCMediaNegotiationBlobVideoPayloadSettings, _VCMediaNegotiationBlobVideoRuleCollection, 
                       _VCMediaNegotiationBlobVideoSettings, _VCMediaNegotiator, 
                       _VCMediaNegotiatorAudioResults, _VCMediaNegotiatorCaptionsResults, 
                       _VCMediaNegotiatorLocalConfiguration, _VCMediaNegotiatorResults, 
                       _VCMediaNegotiatorVideoResults, _VCMediaStreamManager, 
                       _VCMediaStreamStats, _VCMediaStreamSynchronizer, 
                       _VCNetworkAgent, _VCPacketBundler, _VCRemoteVideoManager, 
                       _VCRemoteVideoState, _VCScreenCapture, _VCSecureDataChannel, 
                       _VCServerBag, _VCSessionMessageTopic, _VCSessionMessaging, 
                       _VCTransport, _VCTransportSession, _VCTransportSessionIDS, 
                       _VCTransportSessionLegacy, _VCVTPWrapper, _VCVideoCaptureServer, 
                       _VCVideoRule, _VCVideoRuleCollectionKey, _VCVideoRuleCollections, 
                       _VCVideoRuleCollectionsCamera, _VCVideoRuleCollectionsCameraEmbedded, 
                       _VCVideoRuleCollectionsCameraMac, _VCVideoRuleCollectionsScreen, 
                       _VCVideoStream, _VCVideoStreamNOWRDLossEventRateControl, 
                       _VCVideoStreamOWRDLossEventRateControl, _VCVideoStreamRTTPLRRateControl, 
                       _VCVideoStreamRateAdaptation, _VCVideoStreamRateController, 
                       _VCVideoStreamReceiver, _VCVideoStreamTransmitter, 
                       _VCVirtualTTYDevice, _VCVoIPRelay, _VCVoIPRelayInternal, 
                       _VCWCMClient, _VCWeakObjectHolder, _VideoAttributes, 
                       _VideoConference, _VideoConferenceDefaults, _VideoConferenceManager, 
                       _VideoScaler, _VideoUtil, _WRMClient, _XPCClientUser, 
                       _XPCConnection, _XPCServerUser ]
    objc-ivars:      [ _AVAudioClient.deviceList, _AVAudioDevice._UID, 
                       _AVAudioDevice._deviceID, _AVAudioDevice._deviceName, 
                       _AVAudioDevice._inputAvailable, _AVAudioDevice._isBluetoothDevice, 
                       _AVAudioDevice._isLineIn, _AVAudioDevice._outputAvailable, 
                       _AVAudioDevice._preferredDevice, _AVAudioDeviceList._internalList, 
                       _AVCAudioStream._capabilities, _AVCAudioStream._configuration, 
                       _AVCAudioStream._connection, _AVCAudioStream._delegate, 
                       _AVCAudioStream._opaqueStream, _AVCAudioStreamConfig._audioStreamMode, 
                       _AVCAudioStreamConfig._cnEnabled, _AVCAudioStreamConfig._cnPayloadType, 
                       _AVCAudioStreamConfig._codecType, _AVCAudioStreamConfig._dtmfPayloadType, 
                       _AVCAudioStreamConfig._dtmfTimestampRate, _AVCAudioStreamConfig._dtxEnabled, 
                       _AVCAudioStreamConfig._latencySensitiveMode, _AVCAudioStreamConfig._maxPtime, 
                       _AVCAudioStreamConfig._octetAligned, _AVCAudioStreamConfig._preferredAMRMode, 
                       _AVCAudioStreamConfig._ptime, _AVCAudioStreamConfig._rateModeMask, 
                       _AVCCaptionsClient._connection, _AVCCaptionsClient._delegate, 
                       _AVCCaptionsClient._streamToken, _AVCCaptionsConfig._locale, 
                       _AVCCaptionsResult._tokens, _AVCCaptionsResult._updateNumber, 
                       _AVCCaptionsResult._utteranceComplete, _AVCCaptionsResult._utteranceNumber, 
                       _AVCCaptionsToken._confidence, _AVCCaptionsToken._hasSpaceAfter, 
                       _AVCCaptionsToken._text, _AVCMediaStreamConfig._SRTCPCipherSuite, 
                       _AVCMediaStreamConfig._SRTPCipherSuite, _AVCMediaStreamConfig._audio, 
                       _AVCMediaStreamConfig._cName, _AVCMediaStreamConfig._direction, 
                       _AVCMediaStreamConfig._localAddress, _AVCMediaStreamConfig._rateAdaptationEnabled, 
                       _AVCMediaStreamConfig._receiveMasterKey, _AVCMediaStreamConfig._recommendedMTU, 
                       _AVCMediaStreamConfig._remoteAddress, _AVCMediaStreamConfig._remoteSSRC, 
                       _AVCMediaStreamConfig._rtcpEnabled, _AVCMediaStreamConfig._rtcpRemotePort, 
                       _AVCMediaStreamConfig._rtcpSendInterval, _AVCMediaStreamConfig._rtcpTimeOutEnabled, 
                       _AVCMediaStreamConfig._rtcpTimeOutInterval, _AVCMediaStreamConfig._rtcpXREnabled, 
                       _AVCMediaStreamConfig._rtpTimeOutEnabled, _AVCMediaStreamConfig._rtpTimeOutInterval, 
                       _AVCMediaStreamConfig._rxPayloadType, _AVCMediaStreamConfig._sendMasterKey, 
                       _AVCMediaStreamConfig._txPayloadType, _AVCMediaStreamConfig._video, 
                       _AVCNetworkAddress.interfaceName, _AVCNetworkAddress.ip, 
                       _AVCNetworkAddress.isIPv6, _AVCNetworkAddress.port, 
                       _AVCPacketFilterRTP._SSRC, _AVCPacketFilterRTP._type, 
                       _AVCPacketRelay._connections, _AVCPacketRelay._delegate, 
                       _AVCPacketRelay._multiplexedConnection, _AVCPacketRelay._packetDriver, 
                       _AVCPacketRelay._queue, _AVCPacketRelayIDSConnection._datagramChannel, 
                       _AVCPacketRelayIDSConnection._isDemuxNeeded, _AVCPacketRelayIDSConnection._isResumed, 
                       _AVCPacketRelayIDSConnection._packetFilter, _AVCPacketRelayIDSConnection._packetRelayService, 
                       _AVCPacketRelayIDSConnection._readHandler, _AVCPacketRelayIDSConnection._type, 
                       _AVCPacketRelaySocketConnection._isConnectedSocket, 
                       _AVCPacketRelaySocketConnection._isDemuxNeeded, 
                       _AVCPacketRelaySocketConnection._packetFilter, _AVCPacketRelaySocketConnection._queue, 
                       _AVCPacketRelaySocketConnection._readHandler, _AVCPacketRelaySocketConnection._remoteIPPort, 
                       _AVCPacketRelaySocketConnection._remoteIPPortLength, 
                       _AVCPacketRelaySocketConnection._type, _AVCPacketRelaySocketConnection._unixSocket, 
                       _AVCPacketRelaySocketConnection.dataBuffer, _AVCRTCPPacket._SSRC, 
                       _AVCRTCPPacket._packetType, _AVCRTCPReceiverReport._cumulativePacketsLost, 
                       _AVCRTCPReceiverReport._delaySinceLastSR, _AVCRTCPReceiverReport._extendedHighestSequenceNumber, 
                       _AVCRTCPReceiverReport._fractionLost, _AVCRTCPReceiverReport._interarrivalJitter, 
                       _AVCRTCPReceiverReport._lastSRTimestamp, _AVCRTCPReceiverReport._reportedSourceSSRC, 
                       _AVCRTCPSenderReport._NTPLeastSignificantWord, _AVCRTCPSenderReport._NTPMostSignificantWord, 
                       _AVCRTCPSenderReport._RTPTimestamp, _AVCRTCPSenderReport._octetsSent, 
                       _AVCRTCPSenderReport._packetsSent, _AVCRTCPSenderReport._receiverReport, 
                       _AVCRTCPSourceDescription._text, _AVCRTCPSourceDescription._type, 
                       _AVCRemoteVideoClient._activeVideoMode, _AVCRemoteVideoClient._avcRemoteVideoQueue, 
                       _AVCRemoteVideoClient._connection, _AVCRemoteVideoClient._connectionTypeString, 
                       _AVCRemoteVideoClient._delegate, _AVCRemoteVideoClient._hasReceivedFirstFrame, 
                       _AVCRemoteVideoClient._hasReceivedLastFrame, _AVCRemoteVideoClient._isMediaStalled, 
                       _AVCRemoteVideoClient._isVideoDegraded, _AVCRemoteVideoClient._isVideoPaused, 
                       _AVCRemoteVideoClient._primaryCameraLayer, _AVCRemoteVideoClient._primaryCameraSubLayer, 
                       _AVCRemoteVideoClient._remoteScreenAttributes, _AVCRemoteVideoClient._remoteVideoAttributes, 
                       _AVCRemoteVideoClient._screenLayer, _AVCRemoteVideoClient._screenSubLayer, 
                       _AVCRemoteVideoClient._secondaryCameraLayer, _AVCRemoteVideoClient._secondaryCameraSubLayer, 
                       _AVCRemoteVideoClient._shouldDisplayVideoInfoLayer, 
                       _AVCRemoteVideoClient._slotsForModes, _AVCRemoteVideoClient._streamToken, 
                       _AVCVideoStream._capabilities, _AVCVideoStream._configuration, 
                       _AVCVideoStream._connection, _AVCVideoStream._delegate, 
                       _AVCVideoStream._opaqueStream, _AVCVideoStream._streamToken, 
                       _AVCVideoStreamConfig._cvoExtensionID, _AVCVideoStreamConfig._enableCVO, 
                       _AVCVideoStreamConfig._framerate, _AVCVideoStreamConfig._isVideoProtected, 
                       _AVCVideoStreamConfig._keyFrameInterval, _AVCVideoStreamConfig._remoteVideoInitialOrientation, 
                       _AVCVideoStreamConfig._rxCodecType, _AVCVideoStreamConfig._rxMaxBitrate, 
                       _AVCVideoStreamConfig._rxMinBitrate, _AVCVideoStreamConfig._txCodecType, 
                       _AVCVideoStreamConfig._txMaxBitrate, _AVCVideoStreamConfig._txMinBitrate, 
                       _AVCVideoStreamConfig._videoResolution, _AVCVirtualTTYDevice._connection, 
                       _AVCVirtualTTYDevice._delegate, _AVCVirtualTTYDevice._isStarted, 
                       _AVConference._delegate, _AVConference._isUsingFrontCamera, 
                       _AVConference._microphoneMuted, _AVConference._stateCacheForCallID, 
                       _AVConference._stateQueue, _AVConference.connection, 
                       _AVConference.networkQualityGraphLayer_, _AVConference.networkQualityUpdateTimer_, 
                       _AVConference.opaqueConf, _AVConference.remoteLayerBack, 
                       _AVConference.remoteLayerFront, _AVConference.remoteSubLayerBack, 
                       _AVConference.remoteSubLayerFront, _AVConference.serverBag, 
                       _AVConference.shouldDisplayNetworkQualityGraph_, 
                       _AVConference.useServer, _AVConferenceCallState._audioIsPaused, 
                       _AVConferenceCallState._capabilities, _AVConferenceCallState._isVideoPaused, 
                       _AVConferencePreview._isPreviewRunning, _AVConferencePreview._localCameraUID, 
                       _AVConferencePreview.avConferencePreviewNotificationQueue, 
                       _AVConferencePreview.avConferencePreviewQueue, _AVConferencePreview.caLayerBack, 
                       _AVConferencePreview.caLayerFront, _AVConferencePreview.clientWantsPreview, 
                       _AVConferencePreview.connection, _AVConferencePreview.connectionAttempts, 
                       _AVConferencePreview.delegate, _AVConferencePreview.localScreenLandscapeAspectRatio, 
                       _AVConferencePreview.localScreenPortraitAspectRatio, 
                       _AVConferencePreview.localVideoAttributes, _AVConferenceXPCClient.connection, 
                       _AVConferenceXPCClient.connectionPersists, _AVConferenceXPCClient.connectionQueue, 
                       _AVConferenceXPCClient.registeredBlocks, _AVConferenceXPCClient.replyQueue, 
                       _AVConferenceXPCServer.clientConnections, _AVConferenceXPCServer.clientConnectionsQueue, 
                       _AVConferenceXPCServer.incomingMessageQueue, _AVConferenceXPCServer.listener, 
                       _AVConferenceXPCServer.outgoingMessageQueue, _AVConferenceXPCServer.registeredBlocks, 
                       _AVInternalDeviceList.changeListener, _AVInternalDeviceList.deviceList, 
                       _AVInternalDeviceList.listLock, _AVPingTest.avg, 
                       _AVPingTest.interfaceNameToTest, _AVPingTest.ipAsString, 
                       _AVPingTest.lastReturnedError, _AVPingTest.max, 
                       _AVPingTest.min, _AVPingTest.packetLossRate, _AVPingTest.stddev, 
                       _AVPingTest.usingWifi, _AVTelephonyInterface._connection, 
                       _AVTelephonyInterface._delegate, _AVTelephonyInterface._notificationQueue, 
                       _CMVideoCapture._handle, _CMVideoCapture._transaction, 
                       _CMVideoCaptureCameraTorchManager._hCMCapture, _CameraConferenceSynchronizer.cameraHasChangedToCapture, 
                       _CameraConferenceSynchronizer.captureRule, _CameraConferenceSynchronizer.didSendFirstRemoteFrameNotification, 
                       _CameraConferenceSynchronizer.didStopNotificationBlock, 
                       _CameraConferenceSynchronizer.isConference720p, 
                       _CameraConferenceSynchronizer.isConferenceOniPad, 
                       _CameraConferenceSynchronizer.localPortraitAspectRatio, 
                       _CameraConferenceSynchronizer.receivedFirstRemoteFrame, 
                       _CameraConferenceSynchronizer.receivedRequestToChangeCamera, 
                       _CameraConferenceSynchronizer.remoteFrameNotificationBlock, 
                       _CannedAVSync._base, _CannedAVSync._modulo, _CannedAudioInjector._cannedMoviePath, 
                       _CannedAudioInjector._fromBeginning, _CannedAudioInjector._internalFormat, 
                       _CannedAudioInjector._position, _CannedAudioInjector._samples, 
                       _CannedAudioInjector._samplesConditional, _CannedAudioInjector._samplesMutex, 
                       _CannedEncodedVideoCapture._allFrameCount, _CannedEncodedVideoCapture._allFrameRate, 
                       _CannedEncodedVideoCapture._assetReader, _CannedEncodedVideoCapture._attributeMutex, 
                       _CannedEncodedVideoCapture._compressedFileAsset, 
                       _CannedEncodedVideoCapture._frameCount, _CannedEncodedVideoCapture._height, 
                       _CannedEncodedVideoCapture._inputMutex, _CannedEncodedVideoCapture._movieURLString, 
                       _CannedEncodedVideoCapture._pixelBufferPool, _CannedEncodedVideoCapture._readerVideoTrackOutput, 
                       _CannedEncodedVideoCapture._rotatedPixelBufferPool, 
                       _CannedEncodedVideoCapture._videoScaler, _CannedEncodedVideoCapture._videoTrack, 
                       _CannedEncodedVideoCapture._width, _CannedRawVideoCapture._allFrameCount, 
                       _CannedRawVideoCapture._allFrameRate, _CannedRawVideoCapture._allResolutions, 
                       _CannedRawVideoCapture._attributeMutex, _CannedRawVideoCapture._currentInputFile, 
                       _CannedRawVideoCapture._currentPixelBufferPool, 
                       _CannedRawVideoCapture._currentResolution, _CannedRawVideoCapture._height, 
                       _CannedRawVideoCapture._inputMutex, _CannedRawVideoCapture._rotatedPixelBufferPool, 
                       _CannedRawVideoCapture._videoScaler, _CannedRawVideoCapture._width, 
                       _CannedVideoCapture._frameFeeder, _CannedVideoCapture._pimpl, 
                       _DTMFEventHandler.currentDurationCounter, _DTMFEventHandler.currentEndTimestamp, 
                       _DTMFEventHandler.currentEvent, _DTMFEventHandler.currentEventInTransmission, 
                       _DTMFEventHandler.currentEventNeedsEndBlock, _DTMFEventHandler.currentIsMarker, 
                       _DTMFEventHandler.currentStartTimestamp, _DTMFEventHandler.currentVolume, 
                       _DTMFEventHandler.dtmfEventQueue, _DTMFEventHandler.dtmfQueue, 
                       _FFTMeter.adjust0DB, _FFTMeter.dspSplitComplex, 
                       _FFTMeter.fftBuffer, _FFTMeter.fftNormFactor, _FFTMeter.fftSetup, 
                       _FFTMeter.lerpIdxs, _FFTMeter.magnitudeBuffer, _FFTMeter.octaveDb, 
                       _FFTMeter.octaveDbFilt, _FFTMeter.octaveDbOld, _FFTMeter.sampleHistory, 
                       _FFTMeter.windowBuffer, _FFTMeter.windowHistory, 
                       _GKInterfaceListener._dynamicStore, _GKInterfaceListener._interfaceListenerDelegate, 
                       _GKInterfaceListener._isCellUp, _GKInterfaceListener._isWifiUp, 
                       _GKInterfaceListener._monitoringAvailable, _GKInterfaceListener._notificationMutex, 
                       _GKInterfaceListener._notifyToken, _GKNATObserverInternal._NATCheckRetryCount, 
                       _GKNATObserverInternal._NATCheckRetryDelay, _GKNATObserverInternal._addCarrierFlag, 
                       _GKNATObserverInternal._addInRangeFlag, _GKNATObserverInternal._checkTCPAndSSL, 
                       _GKNATObserverInternal._currentNetworkNames, _GKNATObserverInternal._delegate, 
                       _GKNATObserverInternal._dynamicStore, _GKNATObserverInternal._fNATCheckInProgress, 
                       _GKNATObserverInternal._fNATCheckQueued, _GKNATObserverInternal._favorNonCarrier, 
                       _GKNATObserverInternal._hasNATCheckEnded, _GKNATObserverInternal._hasNATCheckStarted, 
                       _GKNATObserverInternal._ignoreCarrierBundle, _GKNATObserverInternal._ignoreNatTypeCache, 
                       _GKNATObserverInternal._interfaceInfoDictionary, 
                       _GKNATObserverInternal._lastReportedCarrierNATType, 
                       _GKNATObserverInternal._lastReportedNATType, _GKNATObserverInternal._lastReportedNonCarrierNATType, 
                       _GKNATObserverInternal._natCheckGroup, _GKNATObserverInternal._natCheckNetNameSema, 
                       _GKNATObserverInternal._natCheckQueue, _GKNATObserverInternal._newCarrierType, 
                       _GKNATObserverInternal._nonCarrierInterfacesOnly, 
                       _GKNATObserverInternal._reportNATQueue, _GKNATObserverInternal._sccontext, 
                       _GKNATObserverInternal._xNATCheck, _GKNATObserver_SCContext.observer_, 
                       _GKRingBuffer.bytesPerFrame, _GKRingBuffer.capacity, 
                       _GKRingBuffer.endTime, _GKRingBuffer.ringBufRef, 
                       _HandleWrapper.handle, _ICEResultQuery.callID, _ICEResultQuery.isQueryAnswered, 
                       _ICEResultQuery.result, _ICEResultWaitQueue.queryList, 
                       _ICEResultWaitQueue.resCond, _ICEResultWaitQueue.resMutex, 
                       _IPPortWrapper._ipport, _IPv6PrefixWrapper._ipv6Prefix, 
                       _LoopbackSocketTunnel._delegate, _LoopbackSocketTunnel._port, 
                       _LoopbackSocketTunnel.foundVTPIP, _LoopbackSocketTunnel.optionalArg, 
                       _LoopbackSocketTunnel.sa, _LoopbackSocketTunnel.sockFD, 
                       _LoopbackSocketTunnel.vtpSA, _SDPMediaLine._allowRTCPFB, 
                       _SDPMediaLine._attributes, _SDPMediaLine._imageAttributeRules, 
                       _SDPMediaLine._payloads, _SDPMediaLine._rtcpPort, 
                       _SDPMediaLine._rtpId, _SDPMediaLine._rtpPort, _SDPMini._audioParameters, 
                       _SDPMini._mediaLines, _SDPMini._sdpUsername, _SDPMini.aacBlockSize, 
                       _SDPMini.allowAudioRecording, _SDPMini.allowRTCPFB, 
                       _SDPMini.allowsContentsChangeWithAspectPreservation, 
                       _SDPMini.allowsDynamicMaxBitrate, _SDPMini.answerBandwidth, 
                       _SDPMini.audioPayloads, _SDPMini.audioRTCPPort, 
                       _SDPMini.audioRTPID, _SDPMini.audioRTPPort, _SDPMini.audioUnitModel, 
                       _SDPMini.basebandCodecSampleRate, _SDPMini.basebandCodecType, 
                       _SDPMini.featuresListDict, _SDPMini.maxBandwidth, 
                       _SDPMini.origin, _SDPMini.secondaryAudioPayloads, 
                       _SDPMini.sessionIP, _SDPMini.videoRTPID, _SDPParser._fieldName, 
                       _SDPParser._fieldNameMap, _SDPParser._fieldType, 
                       _SDPParser._fieldValue, _SDPParser._lineEnumerator, 
                       _SDPParser._lines, _SDPParser._parsingDone, _SIPClientDataDictionary.allCalls, 
                       _SnapshotTimer.taskIsComplete, _TCPBufferPool.avail, 
                       _TCPBufferPool.head, _TCPBufferPool.poolLock, _TCPBufferPool.poolSize, 
                       _TCPBufferPool.tail, _TCPTunnelClient._allocateReq, 
                       _TCPTunnelClient._allocationResponseHandler, _TCPTunnelClient._allocationTimestamp, 
                       _TCPTunnelClient._bindingResponseHandler, _TCPTunnelClient._bufferPool, 
                       _TCPTunnelClient._channelBReq, _TCPTunnelClient._channelNumber, 
                       _TCPTunnelClient._connectState, _TCPTunnelClient._connectedFD, 
                       _TCPTunnelClient._currentMsgType, _TCPTunnelClient._currentPadding, 
                       _TCPTunnelClient._currentlyReadingDataGoalLength, 
                       _TCPTunnelClient._currentlyReadingMessage, _TCPTunnelClient._destroyHandler, 
                       _TCPTunnelClient._fTimeout, _TCPTunnelClient._handler, 
                       _TCPTunnelClient._head, _TCPTunnelClient._isChannelBound, 
                       _TCPTunnelClient._participantID, _TCPTunnelClient._queue, 
                       _TCPTunnelClient._readSource, _TCPTunnelClient._relayUpdateDict, 
                       _TCPTunnelClient._reqRespDict, _TCPTunnelClient._serverIPPort, 
                       _TCPTunnelClient._tail, _TCPTunnelClient._terminationHandler, 
                       _TCPTunnelClient._timer, _TCPTunnelClient._writeBuf, 
                       _TCPTunnelClient._writeSource, _TCPTunnelClient._writeSourceSuspended, 
                       _VCAudioManager._weakAudioRelay, _VCAudioManager._weakSafeViewAudioRelay, 
                       _VCAudioManager.audioLock, _VCAudioManager.audioManagerClients, 
                       _VCAudioManager.audioRefCount, _VCAudioManager.backMicSource, 
                       _VCAudioManager.clientPID, _VCAudioManager.cmSession, 
                       _VCAudioManager.cmSessionQueue, _VCAudioManager.cmSessionRefCount, 
                       _VCAudioManager.connectionRefCount, _VCAudioManager.currentAudioCategory, 
                       _VCAudioManager.currentAudioMode, _VCAudioManager.currentAudioRecordingMode, 
                       _VCAudioManager.currentClientPriority, _VCAudioManager.currentMinSamplesPerFrame, 
                       _VCAudioManager.currentReceiverStatus, _VCAudioManager.currentSampleRate, 
                       _VCAudioManager.currentVPOperatingMode, _VCAudioManager.direction, 
                       _VCAudioManager.enableSpeakerPhone, _VCAudioManager.eventQ, 
                       _VCAudioManager.fLastStartAudioSessionCall, _VCAudioManager.frontMicSource, 
                       _VCAudioManager.hAUIO, _VCAudioManager.hardwareSampleRate, 
                       _VCAudioManager.inferredDeviceRole, _VCAudioManager.inferredOperatingMode, 
                       _VCAudioManager.inferredUseSpeakerMode, _VCAudioManager.inputDeviceQueue, 
                       _VCAudioManager.isGKVoiceChat, _VCAudioManager.isInMediaserverd, 
                       _VCAudioManager.isMicrophoneMuted, _VCAudioManager.isTetheredDisplayMode, 
                       _VCAudioManager.isUsingBBIO, _VCAudioManager.isUsingSuppression, 
                       _VCAudioManager.micClientList, _VCAudioManager.preferredBlockSize, 
                       _VCAudioManager.preferredHWSampleRate, _VCAudioManager.requestedSessionParams, 
                       _VCAudioManager.requestedVPOperatingMode, _VCAudioManager.requestedVPSampleRate, 
                       _VCAudioManager.spkrClientList, _VCAudioManager.targetInputDevice, 
                       _VCAudioManager.targetOutputDevice, _VCAudioManager.usingFloat, 
                       _VCAudioManager.vpioFormat, _VCAudioManagerClient._clientPid, 
                       _VCAudioManagerClient._didStartAUIO, _VCAudioManagerClient._inferredOperatingMode, 
                       _VCAudioManagerClient._sessionReference, _VCAudioManagerClient._started, 
                       _VCAudioPayload._codecSampleRate, _VCAudioPayload._codecSamplesPerFrame, 
                       _VCAudioPayload._inputSampleRate, _VCAudioPayload._srcRatio, 
                       _VCAudioPayload.bitrate, _VCAudioPayload.blockSize, 
                       _VCAudioPayload.bundleHeaderBytes, _VCAudioPayload.canBundle, 
                       _VCAudioPayload.canSetBitrate, _VCAudioPayload.dtxEnabled, 
                       _VCAudioPayload.encodedBytesPerFrame, _VCAudioPayload.encoder, 
                       _VCAudioPayload.forcingBitrate, _VCAudioPayload.format, 
                       _VCAudioPayload.internalBundleFactor, _VCAudioPayload.payload, 
                       _VCAudioPayload.payloadOctetAligned, _VCAudioPayload.shouldLimitMaxPacketSize, 
                       _VCAudioPayload.shouldReset, _VCAudioPayload.supportedBitrates, 
                       _VCAudioPayload.ttyBlockSize, _VCAudioPayload.useSBR, 
                       _VCAudioPowerLevelMonitor.audioLowPowerTimeInterval, 
                       _VCAudioPowerLevelMonitor.audioPowerMovingAverageCoefficient, 
                       _VCAudioPowerLevelMonitor.audioPowerThreshold, _VCAudioPowerLevelMonitor.currentAudioAverage, 
                       _VCAudioPowerLevelMonitor.delegate, _VCAudioPowerLevelMonitor.isAudioPowerBelowThreshold, 
                       _VCAudioPowerLevelMonitor.isAudioPowerMovingAverage, 
                       _VCAudioPowerLevelMonitor.startDetectRemoteAudioLowPowerTime, 
                       _VCAudioRelay._IOBufferDuration, _VCAudioRelay._blocksRelayedCount, 
                       _VCAudioRelay._clientDownlinkPowerMovingAverage, 
                       _VCAudioRelay._clientIO, _VCAudioRelay._clientToRemoteConverter, 
                       _VCAudioRelay._clientUplinkPowerMovingAverage, _VCAudioRelay._eventQueue, 
                       _VCAudioRelay._isRelayRunning, _VCAudioRelay._periodicHealthPrintDispatchSource, 
                       _VCAudioRelay._relayLock, _VCAudioRelay._relayThread, 
                       _VCAudioRelay._remoteIO, _VCAudioRelay._remoteToClientConverter, 
                       _VCAudioRelay._threadEvent, _VCAudioRelay._wakeUpCondition, 
                       _VCAudioRelay._wakeUpMutex, _VCAudioRelayIO._isRunning, 
                       _VCAudioRelayIO._micCallback, _VCAudioRelayIO._micCallbackContext, 
                       _VCAudioRelayIO._micFormat, _VCAudioRelayIO._micPowerRMS, 
                       _VCAudioRelayIO._micTimestamp, _VCAudioRelayIO._packetThread, 
                       _VCAudioRelayIO._speakerCallback, _VCAudioRelayIO._speakerCallbackContext, 
                       _VCAudioRelayIO._speakerFormat, _VCAudioRelayIO._speakerPowerRMS, 
                       _VCAudioRelayIO._speakerTimestamp, _VCAudioRelayIO._startCompletionHandler, 
                       _VCAudioRelayIO._usePacketThread, _VCAudioRule._isSecondary, 
                       _VCAudioRule._payload, _VCAudioRule._samplesPerBlock, 
                       _VCAudioRule._sbr, _VCAudioRuleCollection._aacBlockSize, 
                       _VCAudioRuleCollection._allowAudioRecording, _VCAudioRuleCollection._allowAudioSwitching, 
                       _VCAudioRuleCollection._deviceRole, _VCAudioRuleCollection._rules, 
                       _VCAudioStream._audioReceiver, _VCAudioStream._rtcpTimeoutEnabledTime, 
                       _VCAudioStream._rtpTimeoutEnabledTime, _VCAudioStream.audioBundler, 
                       _VCAudioStream.audioPayloads, _VCAudioStream.audioTransmitter, 
                       _VCAudioStream.awdTime, _VCAudioStream.callID, _VCAudioStream.conferenceID, 
                       _VCAudioStream.currentAudioPayload, _VCAudioStream.currentDTXPayload, 
                       _VCAudioStream.dAudioHostTime, _VCAudioStream.datagramChannelToken, 
                       _VCAudioStream.delegate, _VCAudioStream.delegateNotificationQueue, 
                       _VCAudioStream.deviceRole, _VCAudioStream.dtmfEventHandler, 
                       _VCAudioStream.isSRTPInitialized, _VCAudioStream.isValid, 
                       _VCAudioStream.lastInputAudioTimeStamp, _VCAudioStream.lastInputSampleBuffer, 
                       _VCAudioStream.lastIsTalking, _VCAudioStream.lastRTCPTimeoutReportTime, 
                       _VCAudioStream.lastRTPTimeoutReportTime, _VCAudioStream.lastSentAudioSampleTime, 
                       _VCAudioStream.lastVoiceActive, _VCAudioStream.numBufferBytesAvailable, 
                       _VCAudioStream.operatingMode, _VCAudioStream.packetTimeoutCheckCounter, 
                       _VCAudioStream.pausedAudioHeartBeat, _VCAudioStream.preferredAudioCodec, 
                       _VCAudioStream.reportingAgent, _VCAudioStream.rtpHandle, 
                       _VCAudioStream.sampleRate, _VCAudioStream.samplesPerFrame, 
                       _VCAudioStream.sessionLock, _VCAudioStream.soundMeter, 
                       _VCAudioStream.state, _VCAudioStream.stateLock, 
                       _VCAudioStream.streamConfig, _VCAudioStream.syncSourceDelegate, 
                       _VCAudioStream.vpioFormat, _VCAudioStream.wrmClient, 
                       _VCAudioStream.wrmInfo, _VCAudioTier.audioBitrate, 
                       _VCAudioTier.networkBitrate, _VCAudioTier.packetsPerBundle, 
                       _VCAudioTier.payload, _VCAudioTierPicker.audioTiers, 
                       _VCAudioTierPicker.defaultTier, _VCAudioTierPicker.fallbackTier, 
                       _VCAudioTierPicker.isUsingCellular, _VCAudioTierPicker.mode, 
                       _VCAudioTransmitter._packetSent, _VCAudioTransmitter._rtpHandle, 
                       _VCAudioTransmitter._sampleRate, _VCAudioTransmitter._samplesPerFrame, 
                       _VCBitrateArbiter._maxAllowedAudioOnlyBitrate2G, 
                       _VCBitrateArbiter._maxAllowedAudioOnlyBitrate3G, 
                       _VCBitrateArbiter._maxAllowedAudioOnlyBitrateLTE, 
                       _VCBitrateArbiter._maxAllowedAudioOnlyBitrateWifi, 
                       _VCBitrateArbiter._maxAllowedBitrate, _VCBitrateArbiter._maxAllowedBitrate2G, 
                       _VCBitrateArbiter._maxAllowedBitrate3G, _VCBitrateArbiter._maxAllowedBitrateLTE, 
                       _VCBitrateArbiter._maxAllowedBitrateWifi, _VCBitrateArbiter._maxAllowedScreenShareBitrate2G, 
                       _VCBitrateArbiter._maxAllowedScreenShareBitrate3G, 
                       _VCBitrateArbiter._maxAllowedScreenShareBitrateLTE, 
                       _VCBitrateArbiter._maxAllowedScreenShareBitrateWifi, 
                       _VCBitrateArbiter.supportedBitrateRules, _VCBitrateRule._bitrate, 
                       _VCBitrateRule._connectionType, _VCBitrateRule.limitingRule, 
                       _VCCallInfo._deviceType, _VCCallInfo._frameworkVersion, 
                       _VCCallInfo._osVersion, _VCCallInfo.auNumber, _VCCallInfo.callID, 
                       _VCCallInfo.cellBandwidth, _VCCallInfo.firstDegradedMeasure, 
                       _VCCallInfo.is4x, _VCCallInfo.isIOS, _VCCallInfo.isPreLionOS, 
                       _VCCallInfo.isVideoQualityDegraded, _VCCallInfo.lastBadVideoQualityTime, 
                       _VCCallInfo.lastGoodVideoQualityTime, _VCCallInfo.lastVideoQualityDegradedSwitchTime, 
                       _VCCallInfo.maxBandwidth, _VCCallInfo.participantID, 
                       _VCCallInfo.sdp, _VCCallInfo.sdpString, _VCCallInfo.supportsDynamicMaxBitrate, 
                       _VCCallInfo.supportsSKEOptimization, _VCCallInfo.supportsSpecialAACBundle, 
                       _VCCallInfo.u8Version, _VCCallInfo.useNewPLCalc, 
                       _VCCallInfo.usesInitialFECImplementation, _VCCallInfo.videoDegradedThreshold, 
                       _VCCallInfo.videoIsPaused, _VCCallInfo.visibleRectCropping, 
                       _VCCallInfoBlob._callID, _VCCallInfoBlob._clientVersion, 
                       _VCCallInfoBlob._deviceType, _VCCallInfoBlob._frameworkVersion, 
                       _VCCallInfoBlob._osVersion, _VCCallLinkCongestionDetector.isLinkCongested, 
                       _VCCallLinkCongestionDetector.lossRateThreshold, 
                       _VCCallLinkCongestionDetector.rttThreshold, _VCCallSession._allPayloadsLocalFeaturesString, 
                       _VCCallSession._captionsReceiver, _VCCallSession._cleanupDone, 
                       _VCCallSession._deviceRole, _VCCallSession._didSendBasebandCodec, 
                       _VCCallSession._inviteDataRequested, _VCCallSession._isConnectedOnIPv6_LowestConnectionQuality, 
                       _VCCallSession._isLocalCellular_LowestConnectionQuality, 
                       _VCCallSession._isRemoteCellular_LowestConnectionQuality, 
                       _VCCallSession._mediaNegotiator, _VCCallSession._peerProtocolVersion, 
                       _VCCallSession._sipState, _VCCallSession._transportSession, 
                       _VCCallSession._transportType, _VCCallSession._useAMRLowLatencyMode, 
                       _VCCallSession.aacBlockSize, _VCCallSession.afrcBitrate, 
                       _VCCallSession.afrcDuplication, _VCCallSession.allowAudioRecording, 
                       _VCCallSession.allowAudioSwitching, _VCCallSession.audioBundler, 
                       _VCCallSession.audioFrameCounter, _VCCallSession.audioHeaderSize, 
                       _VCCallSession.audioInterval, _VCCallSession.audioIsPaused, 
                       _VCCallSession.audioPayloads, _VCCallSession.audioReceiver, 
                       _VCCallSession.audioTierChangeRequestCount, _VCCallSession.audioTierHysteresis, 
                       _VCCallSession.audioTierPicker_AppleCalling, _VCCallSession.audioTierPicker_FaceTime, 
                       _VCCallSession.audioTransmitter, _VCCallSession.audioTxBitrate, 
                       _VCCallSession.awdCallNonce, _VCCallSession.awdTime, 
                       _VCCallSession.bBWEstActiveProbingSenderLog, _VCCallSession.bBWEstFakeLargeFrameModeEnabled, 
                       _VCCallSession.bBWEstNewBWEstModeEnabled, _VCCallSession.bBWEstOperatingModeInitialized, 
                       _VCCallSession.bandwidthDownstream, _VCCallSession.bandwidthUpstream, 
                       _VCCallSession.basebandCodecSampleRate, _VCCallSession.basebandCodecType, 
                       _VCCallSession.blockSeconds, _VCCallSession.blockSize, 
                       _VCCallSession.callSessionBitrate, _VCCallSession.callSessionBitrateArbiter, 
                       _VCCallSession.cameraTimers, _VCCallSession.canLocalResizePIP, 
                       _VCCallSession.canRemoteResizePIP, _VCCallSession.caps, 
                       _VCCallSession.carrierBitrateCap, _VCCallSession.cellTechChangeSource, 
                       _VCCallSession.cellTechQueue, _VCCallSession.congestionDetector, 
                       _VCCallSession.connectionChangeQueue, _VCCallSession.connectionChangeState, 
                       _VCCallSession.connectionManager, _VCCallSession.connectionTimeoutSource, 
                       _VCCallSession.currentAudioPayload, _VCCallSession.currentAudioTier, 
                       _VCCallSession.currentDTXPayload, _VCCallSession.delegate, 
                       _VCCallSession.didAttemptSIPInvite, _VCCallSession.didPrepareSRTP, 
                       _VCCallSession.didSend200OK, _VCCallSession.dwRTT_ice, 
                       _VCCallSession.enableAFRCDump, _VCCallSession.estimateTxAudioBytes, 
                       _VCCallSession.expectedDecodeSize, _VCCallSession.fInitialBandwidthDetection, 
                       _VCCallSession.featuresListStringDict, _VCCallSession.fecMode, 
                       _VCCallSession.hAFRC, _VCCallSession.hMediaQueue, 
                       _VCCallSession.hSIP, _VCCallSession.hVideoReceiver, 
                       _VCCallSession.hVideoTransmitter, _VCCallSession.hdBufferPool, 
                       _VCCallSession.hdTransferSession, _VCCallSession.iRATSuggestionEnabled, 
                       _VCCallSession.iRemoteRTCPPort, _VCCallSession.iRemoteRTPPort, 
                       _VCCallSession.imageAttributeRules, _VCCallSession.initialReceivedBytes, 
                       _VCCallSession.initialSentBytes, _VCCallSession.inputMeter, 
                       _VCCallSession.isAudioRunning, _VCCallSession.isCurrentNetworkBad, 
                       _VCCallSession.isGKVoiceChat, _VCCallSession.isInitiator, 
                       _VCCallSession.isRTCPFBEnabled, _VCCallSession.isRemoteMediaStalled, 
                       _VCCallSession.isStarted, _VCCallSession.isWaitingForICEResult, 
                       _VCCallSession.lastAudioStalled, _VCCallSession.lastInputSampleBuffer, 
                       _VCCallSession.lastInputSampleBufferSize, _VCCallSession.lastIsTalking, 
                       _VCCallSession.lastReceived, _VCCallSession.lastReceivedPacketTimestamp, 
                       _VCCallSession.lastSentAudioSampleTime, _VCCallSession.lastTierSwitch, 
                       _VCCallSession.lastUpdateQualityIndicator, _VCCallSession.lastVCLogCallbackTime, 
                       _VCCallSession.lastVideoQualityNotificationUpdate, 
                       _VCCallSession.localCallInfo, _VCCallSession.managerQueue, 
                       _VCCallSession.maxPacketLength, _VCCallSession.messaging, 
                       _VCCallSession.mutedPeers, _VCCallSession.mutex, 
                       _VCCallSession.natType, _VCCallSession.networkConditionsTimeoutInSeconds, 
                       _VCCallSession.noRemotePacketsTimeout, _VCCallSession.operatingMode, 
                       _VCCallSession.packetLateAndMissingRatio, _VCCallSession.packetLossRate, 
                       _VCCallSession.packetMultiplexMode, _VCCallSession.packetThread, 
                       _VCCallSession.packetsSinceStall, _VCCallSession.pauseLock, 
                       _VCCallSession.pausedAudioHeartBeat, _VCCallSession.peerCN, 
                       _VCCallSession.perfTimers, _VCCallSession.preferredAudioCodec, 
                       _VCCallSession.qualityDelegate, _VCCallSession.qualityDelegateLock, 
                       _VCCallSession.qualityQueue, _VCCallSession.receivedFirstRemoteFrame, 
                       _VCCallSession.receivedSIPInvite, _VCCallSession.remoteCallInfo, 
                       _VCCallSession.remoteExpectedLandscapeAspectRatio, 
                       _VCCallSession.remoteExpectedPortraitAspectRatio, 
                       _VCCallSession.remoteFrameHeight, _VCCallSession.remoteFrameWidth, 
                       _VCCallSession.remoteScreenLandscapeAspectRatio, 
                       _VCCallSession.remoteScreenPortraitAspectRatio, 
                       _VCCallSession.remoteSupportsExpectedAspectRatio, 
                       _VCCallSession.remoteSupportsVisibleRect, _VCCallSession.remoteVideoAttributes, 
                       _VCCallSession.reportReportFrequency, _VCCallSession.reportUpdateInterval, 
                       _VCCallSession.reportingAgent, _VCCallSession.requestedAudioTier, 
                       _VCCallSession.ringBuf, _VCCallSession.roundTripTime, 
                       _VCCallSession.rtpHandle, _VCCallSession.rtpVideo, 
                       _VCCallSession.sampleLogCount, _VCCallSession.sampleRate, 
                       _VCCallSession.samplesPerFrame, _VCCallSession.screenPayload, 
                       _VCCallSession.secretKey, _VCCallSession.secureDataChannel, 
                       _VCCallSession.sentAudioBytes, _VCCallSession.sentClientSuccessfulDidStart, 
                       _VCCallSession.sessionHealthMonitor, _VCCallSession.sessionID, 
                       _VCCallSession.shouldSendAudio, _VCCallSession.shouldSendBlackFrame, 
                       _VCCallSession.shouldTimeoutPackets, _VCCallSession.shouldUpdateLastReceivedPacketTimestamp, 
                       _VCCallSession.signalGrade, _VCCallSession.signalRaw, 
                       _VCCallSession.signalStrength, _VCCallSession.silenceFrameCounter, 
                       _VCCallSession.skeState, _VCCallSession.srtpKeyBytes, 
                       _VCCallSession.srtpLock, _VCCallSession.state, _VCCallSession.telephonyInterface, 
                       _VCCallSession.timeLastCheckedNetworkConditions, 
                       _VCCallSession.timeLastKnowGoodNetworkPLR, _VCCallSession.timeLastKnowGoodNetworkRTT, 
                       _VCCallSession.timeSinceLastReportedNoPackets, _VCCallSession.timestampQueue, 
                       _VCCallSession.toBeChangedPrimaryConnection, _VCCallSession.totalTxAudioBytes, 
                       _VCCallSession.useAFRC, _VCCallSession.useControlByte, 
                       _VCCallSession.useSBR, _VCCallSession.useUEP, _VCCallSession.vadSegmentCounter, 
                       _VCCallSession.vcWCMClient, _VCCallSession.vcWRMClient, 
                       _VCCallSession.videoAsyncQueue, _VCCallSession.videoPayload, 
                       _VCCallSession.videoQueue, _VCCallSession.videoThrottlingTimeout, 
                       _VCCallSession.vpioFormat, _VCCallSession.wrmInfo, 
                       _VCCapabilities.actualAudioCodec, _VCCapabilities.actualVideoCodec, 
                       _VCCapabilities.deviceRole, _VCCapabilities.isAudioEnabled, 
                       _VCCapabilities.isAudioPausedToStart, _VCCapabilities.isDTLSEnabled, 
                       _VCCapabilities.isDuplexAudioOnly, _VCCapabilities.isDuplexVideoOnly, 
                       _VCCapabilities.isKeyExchangeEnabled, _VCCapabilities.isRelayEnabled, 
                       _VCCapabilities.isRelayForced, _VCCapabilities.isVideoEnabled, 
                       _VCCapabilities.isVideoPausedToStart, _VCCapabilities.isVideoSourceScreen, 
                       _VCCapabilities.preferredAudioCodec, _VCCapabilities.preferredVideoCodec, 
                       _VCCapabilities.requiresWifi, _VCCaptionsClientContext._streamToken, 
                       _VCCaptionsManager._connection, _VCCaptionsManager._streamTokenList, 
                       _VCCaptionsManager._xpcCallbackQueue, _VCCaptionsManager._xpcCommandQueue, 
                       _VCCaptionsManagerStreamTokenClientList._captionsSource, 
                       _VCCaptionsManagerStreamTokenClientList._clientContextList, 
                       _VCCaptionsManagerStreamTokenClientList._streamToken, 
                       _VCCaptionsReceiver._captionsLastUpdateNumber, _VCCaptionsReceiver._captionsLastUtteranceNumber, 
                       _VCCaptionsReceiver._currentTranscription, _VCCaptionsReceiver._delegate, 
                       _VCCaptionsSegment._confidence, _VCCaptionsSegment._has, 
                       _VCCaptionsSegment._hasSpaceAfter, _VCCaptionsSegment._text, 
                       _VCCaptionsTranscription._has, _VCCaptionsTranscription._isFinal, 
                       _VCCaptionsTranscription._isLocal, _VCCaptionsTranscription._segments, 
                       _VCCaptionsTranscription._updateNumber, _VCCaptionsTranscription._utteranceNumber, 
                       _VCClientRelay._connectionResult, _VCClientRelay._idsReadQueue, 
                       _VCClientRelay._idsReadSource, _VCClientRelay._idsSocket, 
                       _VCClientRelay._isConnectionResultSet, _VCClientRelay._stopVTPReceiveThread, 
                       _VCClientRelay._vtpDestination, _VCClientRelay._vtpDestinationLength, 
                       _VCClientRelay._vtpReceiveTID, _VCClientRelay._vtpSocket, 
                       _VCConnectionIDS._cellularMTU, _VCConnectionIDS._datagramChannelToken, 
                       _VCConnectionIDS._linkContext, _VCConnectionIDS._localCellTech, 
                       _VCConnectionIDS._priority, _VCConnectionIDS._remoteCellTech, 
                       _VCConnectionIDS._type, _VCConnectionLegacy._connectionResult, 
                       _VCConnectionLegacy._priority, _VCConnectionLegacy._type, 
                       _VCConnectionLegacy._waitToBeNominated, _VCConnectionManager._callID, 
                       _VCConnectionManager._connectionForDuplication, 
                       _VCConnectionManager._delegate, _VCConnectionManager._delegateQueue, 
                       _VCConnectionManager._duplicationPending, _VCConnectionManager._enableDuplication, 
                       _VCConnectionManager._isInitialConnectionEstablished, 
                       _VCConnectionManager._lastPrimaryConnectionInUse, 
                       _VCConnectionManager._mediaExcessiveCellularRxBytes, 
                       _VCConnectionManager._mediaExcessiveCellularTxBytes, 
                       _VCConnectionManager._preferredLocalInterfaceForDuplication, 
                       _VCConnectionManager._preferredRemoteInterfaceForDuplication, 
                       _VCConnectionManager._primaryConnection, _VCConnectionManager._relayServerProvider, 
                       _VCConnectionManager._reportingAgent, _VCConnectionManager._secondaryConnection, 
                       _VCConnectionManager._signalingExcessiveCellularRxBytes, 
                       _VCConnectionManager._signalingExcessiveCellularTxBytes, 
                       _VCConnectionManager._stateQueue, _VCConnectionManager._stateRWlock, 
                       _VCConnectionManagerIDS._connectionArray, _VCConnectionManagerIDS._lastTimestampForRemoteSendingFromNonPrimary, 
                       _VCConnectionManagerIDS._lastTimestampPreferredRemoteInterfaceUpdated, 
                       _VCConnectionManagerLegacy._pendingPrimaryConnection, 
                       _VCConnectionManagerLegacy._pendingSecondaryConnection, 
                       _VCConnectionManagerLegacy._validConnections, _VCDatagramChannelManager._VFDs, 
                       _VCDatagramChannelManager._datagramChannels, _VCDatagramChannelManager._destinations, 
                       _VCDatagramChannelManager._nextToken, _VCDatagramChannelManager._readHandler, 
                       _VCDatagramChannelManager._service, _VCDatagramChannelManager._stateLock, 
                       _VCDispatchQueue._lock, _VCDispatchQueue._rootQueues, 
                       _VCHardwareSettingsEmbedded._chipId, _VCHardwareSettingsEmbedded._deviceClass, 
                       _VCHardwareSettingsEmbedded._deviceName, _VCHardwareSettingsEmbedded._screenHeight, 
                       _VCHardwareSettingsEmbedded._screenWidth, _VCHardwareSettingsEmbedded._videoEncoderType, 
                       _VCImageAttributeRules._imageAttributeRules, _VCImageQueue._caQueue, 
                       _VCImageQueue._figQueue, _VCImageQueue._frameRate, 
                       _VCImageQueue._imageQueueProtected, _VCImageQueue._slot, 
                       _VCMediaNegotiationBlob._allowDynamicMaxBitrate, 
                       _VCMediaNegotiationBlob._allowsContentsChangeWithAspectPreservation, 
                       _VCMediaNegotiationBlob._audioSettings, _VCMediaNegotiationBlob._bandwidthSettings, 
                       _VCMediaNegotiationBlob._basebandCodec, _VCMediaNegotiationBlob._basebandCodecSampleRate, 
                       _VCMediaNegotiationBlob._captionsSettings, _VCMediaNegotiationBlob._has, 
                       _VCMediaNegotiationBlob._screenSettings, _VCMediaNegotiationBlob._userAgent, 
                       _VCMediaNegotiationBlob._videoSettings, _VCMediaNegotiationBlobAudioSettings._audioUnitModel, 
                       _VCMediaNegotiationBlobAudioSettings._has, _VCMediaNegotiationBlobAudioSettings._payloadFlags, 
                       _VCMediaNegotiationBlobAudioSettings._rtpSSRC, _VCMediaNegotiationBlobAudioSettings._secondaryFlags, 
                       _VCMediaNegotiationBlobAudioSettings._supportFlags, 
                       _VCMediaNegotiationBlobAudioSettings._useSBR, _VCMediaNegotiationBlobBandwidthSettings._configuration, 
                       _VCMediaNegotiationBlobBandwidthSettings._maxBandwidth, 
                       _VCMediaNegotiationBlobCaptionsSettings._canDisplayCaptions, 
                       _VCMediaNegotiationBlobCaptionsSettings._has, _VCMediaNegotiationBlobCaptionsSettings._senderLanguages, 
                       _VCMediaNegotiationBlobVideoPayloadSettings._featureString, 
                       _VCMediaNegotiationBlobVideoPayloadSettings._parameterSet, 
                       _VCMediaNegotiationBlobVideoPayloadSettings._payload, 
                       _VCMediaNegotiationBlobVideoPayloadSettings._videoRuleCollections, 
                       _VCMediaNegotiationBlobVideoRuleCollection._formats, 
                       _VCMediaNegotiationBlobVideoRuleCollection._has, 
                       _VCMediaNegotiationBlobVideoRuleCollection._operation, 
                       _VCMediaNegotiationBlobVideoRuleCollection._preferredFormat, 
                       _VCMediaNegotiationBlobVideoRuleCollection._transport, 
                       _VCMediaNegotiationBlobVideoSettings._allowRTCPFB, 
                       _VCMediaNegotiationBlobVideoSettings._rtpSSRC, _VCMediaNegotiationBlobVideoSettings._videoPayloadCollections, 
                       _VCMediaNegotiator._localSettings, _VCMediaNegotiator._negotiatedAudioSettings, 
                       _VCMediaNegotiator._negotiatedCaptionsSettings, 
                       _VCMediaNegotiator._negotiatedScreenSettings, _VCMediaNegotiator._negotiatedSettings, 
                       _VCMediaNegotiator._negotiatedVideoSettings, _VCMediaNegotiator._negotiationDone, 
                       _VCMediaNegotiator._usePreNegotiation, _VCMediaNegotiatorAudioResults._allowRecording, 
                       _VCMediaNegotiatorAudioResults._allowSwitching, 
                       _VCMediaNegotiatorAudioResults._audioUnitModel, 
                       _VCMediaNegotiatorAudioResults._dtxPayload, _VCMediaNegotiatorAudioResults._primaryPayload, 
                       _VCMediaNegotiatorAudioResults._remoteSSRC, _VCMediaNegotiatorAudioResults._secondaryPayloads, 
                       _VCMediaNegotiatorCaptionsResults._isSupported, 
                       _VCMediaNegotiatorCaptionsResults._localLanguages, 
                       _VCMediaNegotiatorCaptionsResults._remoteCanDisplayCaptions, 
                       _VCMediaNegotiatorCaptionsResults._remoteLanguages, 
                       _VCMediaNegotiatorLocalConfiguration._allowAudioRecording, 
                       _VCMediaNegotiatorLocalConfiguration._allowAudioSwitching, 
                       _VCMediaNegotiatorLocalConfiguration._allowRTCPFB, 
                       _VCMediaNegotiatorLocalConfiguration._audioRuleCollection, 
                       _VCMediaNegotiatorLocalConfiguration._audioSSRC, 
                       _VCMediaNegotiatorLocalConfiguration._audioUnitNumber, 
                       _VCMediaNegotiatorLocalConfiguration._basebandCodec, 
                       _VCMediaNegotiatorLocalConfiguration._basebandCodecSampleRate, 
                       _VCMediaNegotiatorLocalConfiguration._bitrateArbiter, 
                       _VCMediaNegotiatorLocalConfiguration._captionsReceiverLanguages, 
                       _VCMediaNegotiatorLocalConfiguration._captionsSenderLanguages, 
                       _VCMediaNegotiatorLocalConfiguration._deviceRole, 
                       _VCMediaNegotiatorLocalConfiguration._isCaller, 
                       _VCMediaNegotiatorLocalConfiguration._preferredAudioCodec, 
                       _VCMediaNegotiatorLocalConfiguration._screenRuleCollections, 
                       _VCMediaNegotiatorLocalConfiguration._videoFeatureStrings, 
                       _VCMediaNegotiatorLocalConfiguration._videoRuleCollections, 
                       _VCMediaNegotiatorLocalConfiguration._videoSSRC, 
                       _VCMediaNegotiatorResults._bandwidthSettings, _VCMediaNegotiatorResults._remoteBasebandCodec, 
                       _VCMediaNegotiatorResults._remoteBasebandCodecSampleRate, 
                       _VCMediaNegotiatorResults._remoteUserAgent, _VCMediaNegotiatorResults._supportsDynamicMaxBitrate, 
                       _VCMediaNegotiatorVideoResults._featureStrings, 
                       _VCMediaNegotiatorVideoResults._isRTCPFBEnabled, 
                       _VCMediaNegotiatorVideoResults._isSupported, _VCMediaNegotiatorVideoResults._parameterSets, 
                       _VCMediaNegotiatorVideoResults._remoteSSRC, _VCMediaNegotiatorVideoResults._videoRuleCollections, 
                       _VCMediaStreamManager.stateLock, _VCMediaStreamManager.streamArray, 
                       _VCMediaStreamManager.xpcQueue, _VCMediaStreamStats._lastRecordingTime, 
                       _VCMediaStreamStats._maxBitrateKbps, _VCMediaStreamStats._maxFrameDurationMillis, 
                       _VCMediaStreamStats._maxFramerate, _VCMediaStreamStats._minBitrateKbps, 
                       _VCMediaStreamStats._minFramerate, _VCMediaStreamStats._summerHandle, 
                       _VCMediaStreamSynchronizer._destination, _VCMediaStreamSynchronizer._mediaStreamSynchronizerQueue, 
                       _VCMediaStreamSynchronizer._source, _VCMediaStreamSynchronizer._sourcePlayoutSampleRTPTimestamp, 
                       _VCMediaStreamSynchronizer._sourcePlayoutSampleSystemTime, 
                       _VCMediaStreamSynchronizer._sourceState, _VCNetworkAgent.active, 
                       _VCNetworkAgent.agentDescription, _VCNetworkAgent.agentUUID, 
                       _VCNetworkAgent.kernelActivated, _VCNetworkAgent.specificUseOnly, 
                       _VCNetworkAgent.userActivated, _VCNetworkAgent.voluntary, 
                       _VCPacketBundler._accessUnitDataSectionSize, _VCPacketBundler._accessUnitHeaderInfo, 
                       _VCPacketBundler._allowLargePackets, _VCPacketBundler._buffer, 
                       _VCPacketBundler._bufferSize, _VCPacketBundler._bundledPackets, 
                       _VCPacketBundler._encodedBufferSize, _VCPacketBundler._isFull, 
                       _VCPacketBundler._maxPacketSize, _VCPacketBundler._mutex, 
                       _VCPacketBundler._packetsPerBundle, _VCPacketBundler._payload, 
                       _VCPacketBundler._timestamp, _VCPacketBundler._useRFC3640, 
                       _VCRemoteVideoManager._queuesForStreamTokenDict, 
                       _VCRemoteVideoManager._remoteVideoLock, _VCRemoteVideoManager._stateCacheForStreamTokenDict, 
                       _VCRemoteVideoManager._xpcCallbackQueue, _VCRemoteVideoManager._xpcCommandQueue, 
                       _VCRemoteVideoState._hasReceivedFirstFrame, _VCRemoteVideoState._isMediaStalled, 
                       _VCRemoteVideoState._isVideoDegraded, _VCRemoteVideoState._isVideoPaused, 
                       _VCRemoteVideoState._localInterfaceType, _VCRemoteVideoState._remoteInterfaceType, 
                       _VCRemoteVideoState._remoteScreenAttributes, _VCRemoteVideoState._remoteVideoAttributes, 
                       _VCScreenCapture._captureFramerate, _VCScreenCapture._captureHeight, 
                       _VCScreenCapture._captureWidth, _VCScreenCapture._frameCallback, 
                       _VCScreenCapture._frameCallbackData, _VCScreenCapture._isCapturing, 
                       _VCScreenCapture._isPreviewing, _VCScreenCapture._options, 
                       _VCScreenCapture._rotationBufferPool, _VCScreenCapture._rotationSession, 
                       _VCScreenCapture._screenCaptureLock, _VCScreenCapture._session, 
                       _VCScreenCapture._videoCaptureEventCallback, _VCScreenCapture._videoCaptureEventCallbackData, 
                       _VCSecureDataChannel._delegate, _VCSecureDataChannel._localCallID, 
                       _VCSecureDataChannel._maxUDPPayloadSize, _VCSecureDataChannel._remoteCallID, 
                       _VCSecureDataChannel._transport, _VCSecureDataChannel.tlsRecord, 
                       _VCServerBag.isLoaded, _VCServerBag.isLoadedCondition, 
                       _VCServerBag.isLoadedMutex, _VCServerBag.observer, 
                       _VCSessionMessageTopic.allowConcurrent, _VCSessionMessageTopic.associatedStrings, 
                       _VCSessionMessageTopic.handle, _VCSessionMessageTopic.inMessageQueue, 
                       _VCSessionMessageTopic.isSendingEnabled, _VCSessionMessageTopic.latestOutgoingMessageIndex, 
                       _VCSessionMessageTopic.latestReceivedTopicMessageNumber, 
                       _VCSessionMessageTopic.outMessageQueue, _VCSessionMessageTopic.p2pID, 
                       _VCSessionMessageTopic.receiveBlock, _VCSessionMessageTopic.shouldEncodeTopicKeyInMessage, 
                       _VCSessionMessageTopic.topicKey, _VCSessionMessageTopic.topicPrefix, 
                       _VCSessionMessaging.p2pID, _VCSessionMessaging.topics, 
                       _VCTransport.dataReceivedHandlerQueue, _VCTransport.dataReceivedHandlers, 
                       _VCTransport.delegateQueue, _VCTransport.iceBlocks, 
                       _VCTransport.tpHandle, _VCTransportSession._basebandNotificationRegistrationToken, 
                       _VCTransportSession._connectionManager, _VCTransportSession._connectionSetupPiggybackBlob, 
                       _VCTransportSession._didRegisterForBasebandNotifications, 
                       _VCTransportSession._eventHandler, _VCTransportSession._isCallActive, 
                       _VCTransportSession._notificationQueue, _VCTransportSession._perfTimings, 
                       _VCTransportSession._reportingAgent, _VCTransportSession._requiresWiFi, 
                       _VCTransportSession._stateQueue, _VCTransportSession._useCompressedConnectionData, 
                       _VCTransportSessionIDS._datagramChannel, _VCTransportSessionIDS._datagramChannelToken, 
                       _VCTransportSessionIDS._destination, _VCTransportSessionIDS._socket, 
                       _VCTransportSessionLegacy._NATType, _VCTransportSessionLegacy._callID, 
                       _VCTransportSessionLegacy._connectionDataTimeoutCondVar, 
                       _VCTransportSessionLegacy._connectionSetupRTTEstimate, 
                       _VCTransportSessionLegacy._delegate, _VCTransportSessionLegacy._didReceivePiggybackBlob, 
                       _VCTransportSessionLegacy._identity, _VCTransportSessionLegacy._interfaceListener, 
                       _VCTransportSessionLegacy._isCaller, _VCTransportSessionLegacy._isRemoteOSPreLion, 
                       _VCTransportSessionLegacy._isStarted, _VCTransportSessionLegacy._localConnectionData, 
                       _VCTransportSessionLegacy._localParticipantID, _VCTransportSessionLegacy._localRelayConnectionData, 
                       _VCTransportSessionLegacy._localRelayRequestResponse, 
                       _VCTransportSessionLegacy._localRelayUpdate, _VCTransportSessionLegacy._localU8Version, 
                       _VCTransportSessionLegacy._loopbackConnection, _VCTransportSessionLegacy._remoteCallID, 
                       _VCTransportSessionLegacy._remoteConnectionData, 
                       _VCTransportSessionLegacy._remoteParticipantID, 
                       _VCTransportSessionLegacy._remoteRelayConnectionData, 
                       _VCTransportSessionLegacy._remoteRelayRequestResponse, 
                       _VCTransportSessionLegacy._remoteRelayUpdate, _VCTransportSessionLegacy._sessionID, 
                       _VCTransportSessionLegacy._tcpTunnelClient, _VCTransportSessionLegacy._tunnel, 
                       _VCTransportSessionLegacy._useLoopback, _VCTransportSessionLegacy.allowsRelay, 
                       _VCTransportSessionLegacy.callerPreEmptiveTimeoutInSecs, 
                       _VCTransportSessionLegacy.initialSecondaryRelaySetupDone, 
                       _VCTransportSessionLegacy.pendingRelayCount, _VCTransportSessionLegacy.relaySetupTimer, 
                       _VCTransportSessionLegacy.relayState, _VCTransportSessionLegacy.requestedTimeoutRelay, 
                       _VCTransportSessionLegacy.rtChannel, _VCTransportSessionLegacy.transport, 
                       _VCVideoCaptureServer._isPreviewRunning, _VCVideoCaptureServer._newThermalLevel, 
                       _VCVideoCaptureServer._thermalLevel, _VCVideoCaptureServer._thermalNotificationToken, 
                       _VCVideoCaptureServer._xpcCommandQueue, _VCVideoCaptureServer.appDelegate, 
                       _VCVideoCaptureServer.avCapture, _VCVideoCaptureServer.backQueue, 
                       _VCVideoCaptureServer.bufferPool, _VCVideoCaptureServer.cameraClients, 
                       _VCVideoCaptureServer.cameraHealthMonitor, _VCVideoCaptureServer.captureClientQueue, 
                       _VCVideoCaptureServer.captureFrameCount, _VCVideoCaptureServer.captureServerQueue, 
                       _VCVideoCaptureServer.currentCameraID, _VCVideoCaptureServer.currentFrameRate, 
                       _VCVideoCaptureServer.currentHeight, _VCVideoCaptureServer.currentWidth, 
                       _VCVideoCaptureServer.delegateNotificationQueue, 
                       _VCVideoCaptureServer.falteredRenderingtimeStamp, 
                       _VCVideoCaptureServer.firstPreviewFrame, _VCVideoCaptureServer.frontQueue, 
                       _VCVideoCaptureServer.localExpectedLandscapeAspectRatio, 
                       _VCVideoCaptureServer.localExpectedPortraitAspectRatio, 
                       _VCVideoCaptureServer.localScreenLandscapeAspectRatio, 
                       _VCVideoCaptureServer.localScreenPortraitAspectRatio, 
                       _VCVideoCaptureServer.localVideoAttributes, _VCVideoCaptureServer.pendingFrameRate, 
                       _VCVideoCaptureServer.pendingHeight, _VCVideoCaptureServer.pendingWidth, 
                       _VCVideoCaptureServer.previewFrameCount, _VCVideoCaptureServer.resize, 
                       _VCVideoCaptureServer.screenCapture, _VCVideoCaptureServer.screenCaptureClients, 
                       _VCVideoCaptureServer.snapshotQueue, _VCVideoCaptureServer.snapshotRequestCount, 
                       _VCVideoCaptureServer.transferSession, _VCVideoCaptureServer.variablesQueue, 
                       _VCVideoRule._frameRate, _VCVideoRule._height, _VCVideoRule._payload, 
                       _VCVideoRule._priority, _VCVideoRule._width, _VCVideoRuleCollectionKey._encodingType, 
                       _VCVideoRuleCollectionKey._payload, _VCVideoRuleCollectionKey._transportType, 
                       _VCVideoRuleCollections._rules, _VCVideoRuleCollections._supportedPayloads, 
                       _VCVideoRuleCollectionsCamera._decodeHighDef, _VCVideoRuleCollectionsCamera._encodeHighDef, 
                       _VCVideoRuleCollectionsCameraEmbedded._hardwareSettings, 
                       _VCVideoRuleCollectionsCameraMac._decodeScore, _VCVideoRuleCollectionsCameraMac._encodeScore, 
                       _VCVideoRuleCollectionsCameraMac._hardwareSettings, 
                       _VCVideoRuleCollectionsScreen._hardwareSettings, 
                       _VCVideoStream._cachedRemoteVideoFrame, _VCVideoStream._callID, 
                       _VCVideoStream._delegate, _VCVideoStream._delegateNotificationQueue, 
                       _VCVideoStream._idsDestination, _VCVideoStream._isSRTPInitialized, 
                       _VCVideoStream._isValid, _VCVideoStream._lastDecodedFrameQueue, 
                       _VCVideoStream._lastRTCPTimeoutReportTime, _VCVideoStream._lastRTPTimeoutReportTime, 
                       _VCVideoStream._localLayerLock, _VCVideoStream._remoteLayerLock, 
                       _VCVideoStream._remoteQueue, _VCVideoStream._reportingAgent, 
                       _VCVideoStream._rtcpSendHeartBeat, _VCVideoStream._rtcpTimeoutEnabledTime, 
                       _VCVideoStream._rtpTimeoutEnabledTime, _VCVideoStream._state, 
                       _VCVideoStream._stateLock, _VCVideoStream._streamConfig, 
                       _VCVideoStream._streamLock, _VCVideoStream._streamToken, 
                       _VCVideoStream._uplinkOperatingBitrate, _VCVideoStream._videoRTP, 
                       _VCVideoStream._videoReceiver, _VCVideoStream._videoTransmitter, 
                       _VCVideoStream.datagramChannelToken, _VCVideoStreamNOWRDLossEventRateControl.OWRDList, 
                       _VCVideoStreamNOWRDLossEventRateControl._averageReceivedBitrate, 
                       _VCVideoStreamNOWRDLossEventRateControl._currentTierIndex, 
                       _VCVideoStreamNOWRDLossEventRateControl._doRateControlCounter, 
                       _VCVideoStreamNOWRDLossEventRateControl._firstReceiveTime, 
                       _VCVideoStreamNOWRDLossEventRateControl._firstSendTimestamp, 
                       _VCVideoStreamNOWRDLossEventRateControl._lastLossEventTime, 
                       _VCVideoStreamNOWRDLossEventRateControl._longAverageLag, 
                       _VCVideoStreamNOWRDLossEventRateControl._lossEventBuffer, 
                       _VCVideoStreamNOWRDLossEventRateControl._lossEventBufferIndex, 
                       _VCVideoStreamNOWRDLossEventRateControl._maxTierIndex, 
                       _VCVideoStreamNOWRDLossEventRateControl._minTierIndex, 
                       _VCVideoStreamNOWRDLossEventRateControl._nowrd, 
                       _VCVideoStreamNOWRDLossEventRateControl._nowrdAcc, 
                       _VCVideoStreamNOWRDLossEventRateControl._nowrdAccRampDownThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._nowrdAccRampUpThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._nowrdRampDownThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._nowrdRampUpThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._nowrdShort, 
                       _VCVideoStreamNOWRDLossEventRateControl._owrd, _VCVideoStreamNOWRDLossEventRateControl._packetLossRate, 
                       _VCVideoStreamNOWRDLossEventRateControl._prevOperatingTierIndex, 
                       _VCVideoStreamNOWRDLossEventRateControl._previousSendTimestamp, 
                       _VCVideoStreamNOWRDLossEventRateControl._previousTimestampDiff, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampDownLossEventBitrateThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampDownLossEventCountThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampDownLossRateThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampDownStatus, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampUpFrozenDuration, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampUpFrozenTime, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampUpNoLossEventDurationRatio, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampUpStatus, 
                       _VCVideoStreamNOWRDLossEventRateControl._rampUpStatusRateLimitedThreshold, 
                       _VCVideoStreamNOWRDLossEventRateControl._rateControlInterval, 
                       _VCVideoStreamNOWRDLossEventRateControl._rateControlTime, 
                       _VCVideoStreamNOWRDLossEventRateControl._roundTripTime, 
                       _VCVideoStreamNOWRDLossEventRateControl._sendTimestampWrappedAround, 
                       _VCVideoStreamNOWRDLossEventRateControl._shortAverageLag, 
                       _VCVideoStreamNOWRDLossEventRateControl._state, 
                       _VCVideoStreamNOWRDLossEventRateControl._targetBitrate, 
                       _VCVideoStreamNOWRDLossEventRateControl._totalActualBitrate, 
                       _VCVideoStreamOWRDLossEventRateControl._averageReceivedBitrate, 
                       _VCVideoStreamOWRDLossEventRateControl._currentTierIndex, 
                       _VCVideoStreamOWRDLossEventRateControl._firstReceiveTime, 
                       _VCVideoStreamOWRDLossEventRateControl._firstSendTimestamp, 
                       _VCVideoStreamOWRDLossEventRateControl._lastLossEventTime, 
                       _VCVideoStreamOWRDLossEventRateControl._longAverageLag, 
                       _VCVideoStreamOWRDLossEventRateControl._lossEventBuffer, 
                       _VCVideoStreamOWRDLossEventRateControl._lossEventBufferIndex, 
                       _VCVideoStreamOWRDLossEventRateControl._maxTierIndex, 
                       _VCVideoStreamOWRDLossEventRateControl._minTierIndex, 
                       _VCVideoStreamOWRDLossEventRateControl._owrd, _VCVideoStreamOWRDLossEventRateControl._packetLossRate, 
                       _VCVideoStreamOWRDLossEventRateControl._previousSendTimestamp, 
                       _VCVideoStreamOWRDLossEventRateControl._previousTimestampDiff, 
                       _VCVideoStreamOWRDLossEventRateControl._rampDownLossEventBitrateThreshold, 
                       _VCVideoStreamOWRDLossEventRateControl._rampDownLossEventCountThreshold, 
                       _VCVideoStreamOWRDLossEventRateControl._rampDownLossRateThreshold, 
                       _VCVideoStreamOWRDLossEventRateControl._rampDownOWRDThreshold, 
                       _VCVideoStreamOWRDLossEventRateControl._rampUpFrozenDuration, 
                       _VCVideoStreamOWRDLossEventRateControl._rampUpFrozenTime, 
                       _VCVideoStreamOWRDLossEventRateControl._rampUpNoLossEventDurationRatio, 
                       _VCVideoStreamOWRDLossEventRateControl._rampUpStatus, 
                       _VCVideoStreamOWRDLossEventRateControl._rampUpStatusRateLimitedThreshold, 
                       _VCVideoStreamOWRDLossEventRateControl._rateControlInterval, 
                       _VCVideoStreamOWRDLossEventRateControl._rateControlTime, 
                       _VCVideoStreamOWRDLossEventRateControl._roundTripTime, 
                       _VCVideoStreamOWRDLossEventRateControl._sendTimestampWrappedAround, 
                       _VCVideoStreamOWRDLossEventRateControl._shortAverageLag, 
                       _VCVideoStreamOWRDLossEventRateControl._state, _VCVideoStreamOWRDLossEventRateControl._targetBitrate, 
                       _VCVideoStreamRTTPLRRateControl._currentTierIndex, 
                       _VCVideoStreamRTTPLRRateControl._maxTierIndex, _VCVideoStreamRTTPLRRateControl._minTierIndex, 
                       _VCVideoStreamRTTPLRRateControl._packetLossRate, 
                       _VCVideoStreamRTTPLRRateControl._rampDownPacketLossRate, 
                       _VCVideoStreamRTTPLRRateControl._rampDownRoundTripTime, 
                       _VCVideoStreamRTTPLRRateControl._rampUpFrozenDuration, 
                       _VCVideoStreamRTTPLRRateControl._rampUpFrozenTime, 
                       _VCVideoStreamRTTPLRRateControl._rampUpPacketLossRate, 
                       _VCVideoStreamRTTPLRRateControl._rateControlInterval, 
                       _VCVideoStreamRTTPLRRateControl._rateControlTime, 
                       _VCVideoStreamRTTPLRRateControl._roundTripTime, 
                       _VCVideoStreamRTTPLRRateControl._state, _VCVideoStreamRTTPLRRateControl._targetBitrate, 
                       _VCVideoStreamRateAdaptation._adaptationTime, _VCVideoStreamRateAdaptation._averageBitrateWindowDuration, 
                       _VCVideoStreamRateAdaptation._downlinkQualityDidChange, 
                       _VCVideoStreamRateAdaptation._isOperatingAtMaxBitrate, 
                       _VCVideoStreamRateAdaptation._isOperatingAtMinBitrate, 
                       _VCVideoStreamRateAdaptation._maxOWRD, _VCVideoStreamRateAdaptation._operatingBitrate, 
                       _VCVideoStreamRateAdaptation._packetLossPercentage, 
                       _VCVideoStreamRateAdaptation._rateAdaptationEnabled, 
                       _VCVideoStreamRateAdaptation._rateController, _VCVideoStreamRateAdaptation._receivedTmmbnBitrate, 
                       _VCVideoStreamRateAdaptation._reportingAgent, _VCVideoStreamRateAdaptation._rtpHandle, 
                       _VCVideoStreamRateAdaptation._sendTmmbrBitrate, 
                       _VCVideoStreamRateAdaptation._stats, _VCVideoStreamRateAdaptation._tmmbRTT, 
                       _VCVideoStreamRateAdaptation._tmmbnReceiveTime, 
                       _VCVideoStreamRateAdaptation._tmmbrSendTime, _VCVideoStreamRateController._accumulatedTargetDataSize, 
                       _VCVideoStreamRateController._algorithm, _VCVideoStreamRateController._averageTargetBitrate, 
                       _VCVideoStreamRateController._didVideoStall, _VCVideoStreamRateController._logDump, 
                       _VCVideoStreamRateController._maxBitrate, _VCVideoStreamRateController._maxTierIndex, 
                       _VCVideoStreamRateController._minBitrate, _VCVideoStreamRateController._minTierIndex, 
                       _VCVideoStreamRateController._operatingTierIndex, 
                       _VCVideoStreamRateController._previousRTPTimestamp, 
                       _VCVideoStreamRateController._rateControl, _VCVideoStreamRateController._rateControlInterval, 
                       _VCVideoStreamRateController._rateControlTime, _VCVideoStreamRateController._targetBitrate, 
                       _VCVideoStreamRateController._totalTime, _VCVideoStreamRateController._videoFrozenDuration, 
                       _VCVideoStreamRateController._videoStreamRateControllerQueue, 
                       _VCVideoStreamReceiver._cvoExtensionID, _VCVideoStreamReceiver._decompressionSession, 
                       _VCVideoStreamReceiver._delegate, _VCVideoStreamReceiver._enableCVO, 
                       _VCVideoStreamReceiver._firSequenceNumber, _VCVideoStreamReceiver._formatDescription, 
                       _VCVideoStreamReceiver._hRTP, _VCVideoStreamReceiver._lastDisplayTime, 
                       _VCVideoStreamReceiver._lastFIRArrivalTime, _VCVideoStreamReceiver._lastFrameTime, 
                       _VCVideoStreamReceiver._lastKeyFrameSampleBufferSize, 
                       _VCVideoStreamReceiver._lastReceivedVideoRTCPPacketTime, 
                       _VCVideoStreamReceiver._lastReceivedVideoRTPPacketTime, 
                       _VCVideoStreamReceiver._lastSequenceNumber, _VCVideoStreamReceiver._lastVideoTimestamp, 
                       _VCVideoStreamReceiver._mediaStreamSynchronizer, 
                       _VCVideoStreamReceiver._mostRecentTimestamp, _VCVideoStreamReceiver._networkReceiveThread, 
                       _VCVideoStreamReceiver._rateAdaptation, _VCVideoStreamReceiver._receivedBytes, 
                       _VCVideoStreamReceiver._receivedFirstPacket, _VCVideoStreamReceiver._receivedFirstRemoteFrame, 
                       _VCVideoStreamReceiver._remoteVideoAttributes, _VCVideoStreamReceiver._remoteVideoCamera, 
                       _VCVideoStreamReceiver._remoteVideoOrientation, 
                       _VCVideoStreamReceiver._reportingAgent, _VCVideoStreamReceiver._reportingIntervalStartTime, 
                       _VCVideoStreamReceiver._reportingLastUpdateTime, 
                       _VCVideoStreamReceiver._roundTripTime, _VCVideoStreamReceiver._runNetworkReceiveThread, 
                       _VCVideoStreamReceiver._sRecvReset, _VCVideoStreamReceiver._sequenceNumberOutOfOrder, 
                       _VCVideoStreamReceiver._stats, _VCVideoStreamReceiver._syncSource, 
                       _VCVideoStreamReceiver._videoPacketBuffer, _VCVideoStreamReceiver._videoStallDurationMillis, 
                       _VCVideoStreamReceiver._videoStallStartTime, _VCVideoStreamReceiver._videoStreamReceiverQueue, 
                       _VCVideoStreamReceiver._videoTimestampWrapCount, 
                       _VCVideoStreamTransmitter._buffer, _VCVideoStreamTransmitter._bufferQueue, 
                       _VCVideoStreamTransmitter._bufferQueueSemaphore, 
                       _VCVideoStreamTransmitter._bufferSize, _VCVideoStreamTransmitter._captureHeight, 
                       _VCVideoStreamTransmitter._captureWidth, _VCVideoStreamTransmitter._compressionSession, 
                       _VCVideoStreamTransmitter._cvoExtensionID, _VCVideoStreamTransmitter._dwRefreshFrameCounter, 
                       _VCVideoStreamTransmitter._enableCVO, _VCVideoStreamTransmitter._encoderThread, 
                       _VCVideoStreamTransmitter._encodingHeight, _VCVideoStreamTransmitter._encodingWidth, 
                       _VCVideoStreamTransmitter._frameReferenceMemoryPool, 
                       _VCVideoStreamTransmitter._iSMBCount, _VCVideoStreamTransmitter._keyFrameIntervalDuration, 
                       _VCVideoStreamTransmitter._lastCameraStatusBits, 
                       _VCVideoStreamTransmitter._lastKeyFrameSampleBufferSize, 
                       _VCVideoStreamTransmitter._lastKeyFrameSentTime, 
                       _VCVideoStreamTransmitter._latestSampleBufferTimestamp, 
                       _VCVideoStreamTransmitter._maxPacketCount, _VCVideoStreamTransmitter._packetBuffer, 
                       _VCVideoStreamTransmitter._packetBufferSize, _VCVideoStreamTransmitter._packetFlags, 
                       _VCVideoStreamTransmitter._packetSizes, _VCVideoStreamTransmitter._recommendedMTU, 
                       _VCVideoStreamTransmitter._reportingAgent, _VCVideoStreamTransmitter._reportingIntervalStartTime, 
                       _VCVideoStreamTransmitter._reportingLastUpdateTime, 
                       _VCVideoStreamTransmitter._savedSampleBuffer, _VCVideoStreamTransmitter._shouldGenerateKeyFrame, 
                       _VCVideoStreamTransmitter._stats, _VCVideoStreamTransmitter._targetFramerate, 
                       _VCVideoStreamTransmitter._temporaryMaximumBitrate, 
                       _VCVideoStreamTransmitter._terminateEncoderThread, 
                       _VCVideoStreamTransmitter._timestamp, _VCVideoStreamTransmitter._transmitterQueue, 
                       _VCVideoStreamTransmitter._txMaxBitrate, _VCVideoStreamTransmitter._txMinBitrate, 
                       _VCVideoStreamTransmitter._videoCodecType, _VCVideoStreamTransmitter._videoRTP, 
                       _VCVideoStreamTransmitter._videoRule, _VCVideoStreamTransmitter._xMBs, 
                       _VCVirtualTTYDevice._charQueue, _VCVirtualTTYDevice._characterPool, 
                       _VCVirtualTTYDevice._currentAudioPayload, _VCVirtualTTYDevice._decoder, 
                       _VCVirtualTTYDevice.delegate, _VCVirtualTTYDevice.delegateNotificationQueue, 
                       _VCVirtualTTYDevice.deviceRole, _VCVirtualTTYDevice.isValid, 
                       _VCVirtualTTYDevice.sessionLock, _VCVirtualTTYDevice.state, 
                       _VCVirtualTTYDevice.vpioFormat, _VCVoIPRelay._internal, 
                       _VCVoIPRelayInternal._audioFormat, _VCVoIPRelayInternal._blockSizeSamples, 
                       _VCVoIPRelayInternal._canProcessAudio, _VCVoIPRelayInternal._clientCaptureBlock, 
                       _VCVoIPRelayInternal._clientRenderBlock, _VCWCMClient.connection, 
                       _VCWCMClient.connectionQueue, _VCWCMClient.wcmClientDelegate, 
                       _VCWeakObjectHolder._weakObject, _VideoAttributes.camera, 
                       _VideoAttributes.cameraSwitching, _VideoAttributes.contentsRect, 
                       _VideoAttributes.orientation, _VideoAttributes.ratio, 
                       _VideoAttributes.videoSourceScreen, _VideoConference._captionsDelegate, 
                       _VideoConference._deviceRole, _VideoConference._inputFFTMeter, 
                       _VideoConference._isWarmedUp, _VideoConference._outputFFTMeter, 
                       _VideoConference._remoteAudioPowerLevelMonitor, 
                       _VideoConference._transportType, _VideoConference.audioManager, 
                       _VideoConference.audioManagerQueue, _VideoConference.audioTimeStampDelta, 
                       _VideoConference.backQueue, _VideoConference.bweOperatingModeInitialized, 
                       _VideoConference.chatMode, _VideoConference.conferenceCaptureRule, 
                       _VideoConference.conferenceOperatingMode, _VideoConference.conferenceVolume, 
                       _VideoConference.connectedPeers, _VideoConference.currentCamera, 
                       _VideoConference.currentFacing, _VideoConference.currentFocus, 
                       _VideoConference.currentFocusSession, _VideoConference.currentQueue, 
                       _VideoConference.dAudioHostTime, _VideoConference.delegate, 
                       _VideoConference.delegateNotificationQueue, _VideoConference.disableVAD, 
                       _VideoConference.downstreamBandwidth, _VideoConference.dwAudioTS, 
                       _VideoConference.forceNoICE, _VideoConference.frontQueue, 
                       _VideoConference.hasMic, _VideoConference.inputFrequencyMeteringEnabled, 
                       _VideoConference.inputMeterLevel, _VideoConference.inputMeteringEnabled, 
                       _VideoConference.isFocus, _VideoConference.isGKVoiceChat, 
                       _VideoConference.isTalking, _VideoConference.isUsingSuppression, 
                       _VideoConference.isValid, _VideoConference.lastActiveCall, 
                       _VideoConference.lastReceivedAudioTimestamp, _VideoConference.lastSentAudioSampleTime, 
                       _VideoConference.localFrameHeight, _VideoConference.localFrameWidth, 
                       _VideoConference.longTerm, _VideoConference.manager, 
                       _VideoConference.microphoneMuted, _VideoConference.mostRecentStartedCall, 
                       _VideoConference.mutedPeers, _VideoConference.natMutex, 
                       _VideoConference.natObserver, _VideoConference.natTypeDictionary, 
                       _VideoConference.outputFrequencyMeteringEnabled, 
                       _VideoConference.outputMeterLevel, _VideoConference.outputMeteringEnabled, 
                       _VideoConference.packetsPerBundle, _VideoConference.preferredCodec, 
                       _VideoConference.qualityDelegate, _VideoConference.recvRTPTimeStamp, 
                       _VideoConference.remoteFrameHeight, _VideoConference.remoteFrameWidth, 
                       _VideoConference.requestedCameraType, _VideoConference.requiresWifi, 
                       _VideoConference.screenQueue, _VideoConference.sessionArray, 
                       _VideoConference.sessionDict, _VideoConference.shortTerm, 
                       _VideoConference.shouldPrioritizeParticipantIDForSIPInvite, 
                       _VideoConference.shouldResumeAudio, _VideoConference.shouldResumeVideo, 
                       _VideoConference.shouldTimeoutPackets, _VideoConference.speakingArray, 
                       _VideoConference.speakingDelegate, _VideoConference.stateLock, 
                       _VideoConference.synchronizer, _VideoConference.talkTime, 
                       _VideoConference.talkingPeersLimit, _VideoConference.timeStampUpdateCounter, 
                       _VideoConference.upstreamBandwidth, _VideoConference.useAFRC, 
                       _VideoConference.useActiveProbingSenderLog, _VideoConference.useCompressedConnectionData, 
                       _VideoConference.useFakeLargeFrameMode, _VideoConference.useNewBWEMode, 
                       _VideoConference.useViceroyBlobFormat, _VideoConference.xAudioTS, 
                       _VideoConference.xRemoteLayer, _VideoConferenceDefaults._forceBitrate, 
                       _VideoConferenceDefaults._forceCaptureHeight, _VideoConferenceDefaults._forceCaptureWidth, 
                       _VideoConferenceDefaults._forceEncodeFramerate, 
                       _VideoConferenceDefaults._forceEncodeHeight, _VideoConferenceDefaults._forceEncodeWidth, 
                       _VideoConferenceDefaults._forceFramerate, _VideoConferenceDefaults._forceRecvVideoPayload, 
                       _VideoConferenceDefaults._forceVideoPayload, _VideoConferenceManager._clientUUID, 
                       _VideoConferenceManager._networkAgent, _VideoConferenceManager._vtpWrapper, 
                       _VideoConferenceManager._xpcCommandQueue, _VideoConferenceManager.activeConference, 
                       _VideoConferenceManager.conferenceWithMic, _VideoConferenceManager.hSIP, 
                       _VideoConferenceManager.isVTPInitialized, _VideoConferenceManager.resultQueue, 
                       _VideoConferenceManager.sipLock, _VideoConferenceManager.sipRefCount, 
                       _VideoConferenceManager.stateLock, _VideoConferenceManager.vcList, 
                       _VideoScaler._ioSurfaceAccelerator, _VideoScaler._tempBuffer1, 
                       _VideoScaler._tempBuffer2, _VideoScaler._tempBufferHeight, 
                       _VideoScaler._tempBufferWidth, _WRMClient._connection, 
                       _WRMClient._connectionQueue, _WRMClient._wrmClientDelegate, 
                       _XPCClientUser._eventLogLevel, _XPCClientUser.block, 
                       _XPCClientUser.queue, _XPCConnection._connection, 
                       _XPCConnection._isPersistent, _XPCConnection._pid, 
                       _XPCConnection._transaction, _XPCConnection.context, 
                       _XPCConnection.tokenData, _XPCServerUser._eventLogLevel, 
                       _XPCServerUser.block, _XPCServerUser.queue ]
...
