// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.24.14 clang-1205.0.19.54)
// swift-module-flags: -target armv7-apple-ios10.3 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftMapKit -swift-version 5 -enforce-exclusivity=checked -O -module-name MapKit
import Foundation
@_exported import MapKit
import Swift
@available(iOS 14.0, tvOS 14.0, macOS 11.0, *)
extension MKGradientPolylineRenderer {
  public var locations: [CoreGraphics.CGFloat] {
    get
  }
  public func setColors(_ colors: [UIKit.UIColor], locations: [CoreGraphics.CGFloat])
}
extension MKCoordinateSpan : Swift._ObjectiveCBridgeable {
  public func _bridgeToObjectiveC() -> Foundation.NSValue
  public static func _forceBridgeFromObjectiveC(_ source: Foundation.NSValue, result: inout MapKit.MKCoordinateSpan?)
  public static func _conditionallyBridgeFromObjectiveC(_ source: Foundation.NSValue, result: inout MapKit.MKCoordinateSpan?) -> Swift.Bool
  public static func _unconditionallyBridgeFromObjectiveC(_ source: Foundation.NSValue?) -> MapKit.MKCoordinateSpan
  public typealias _ObjectiveCType = Foundation.NSValue
}
@available(iOS 14.0, tvOS 14.0, macOS 11.0, *)
extension MKMultiPoint {
  public func locations(at indexes: Foundation.IndexSet) -> [CoreGraphics.CGFloat]
}
@available(macOS 10.15, iOS 13.0, tvOS 13.0, *)
extension MKLocalSearch.Request {
  public typealias ResultType = MapKit.MKLocalSearch.ResultType
}
