// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.117.59 clang-1403.0.22.8.50)
// swift-module-flags: -target arm64e-apple-ios16.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name CoreAudioKit
// swift-module-flags-ignorable: -enable-bare-slash-regex -user-module-version 243.61
import AVFoundation
import AudioToolbox
@_exported import CoreAudioKit
import CoreFoundation
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class AUVerticalSegmentControl : UIKit.UIControl {
  @objc @_Concurrency.MainActor(unsafe) public init(frame: CoreFoundation.CGRect, data: [Swift.Dictionary<Swift.String, Any>])
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var accessibilityElements: [Any]? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @objc @_Concurrency.MainActor(unsafe) public func segmentSelectionChanged(notification: Foundation.Notification)
  @objc @_Concurrency.MainActor(unsafe) public func segmentEnabledChanged(notification: Foundation.Notification)
  @objc @_Concurrency.MainActor(unsafe) public func setSegment(at index: Swift.Int, enabled: Swift.Bool)
  @objc @_Concurrency.MainActor(unsafe) public func color(at index: Swift.Int) -> UIKit.UIColor
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
}
public typealias AUGenericViewInternalBase = UIKit.UIView
@_inheritsConvenienceInitializers @available(iOS 14.0, macOS 13.0, *)
@objc @_Concurrency.MainActor(unsafe) public class AUGenericViewInternal : CoreAudioKit.AUGenericViewInternalBase {
  @objc @_Concurrency.MainActor(unsafe) public var auAudioUnit: AudioToolbox.AUAudioUnit? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var owningController: UIKit.UIViewController?
  @objc @_Concurrency.MainActor(unsafe) public var paramObserverToken: AudioToolbox.AUParameterObserverToken?
  @_Concurrency.MainActor(unsafe) public var showSingleClumpIndex: Swift.Int? {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func traitCollectionDidChange(_ previousTraitCollection: UIKit.UITraitCollection?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @objc @_Concurrency.MainActor(unsafe) public func removeScheduledUpdatesTimer()
  @objc deinit
}
@available(iOS 14.0, macOS 13.0, *)
extension CoreAudioKit.AUGenericViewInternal {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, willDisplaySupplementaryView view: UIKit.UICollectionReusableView, forElementKind elementKind: Swift.StringLiteralType, at indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, willDisplay item: UIKit.UICollectionViewCell, forItemAt indexPath: Foundation.IndexPath)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class AUDelayGraphView : CoreAudioKit.CAAUGraphView {
  @objc @_Concurrency.MainActor(unsafe) public var invert: Swift.Bool {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func accessibilityIncrement()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func accessibilityDecrement()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func accessibilityActivate() -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public var dataSource: (any CoreAudioKit.CAAUViewParameterDataSource)? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override public func configure(data: Swift.Dictionary<Swift.String, Any>)
  @objc @_Concurrency.MainActor(unsafe) public var zoomFactor: Swift.Float {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public func update(for param: AudioToolbox.AudioUnitParameterID, value: Swift.Float)
  @objc @_Concurrency.MainActor(unsafe) public func graphFrame() -> CoreFoundation.CGRect
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesEnded(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class AUVerticalTabView : UIKit.UIControl {
  @objc @_Concurrency.MainActor(unsafe) public var selectedTabIndex: Swift.Int {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var numActiveTabs: Swift.Int {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var maxTabDimension: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public init(frame: CoreFoundation.CGRect, data: [Swift.Dictionary<Swift.String, Any>], horizontal: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var accessibilityElements: [Any]? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @available(iOS, introduced: 15, deprecated: 16)
@_Concurrency.MainActor(unsafe) public class AUDistortionView : UIKit.UIView, UIKit.UICollectionViewDelegate {
  @objc @_Concurrency.MainActor(unsafe) public var parameterDataSource: (any CoreAudioKit.CAAUViewParameterDataSource)!
  @objc @_Concurrency.MainActor(unsafe) public var auAudioUnit: AudioToolbox.AUAudioUnit? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var bounds: CoreFoundation.CGRect {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public func set(parameter: AudioToolbox.AudioUnitParameterID, value: Swift.Float)
  @objc deinit
}
@available(iOS, introduced: 15, deprecated: 16)
extension CoreAudioKit.AUDistortionView {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func sectionName(for index: Swift.Int) -> Swift.String?
  @available(iOS, introduced: 15, deprecated: 16)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func sectionColor(for index: Swift.Int) -> UIKit.UIColor?
  @available(iOS, introduced: 15, deprecated: 16)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func showSection(at index: Swift.Int)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUEQHeaderView : UIKit.UIView, UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMoveToSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc @_Concurrency.MainActor(unsafe) public func textFieldEditingDidChange(_ sender: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidBeginEditing(_ textField: UIKit.UITextField)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldDidEndEditing(_ textField: UIKit.UITextField, reason: UIKit.UITextField.DidEndEditingReason)
  @_Concurrency.MainActor(unsafe) @objc public func textFieldShouldReturn(_ textField: UIKit.UITextField) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc public func textField(_ textField: UIKit.UITextField, shouldChangeCharactersIn range: Foundation.NSRange, replacementString string: Swift.String) -> Swift.Bool
  @objc @_Concurrency.MainActor(unsafe) public func addParameter(id: AudioToolbox.AudioUnitParameterID, name: Swift.String, shortName: Swift.String, value: Swift.Float, min: Swift.Float, max: Swift.Float, logBase: Swift.Float, formatter: Foundation.Formatter, unit: Swift.String, additionalPad: CoreFoundation.CGFloat)
  @objc @_Concurrency.MainActor(unsafe) public func addParameter(id: AudioToolbox.AudioUnitParameterID, name: Swift.String, shortName: Swift.String, symbolName: Foundation.NSAttributedString?, value: Swift.Float, min: Swift.Float, max: Swift.Float, logBase: Swift.Float, formatter: Foundation.Formatter, unit: Swift.String, additionalPad: CoreFoundation.CGFloat)
  @objc @_Concurrency.MainActor(unsafe) public func setTitle(_ name: Swift.String, abbreviated title: Swift.String? = nil)
  @objc @_Concurrency.MainActor(unsafe) public func setColorForParameter(id: AudioToolbox.AudioUnitParameterID, color: UIKit.UIColor)
  @objc @_Concurrency.MainActor(unsafe) public func setParameter(id: AudioToolbox.AudioUnitParameterID, value: Swift.Float)
  @objc @_Concurrency.MainActor(unsafe) public func beginGesture(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func endGesture(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func beginTouch(notification: Foundation.Notification)
  @objc @_Concurrency.MainActor(unsafe) public func endTouch(notification: Foundation.Notification)
  @objc @_Concurrency.MainActor(unsafe) public func startEditing(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func endEditing(id: AudioToolbox.AudioUnitParameterID)
  @objc @_Concurrency.MainActor(unsafe) public func setConstraints(with identifier: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) public func adjustViewIfHorizontallyCompressed(_ newSize: CoreFoundation.CGSize)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public class var requiresConstraintBasedLayout: Swift.Bool {
    @objc get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 15, *)
@objc @_Concurrency.MainActor(unsafe) public class AUKnobControl : UIKit.UIControl {
  @objc @_Concurrency.MainActor(unsafe) public var value: Swift.Float {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc required override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var accessibilityTraits: UIKit.UIAccessibilityTraits {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func accessibilityIncrement()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func accessibilityDecrement()
  @objc @_Concurrency.MainActor(unsafe) public func configure(with data: Swift.Dictionary<Swift.String, Any>)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func beginTracking(_ touch: UIKit.UITouch, with event: UIKit.UIEvent?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func continueTracking(_ touch: UIKit.UITouch, with event: UIKit.UIEvent?) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func endTracking(_ touch: UIKit.UITouch?, with event: UIKit.UIEvent?)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class CANBandEQGraphView : CoreAudioKit.CAAUEQGraphView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc @_Concurrency.MainActor(unsafe) public func doubleTapped(_ gestureRecognizer: UIKit.UITapGestureRecognizer)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class AULimiterControlsView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) final public let meter: CoreAudioKit.AULabeledMeterView
  @objc @_Concurrency.MainActor(unsafe) public var knobs: [CoreAudioKit.AUKnobControl] {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var bounds: CoreFoundation.CGRect {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor(unsafe) public func setMeterLabel(_ label: Swift.String)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class AULabeledMeterView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var level: Swift.Float {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var vertical: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public func configure(data: Swift.Dictionary<Swift.String, Any>)
  @objc @_Concurrency.MainActor(unsafe) public var label: Swift.String? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var accessibilityTraits: UIKit.UIAccessibilityTraits {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func willMove(toSuperview newSuperview: UIKit.UIView?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSublayers(of layer: QuartzCore.CALayer)
  @objc deinit
}
@available(iOS, introduced: 15, deprecated: 16)
@objc public protocol AUCompressionParameterDataSource {
  @objc func color(parameter: AudioToolbox.AudioUnitParameterID) -> UIKit.UIColor
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class CACompressionView : CoreAudioKit.CAAUGraphView {
  @objc @_Concurrency.MainActor(unsafe) public var dataSource: (any CoreAudioKit.AUCompressionParameterDataSource & CoreAudioKit.CAAUViewParameterDataSource)? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var accessibilityElements: [Any]? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public func updateCompressionExpansionPaths()
  @objc @_Concurrency.MainActor(unsafe) public func updateCompressionTriangle()
  @objc @_Concurrency.MainActor(unsafe) public func updateGraph()
  @objc @_Concurrency.MainActor(unsafe) public func graphFrame() -> CoreFoundation.CGRect
  @objc @_Concurrency.MainActor(unsafe) public func valueForX(location: CoreFoundation.CGFloat) -> Swift.Float
  @objc @_Concurrency.MainActor(unsafe) public func valueForY(location: CoreFoundation.CGFloat) -> Swift.Float
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesEnded(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUEQGraphView : CoreAudioKit.CAAUGraphView {
  @objc @_Concurrency.MainActor(unsafe) public var dataSource: (any CoreAudioKit.CAAUViewParameterDataSource)? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func removeFromSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var accessibilityElements: [Any]? {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public func addPointControl(for x: Swift.UInt32, for y: Swift.UInt32) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func addRegionControl(for x: Swift.UInt32, width: Swift.UInt32) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func addRegionControl(for x: Swift.UInt32, width: Swift.UInt32, useTrianglesForWidth: Swift.Bool = false) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func addRegionControl(for x: Swift.UInt32, y: Swift.UInt32, width: Swift.UInt32) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func addRegionControl(for x: Swift.UInt32, y: Swift.UInt32, width: Swift.UInt32, useTrianglesForWidth: Swift.Bool = false) -> CoreAudioKit.CAAUFilterControl?
  @objc @_Concurrency.MainActor(unsafe) public func changeControlToHorizontalPoint(index: Swift.Int)
  @objc @_Concurrency.MainActor(unsafe) public func changeControlToRegion(index: Swift.Int, y: Swift.UInt32, width: Swift.UInt32)
  @objc @_Concurrency.MainActor(unsafe) public func changeControlToPoint(index: Swift.Int, y: Swift.UInt32)
  @objc @_Concurrency.MainActor(unsafe) public func changeControlToHorizontalPoint(index: Swift.Int, width: Swift.UInt32)
  @objc @_Concurrency.MainActor(unsafe) public func disableAllControls()
  @objc @_Concurrency.MainActor(unsafe) public func setActiveControl(_ index: Swift.Int)
  @objc @_Concurrency.MainActor(unsafe) public func setBypassed(_ index: Swift.Int, bypassed: Swift.Bool)
  @objc @_Concurrency.MainActor(unsafe) public func graphFrame() -> CoreFoundation.CGRect
  @objc @_Concurrency.MainActor(unsafe) public func graphView() -> CoreAudioKit.CAAUEQGraphView
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesEnded(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesCancelled(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @objc @_Concurrency.MainActor(unsafe) public func valueForX(location: CoreFoundation.CGFloat) -> Swift.Float
  @objc @_Concurrency.MainActor(unsafe) public func valueForY(location: CoreFoundation.CGFloat) -> Swift.Float
  @objc @_Concurrency.MainActor(unsafe) public func redrawCurve()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSublayers(of layer: QuartzCore.CALayer)
  @objc @_Concurrency.MainActor(unsafe) public func updateView(for param: Swift.UInt32, value: Swift.Float)
  @objc deinit
}
@available(iOS 14, *)
@objc public protocol CAAUViewParameterDataSource {
  @objc func name(for param: Swift.UInt32) -> Swift.String?
  @objc func shortName(for param: Swift.UInt32) -> Swift.String?
  @objc func unitLabel(for param: Swift.UInt32) -> Swift.String?
  @objc func value(for param: Swift.UInt32) -> Swift.Float
  @objc func minValue(for param: Swift.UInt32) -> Swift.Float
  @objc func maxValue(for param: Swift.UInt32) -> Swift.Float
  @objc func widthType(for param: Swift.UInt32) -> Swift.Int
  @objc func stringValues(for param: Swift.UInt32) -> [Swift.String]?
  @objc func accessibilityValue(for param: Swift.UInt32) -> Swift.String?
  @objc func curve(in rect: CoreFoundation.CGRect) -> CoreGraphics.CGPath?
  @objc func set(parameter address: Swift.UInt32, value: Swift.Float)
}
@_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc public class CAAUFilterControl : ObjectiveC.NSObject, QuartzCore.CALayerDelegate {
  @objc final public let dataSource: any CoreAudioKit.CAAUViewParameterDataSource
  @objc public var controlLayer: QuartzCore.CALayer?
  @objc public var enabled: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public var bypassed: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public func set(color: UIKit.UIColor)
  @objc public func layoutSublayers(of layer: QuartzCore.CALayer)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class CAAdjustingHeaderView : CoreAudioKit.CAAUEQHeaderView {
  @objc @_Concurrency.MainActor(unsafe) public func clear()
  @_Concurrency.MainActor(unsafe) @objc override public func setColorForParameter(id: AudioToolbox.AudioUnitParameterID, color: UIKit.UIColor)
  @_Concurrency.MainActor(unsafe) @objc override public func adjustViewIfHorizontallyCompressed(_ newSize: CoreFoundation.CGSize)
  @objc deinit
}
@_inheritsConvenienceInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class CAAUSettingsView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var au: AudioToolbox.AUAudioUnit? {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@available(iOS, introduced: 15, deprecated: 16)
extension CoreAudioKit.CAAUSettingsView : UIKit.UICollectionViewDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, numberOfItemsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, cellForItemAt indexPath: Foundation.IndexPath) -> UIKit.UICollectionViewCell
}
@available(iOS, introduced: 15, deprecated: 16)
extension CoreAudioKit.CAAUSettingsView : UIKit.UICollectionViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func collectionView(_ collectionView: UIKit.UICollectionView, didSelectItemAt indexPath: Foundation.IndexPath)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUGraphView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var hideLabels: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public func configure(data: Swift.Dictionary<Swift.String, Any>)
  @objc @_Concurrency.MainActor(unsafe) public func data() -> Foundation.NSDictionary
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSublayers(of layer: QuartzCore.CALayer)
  @objc @_Concurrency.MainActor(unsafe) public func locationForX(value: Swift.Float) -> CoreFoundation.CGFloat
  @objc @_Concurrency.MainActor(unsafe) public func locationForY(value: Swift.Float) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesBegan(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesMoved(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func touchesEnded(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func gestureRecognizerShouldBegin(_ gestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class AULimiterGraphView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor(unsafe) public func add(level: CoreFoundation.CGFloat)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSublayers(of layer: QuartzCore.CALayer)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS, introduced: 15, deprecated: 16)
@objc @_Concurrency.MainActor(unsafe) public class CAAUNBandEQHeaderView : CoreAudioKit.CAAUEQHeaderView {
  @objc @_Concurrency.MainActor(unsafe) public func createTypeControl(for param: AudioToolbox.AudioUnitParameterID, valueStrings: [Swift.String], abbreviatedValueStrings: [Swift.String], selectedIndex: Swift.Int = 0, target: Swift.AnyObject, selector: ObjectiveC.Selector, color: UIKit.UIColor)
  @objc @_Concurrency.MainActor(unsafe) public func updateTypeControl(for param: AudioToolbox.AudioUnitParameterID, selectedIndex: Swift.Int = 0, color: UIKit.UIColor)
  @_Concurrency.MainActor(unsafe) @objc override public func addParameter(id: AudioToolbox.AudioUnitParameterID, name: Swift.String, shortName: Swift.String, symbolName: Foundation.NSAttributedString?, value: Swift.Float, min: Swift.Float, max: Swift.Float, logBase: Swift.Float, formatter: Foundation.Formatter, unit: Swift.String, additionalPad: CoreFoundation.CGFloat)
  @objc @_Concurrency.MainActor(unsafe) public func updateEQControl(oldParam: AudioToolbox.AudioUnitParameterID, newParam: AudioToolbox.AudioUnitParameterID, value: Swift.Float, color: UIKit.UIColor)
  @objc @_Concurrency.MainActor(unsafe) public func setVisibility(for param: AudioToolbox.AudioUnitParameterID, visible: Swift.Bool, color: UIKit.UIColor? = nil)
  @objc @_Concurrency.MainActor(unsafe) public func clear()
  @objc @_Concurrency.MainActor(unsafe) public func reset()
  @_Concurrency.MainActor(unsafe) @objc override public func adjustViewIfHorizontallyCompressed(_ newSize: CoreFoundation.CGSize)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 14, *)
@objc @_Concurrency.MainActor(unsafe) public class CAAUEQViewBase : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public var headerView: CoreAudioKit.CAAUEQHeaderView {
    @objc get
    @objc set
  }
  @objc @_Concurrency.MainActor(unsafe) public var graphView: CoreAudioKit.CAAUEQGraphView {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc required override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMoveToSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func tintColorDidChange()
  @objc @_Concurrency.MainActor(unsafe) public func configureView(for identifier: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public class var requiresConstraintBasedLayout: Swift.Bool {
    @objc get
  }
  @objc deinit
}
@available(iOS 14.0, macOS 13.0, *)
extension CoreAudioKit.AUGenericViewInternal : UIKit.UICollectionViewDelegate {}
