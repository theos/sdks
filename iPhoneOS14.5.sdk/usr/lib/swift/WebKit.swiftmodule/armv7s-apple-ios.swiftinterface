// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.24.14 clang-1205.0.19.54)
// swift-module-flags: -target armv7s-apple-ios10.3 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftWebKit -swift-version 5 -enforce-exclusivity=checked -O -module-name WebKit
import Swift
@_exported import WebKit
@available(iOS 14.0, macOS 11.0, *)
extension WKPDFConfiguration {
  public var rect: CoreGraphics.CGRect? {
    get
    set
  }
}
@available(iOS 14.0, macOS 11.0, *)
extension WKWebView {
  public func callAsyncJavaScript(_ functionBody: Swift.String, arguments: [Swift.String : Any] = [:], in frame: WebKit.WKFrameInfo? = nil, in contentWorld: WebKit.WKContentWorld, completionHandler: ((Swift.Result<Any, Swift.Error>) -> Swift.Void)? = nil)
  public func createPDF(configuration: WebKit.WKPDFConfiguration = .init(), completionHandler: @escaping (Swift.Result<Foundation.Data, Swift.Error>) -> Swift.Void)
  public func createWebArchiveData(completionHandler: @escaping (Swift.Result<Foundation.Data, Swift.Error>) -> Swift.Void)
  public func evaluateJavaScript(_ javaScript: Swift.String, in frame: WebKit.WKFrameInfo? = nil, in contentWorld: WebKit.WKContentWorld, completionHandler: ((Swift.Result<Any, Swift.Error>) -> Swift.Void)? = nil)
  public func find(_ string: Swift.String, configuration: WebKit.WKFindConfiguration = .init(), completionHandler: @escaping (WebKit.WKFindResult) -> Swift.Void)
}
