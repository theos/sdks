// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.24.14 clang-1205.0.19.54)
// swift-module-flags: -target arm64e-apple-ios14.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name _SpriteKit_SwiftUI
@_exported import SpriteKit
import Swift
import SwiftUI
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
public struct SpriteView : SwiftUI.View {
  @available(watchOS, unavailable)
  public struct Options : Swift.OptionSet {
    public let rawValue: Swift.Int
    public init(rawValue: Swift.Int)
    public static let allowsTransparency: _SpriteKit_SwiftUI.SpriteView.Options
    public static let ignoresSiblingOrder: _SpriteKit_SwiftUI.SpriteView.Options
    public static let shouldCullNonVisibleNodes: _SpriteKit_SwiftUI.SpriteView.Options
    public typealias ArrayLiteralElement = _SpriteKit_SwiftUI.SpriteView.Options
    public typealias Element = _SpriteKit_SwiftUI.SpriteView.Options
    public typealias RawValue = Swift.Int
  }
  public init(scene: SpriteKit.SKScene, transition: SpriteKit.SKTransition? = nil, isPaused: Swift.Bool = false, preferredFramesPerSecond: Swift.Int = 60)
  @available(watchOS, unavailable)
  public init(scene: SpriteKit.SKScene, transition: SpriteKit.SKTransition? = nil, isPaused: Swift.Bool = false, preferredFramesPerSecond: Swift.Int = 60, options: _SpriteKit_SwiftUI.SpriteView.Options = [.shouldCullNonVisibleNodes], shouldRender: @escaping (Foundation.TimeInterval) -> Swift.Bool = { _ in true })
  public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s18_SpriteKit_SwiftUI0A4ViewV4bodyQrvp", 0) ðŸ¦¸
}
