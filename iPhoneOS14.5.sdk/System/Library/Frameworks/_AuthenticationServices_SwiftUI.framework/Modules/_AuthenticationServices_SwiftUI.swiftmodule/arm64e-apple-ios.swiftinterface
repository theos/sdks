// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.24.14 clang-1205.0.19.54)
// swift-module-flags: -target arm64e-apple-ios14.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name _AuthenticationServices_SwiftUI
@_exported import AuthenticationServices
import Swift
import SwiftUI
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
public struct SignInWithAppleButton : SwiftUI.View {
  public init(_ label: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Label = .signIn, onRequest: @escaping (AuthenticationServices.ASAuthorizationAppleIDRequest) -> Swift.Void, onCompletion: @escaping ((Swift.Result<AuthenticationServices.ASAuthorization, Swift.Error>) -> Swift.Void))
  public var body: some SwiftUI.View {
    get
  }
  public struct Label {
    public static var signIn: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Label
    public static var `continue`: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Label
    public static var signUp: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Label
  }
  public struct Style {
    public static var black: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Style
    public static var white: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Style
    public static var whiteOutline: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Style
  }
  public typealias Body = @_opaqueReturnTypeOf("$s31_AuthenticationServices_SwiftUI21SignInWithAppleButtonV4bodyQrvp", 0) ðŸ¦¸
}
extension View {
  @available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
  public func signInWithAppleButtonStyle(_ style: _AuthenticationServices_SwiftUI.SignInWithAppleButton.Style) -> some SwiftUI.View
  
}
